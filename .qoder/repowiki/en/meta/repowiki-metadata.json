{"knowledge_relations":[{"id":1,"source_id":"d49bff69-88af-4082-b630-ea3ccf94a59c","target_id":"b6a60fda-abd6-4778-859c-3e87a509a4d5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d49bff69-88af-4082-b630-ea3ccf94a59c -\u003e b6a60fda-abd6-4778-859c-3e87a509a4d5","gmt_create":"2025-09-16T16:29:54.7764048+03:00","gmt_modified":"2025-09-16T16:29:54.7764048+03:00"},{"id":2,"source_id":"d49bff69-88af-4082-b630-ea3ccf94a59c","target_id":"96c10fe4-a630-442a-add7-b499ff7c39dd","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d49bff69-88af-4082-b630-ea3ccf94a59c -\u003e 96c10fe4-a630-442a-add7-b499ff7c39dd","gmt_create":"2025-09-16T16:29:54.9852762+03:00","gmt_modified":"2025-09-16T16:29:54.9852762+03:00"},{"id":3,"source_id":"d49bff69-88af-4082-b630-ea3ccf94a59c","target_id":"42c44cec-0f84-486d-a4e8-759c4d9d3eb3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d49bff69-88af-4082-b630-ea3ccf94a59c -\u003e 42c44cec-0f84-486d-a4e8-759c4d9d3eb3","gmt_create":"2025-09-16T16:29:55.1685056+03:00","gmt_modified":"2025-09-16T16:29:55.1685056+03:00"},{"id":4,"source_id":"64a7edcd-2d92-4cfb-9b71-3628f9c786ab","target_id":"d592fc62-3f25-45a5-ad2c-9e61bdc62eba","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 64a7edcd-2d92-4cfb-9b71-3628f9c786ab -\u003e d592fc62-3f25-45a5-ad2c-9e61bdc62eba","gmt_create":"2025-09-16T16:29:55.2763565+03:00","gmt_modified":"2025-09-16T16:29:55.2763565+03:00"},{"id":5,"source_id":"64a7edcd-2d92-4cfb-9b71-3628f9c786ab","target_id":"c378f546-b9e8-4b82-96e1-47be588d9bd3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 64a7edcd-2d92-4cfb-9b71-3628f9c786ab -\u003e c378f546-b9e8-4b82-96e1-47be588d9bd3","gmt_create":"2025-09-16T16:29:55.4291733+03:00","gmt_modified":"2025-09-16T16:29:55.4291733+03:00"},{"id":6,"source_id":"64a7edcd-2d92-4cfb-9b71-3628f9c786ab","target_id":"1debdde1-a8de-4c4b-a7e3-e10ee2a09f45","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 64a7edcd-2d92-4cfb-9b71-3628f9c786ab -\u003e 1debdde1-a8de-4c4b-a7e3-e10ee2a09f45","gmt_create":"2025-09-16T16:29:55.5012061+03:00","gmt_modified":"2025-09-16T16:29:55.5012061+03:00"},{"id":7,"source_id":"d781078a-64ee-4dca-a022-64e69f1ceb22","target_id":"edfc62d6-cacf-4fff-a769-922a06d19e23","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d781078a-64ee-4dca-a022-64e69f1ceb22 -\u003e edfc62d6-cacf-4fff-a769-922a06d19e23","gmt_create":"2025-09-16T16:29:55.6078802+03:00","gmt_modified":"2025-09-16T16:29:55.6078802+03:00"},{"id":8,"source_id":"d781078a-64ee-4dca-a022-64e69f1ceb22","target_id":"055e7973-0876-4d86-a4b5-ed49124ea680","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d781078a-64ee-4dca-a022-64e69f1ceb22 -\u003e 055e7973-0876-4d86-a4b5-ed49124ea680","gmt_create":"2025-09-16T16:29:55.7042917+03:00","gmt_modified":"2025-09-16T16:29:55.7042917+03:00"},{"id":9,"source_id":"d781078a-64ee-4dca-a022-64e69f1ceb22","target_id":"2f8772c3-1fac-47c2-be83-d7592b3ea385","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d781078a-64ee-4dca-a022-64e69f1ceb22 -\u003e 2f8772c3-1fac-47c2-be83-d7592b3ea385","gmt_create":"2025-09-16T16:29:55.775631+03:00","gmt_modified":"2025-09-16T16:29:55.775631+03:00"},{"id":10,"source_id":"d781078a-64ee-4dca-a022-64e69f1ceb22","target_id":"2b74efe3-1957-4d99-9b45-087a0755d2d1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d781078a-64ee-4dca-a022-64e69f1ceb22 -\u003e 2b74efe3-1957-4d99-9b45-087a0755d2d1","gmt_create":"2025-09-16T16:29:55.8420981+03:00","gmt_modified":"2025-09-16T16:29:55.8420981+03:00"},{"id":11,"source_id":"d781078a-64ee-4dca-a022-64e69f1ceb22","target_id":"7448807f-d431-4ef4-abd7-baa1e44b4761","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d781078a-64ee-4dca-a022-64e69f1ceb22 -\u003e 7448807f-d431-4ef4-abd7-baa1e44b4761","gmt_create":"2025-09-16T16:29:55.9576399+03:00","gmt_modified":"2025-09-16T16:29:55.9576399+03:00"},{"id":12,"source_id":"d781078a-64ee-4dca-a022-64e69f1ceb22","target_id":"58102d2c-1ae3-435f-8bc9-37e1228ae286","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d781078a-64ee-4dca-a022-64e69f1ceb22 -\u003e 58102d2c-1ae3-435f-8bc9-37e1228ae286","gmt_create":"2025-09-16T16:29:56.0540553+03:00","gmt_modified":"2025-09-16T16:29:56.0540553+03:00"},{"id":13,"source_id":"f1b7da28-8e57-4a12-8ee3-30fd55c31041","target_id":"8989055e-b60b-46a7-8116-2d97a0ccff1d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f1b7da28-8e57-4a12-8ee3-30fd55c31041 -\u003e 8989055e-b60b-46a7-8116-2d97a0ccff1d","gmt_create":"2025-09-16T16:29:56.150756+03:00","gmt_modified":"2025-09-16T16:29:56.150756+03:00"},{"id":14,"source_id":"f1b7da28-8e57-4a12-8ee3-30fd55c31041","target_id":"774ceef3-034b-47df-a6c8-c1a589f150fa","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f1b7da28-8e57-4a12-8ee3-30fd55c31041 -\u003e 774ceef3-034b-47df-a6c8-c1a589f150fa","gmt_create":"2025-09-16T16:29:56.2908033+03:00","gmt_modified":"2025-09-16T16:29:56.2908033+03:00"},{"id":15,"source_id":"f1b7da28-8e57-4a12-8ee3-30fd55c31041","target_id":"0c6b3976-8255-463c-b8a4-7cf887a0c49b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f1b7da28-8e57-4a12-8ee3-30fd55c31041 -\u003e 0c6b3976-8255-463c-b8a4-7cf887a0c49b","gmt_create":"2025-09-16T16:29:56.528781+03:00","gmt_modified":"2025-09-16T16:29:56.528781+03:00"},{"id":16,"source_id":"99b10f06-432b-4d8c-888f-9aa0dfbfa3b7","target_id":"36778d39-c6cb-45ed-aa2c-3ae4c70bfd9b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 99b10f06-432b-4d8c-888f-9aa0dfbfa3b7 -\u003e 36778d39-c6cb-45ed-aa2c-3ae4c70bfd9b","gmt_create":"2025-09-16T16:29:56.7270317+03:00","gmt_modified":"2025-09-16T16:29:56.7270317+03:00"},{"id":17,"source_id":"99b10f06-432b-4d8c-888f-9aa0dfbfa3b7","target_id":"ca3bc949-17e7-4ddd-aa05-7dabf9c7f4b3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 99b10f06-432b-4d8c-888f-9aa0dfbfa3b7 -\u003e ca3bc949-17e7-4ddd-aa05-7dabf9c7f4b3","gmt_create":"2025-09-16T16:29:56.8696703+03:00","gmt_modified":"2025-09-16T16:29:56.8696703+03:00"},{"id":18,"source_id":"99b10f06-432b-4d8c-888f-9aa0dfbfa3b7","target_id":"8a65be32-2023-4216-bd61-ca65979128e3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 99b10f06-432b-4d8c-888f-9aa0dfbfa3b7 -\u003e 8a65be32-2023-4216-bd61-ca65979128e3","gmt_create":"2025-09-16T16:29:56.9678427+03:00","gmt_modified":"2025-09-16T16:29:56.9678427+03:00"},{"id":19,"source_id":"c3ea6c6a-018c-4b97-936b-5adf42e06ae1","target_id":"8df9d489-adf4-40ea-ba29-96f7c5ea58f4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c3ea6c6a-018c-4b97-936b-5adf42e06ae1 -\u003e 8df9d489-adf4-40ea-ba29-96f7c5ea58f4","gmt_create":"2025-09-16T16:29:57.1774619+03:00","gmt_modified":"2025-09-16T16:29:57.1774619+03:00"},{"id":20,"source_id":"c3ea6c6a-018c-4b97-936b-5adf42e06ae1","target_id":"c42611bd-37a1-48b3-a8ca-3d24cc44a93e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c3ea6c6a-018c-4b97-936b-5adf42e06ae1 -\u003e c42611bd-37a1-48b3-a8ca-3d24cc44a93e","gmt_create":"2025-09-16T16:29:57.2513122+03:00","gmt_modified":"2025-09-16T16:29:57.2513122+03:00"},{"id":21,"source_id":"c3ea6c6a-018c-4b97-936b-5adf42e06ae1","target_id":"5efb3b01-d8bb-47a0-8f73-9eafa3fd7ac7","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c3ea6c6a-018c-4b97-936b-5adf42e06ae1 -\u003e 5efb3b01-d8bb-47a0-8f73-9eafa3fd7ac7","gmt_create":"2025-09-16T16:29:57.4006474+03:00","gmt_modified":"2025-09-16T16:29:57.4006474+03:00"},{"id":22,"source_id":"455d654e-d359-412e-bb52-6f5b50393d61","target_id":"5b624eb3-704f-4dac-b87e-2c642bf433e7","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 455d654e-d359-412e-bb52-6f5b50393d61 -\u003e 5b624eb3-704f-4dac-b87e-2c642bf433e7","gmt_create":"2025-09-16T16:29:57.7514024+03:00","gmt_modified":"2025-09-16T16:29:57.7514024+03:00"},{"id":23,"source_id":"455d654e-d359-412e-bb52-6f5b50393d61","target_id":"904e10ef-9e7e-42e3-9238-f97b863b1092","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 455d654e-d359-412e-bb52-6f5b50393d61 -\u003e 904e10ef-9e7e-42e3-9238-f97b863b1092","gmt_create":"2025-09-16T16:29:57.8941562+03:00","gmt_modified":"2025-09-16T16:29:57.8941562+03:00"},{"id":24,"source_id":"455d654e-d359-412e-bb52-6f5b50393d61","target_id":"148e981f-eba0-40e4-b459-1dc308be1781","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 455d654e-d359-412e-bb52-6f5b50393d61 -\u003e 148e981f-eba0-40e4-b459-1dc308be1781","gmt_create":"2025-09-16T16:29:58.0084346+03:00","gmt_modified":"2025-09-16T16:29:58.0084346+03:00"},{"id":25,"source_id":"d8b204bb-8e3d-4629-99b8-eb4579c3dda5","target_id":"93c62bec-b8bd-400a-9cf2-0f01bf890300","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d8b204bb-8e3d-4629-99b8-eb4579c3dda5 -\u003e 93c62bec-b8bd-400a-9cf2-0f01bf890300","gmt_create":"2025-09-16T16:29:58.1417173+03:00","gmt_modified":"2025-09-16T16:29:58.1417173+03:00"},{"id":26,"source_id":"d8b204bb-8e3d-4629-99b8-eb4579c3dda5","target_id":"fe0d3127-1685-4eb9-8d04-98b24104a6b5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d8b204bb-8e3d-4629-99b8-eb4579c3dda5 -\u003e fe0d3127-1685-4eb9-8d04-98b24104a6b5","gmt_create":"2025-09-16T16:29:58.2179477+03:00","gmt_modified":"2025-09-16T16:29:58.2179477+03:00"},{"id":27,"source_id":"d8b204bb-8e3d-4629-99b8-eb4579c3dda5","target_id":"6a7dede2-fbe2-40f7-9940-2accaccc964a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d8b204bb-8e3d-4629-99b8-eb4579c3dda5 -\u003e 6a7dede2-fbe2-40f7-9940-2accaccc964a","gmt_create":"2025-09-16T16:29:58.2930651+03:00","gmt_modified":"2025-09-16T16:29:58.2930651+03:00"}],"wiki_catalogs":[{"id":"ef603f06-6856-4aa2-8aec-2d99a09c6021","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Project Overview","description":"project-overview","prompt":"Create comprehensive content for this section focused on the RELOAD Telegram bot. Explain its purpose as a gamified energy drink collection application with VIP subscriptions, administrative controls, and community features. Describe the core architecture using the python-telegram-bot framework and SQLAlchemy ORM. Document the high-level workflow from user registration via /start to collecting energy drinks, managing inventory, and interacting with mini-games. Highlight key components such as the modular command structure, state management, and role-based access control. Include conceptual overviews for beginners and technical details for experienced developers, using terminology consistent with the codebase like 'septims', 'cooldowns', and 'rarity-based sorting'. Provide practical examples of user journeys and explain how the system integrates database persistence, configuration management, and asynchronous event handling.","parent_id":"","order":0,"progress_status":"completed","dependent_files":"Bot_new.py,constants.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:48:49.2197012+03:00","gmt_modified":"2025-09-16T15:51:49.6664178+03:00","raw_data":"WikiEncrypted:0MI1/XkBoMl0lTbK6t0Cn/+8FdvqrJ62ianMLvZj02dqzTho5arqNtbUziutSzUZOqm7yOpCxfwhmmzZqG/lBMnb92uxm81D7tE4DeVZHtZw1akadjUoCFWmEEciqo2MkRN3oWUfqhmLkKFciylot9Rd0D57an1sMUDMvG03iEwEQKj3U73Pc/NfZynGShCItRWFlRX4hb5nYhsxpvkfhAaGOn9BsARjx80d7SnQPJyniIK3VOoRM0Qm7f8SIyhtyWlKnhGvHyFSvLGTcXKbAa4ZjfnwNyDrZVNdgIbUV1gYp0Zhdv7Njo5F5v3t5c+Wk9wh89a7sc/p8VQh9y+6GZebqa73LY4Qg/GAXpq+iO4eUulSG9iycwuAzniocBwmWO1vPsT8EY3k2I545nXpZft5GcaE87kmkw5EIfSAJJdM7S+aH17pb3nsIEbqMJkHKES8rXbNKQt6v8BmnLUg+4xz1kzyEt8ruhqbyDXb7wU35Tt8iQNw/B44gfaxZALodp8vLgfdW2/jB37gRn6R9LK6RWzkg7BC6/nyffHoqZaO8eUe/na/TtLti1RsxusEiTRBcATVZo9LomqmjPc2tHar5cwl8eWCf3T3nV2YdrcZaCn4y3XrnYeROnldANe2BlE05LyDOtyqjc5M306SCiTm373Zib/q+tfJq0zLKz7qQyVeoldgw61MZ+LLXT8K/ozG7EpctiRyiDd87+algfFCfNLoZRREqEom959UKI0nieMlGoSLCHS1+p2oI7x5R4F8ijkxpZrzn+lKXn40vhuN7eElQHaDBddis+N9Mz8KHGK/vjpRRXMlwamAq9fC/Ms9fP5+ExFjTEzEt75hqQR7YvRxwYCSz+eQPjGXAsIN8RUzhAPF57cgGJyBMjXj6d2tP/9NFx3N6eJxc6XZFhw1q6bfU/uIEoqbPWnlxLsF5dIMLhFxddE/Q0U5hmocRsXOgvrhJVSaI3oaLtRAwa3xfX5sbF3M8A7hSUjXZ7vMjJ0vhuC3OQTr9h58zAJ7vdhVdNrJ4mbcaMrFhbiH2TW417CG9sGs76o43yUJWvaFxbvRAQRVlfk8Wc1lzNdmuQYMKQ/V6HBWoCzbmguxtTHnIYTgNAP0lRZSgY5M/sT+vkqw21xA+8JkSlOlCMQS43BHbP/v+FpfDdZCY5A4aQWdi2bfpUHWj/hAMMqEajGY+hcPCKt0Pc+ig0gwoCtiF7/lNAJ8W0jjN3QvBJ9ShhSKGWd4W0mZ9ymXCblbUmAqWX+9FozFwAEcqPSvGrjGk6vvQTAoE2s9cRH9P3oLej5LALIY19EVTKujnsNiiUHFgkxBvZp9gJ68QgStdXPVSPtonwPBHSkC+F7O/7n2wWI9ejthNk+6tIC3D7R8Jil9NBu8aSugQKTRDQ9b967N5cxABYw3+m6Wg7dEpEZbrhCxMYpSbvyYf40F5+yhy1HE3xTtms6D19Ig2zJDhcTIFSa+ngEx6EP5h4XE5iKlkKYWlOb31Elcgjl7o3XyJQ4ElZifLcX0UozvxlfmeFc7M8t/YwF06Xa+XpKV1pIocLoV6YiqHih50YUkr/PPewo=","layer_level":0},{"id":"9aecb97d-480e-473d-b467-abe7804735bd","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Modular Design","description":"modular-design","prompt":"Create architectural documentation for the modular design of the RELOAD application. Explain how the system is structured into distinct, reusable components: Bot_new.py as the main entry point and orchestrator, admin.py and admin2.py handling administrative command logic, fullhelp.py managing help content delivery, and constants.py centralizing configuration. Detail the separation of concerns and how each module encapsulates specific responsibilities while maintaining loose coupling. Describe the import and integration mechanism used by Bot_new.py to register command handlers and services. Include examples from the codebase showing how new modules can be added or existing ones extended. Address design trade-offs such as global state usage and the implications for testability and maintainability.","parent_id":"9512e3f8-5040-4b50-a1a9-968708efcfd5","order":0,"progress_status":"completed","dependent_files":"Bot_new.py,admin.py,admin2.py,fullhelp.py,constants.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:49:06.7571084+03:00","gmt_modified":"2025-09-16T16:13:33.3092967+03:00","raw_data":"WikiEncrypted:R6haB1SeBlY44pGM1lXrC7LA7na0QZLfwtXT3AtpSwuCepxdPPxp2gv8xZDug8+yRL3txodvNLmAoImqhXJSIf51x3zYS2VVUEg7C/lL0fkBbBBxXMdWiu3L9wgp1SDMJXR12Qn2cNunjac6GqIv9cAVdP81htWICRPrsksqFAmLYJgJdeYGHBrQUjcFK0rbAmUII9P7dPrA/OQrUBxlZ4BZ+P9+di/hWBi5UXbPjbFA64xWFFb8/EM7PoFhXSqziVjudkiDI0o59ZJjIPbJYsLJulGSRRw52PBj7XHeiesk3b9jSRXtRtkfTqdU9Q3XrvFNokyCeJr2slR6t7Ik495IRsqbhLXxvbuuJbRyIauGy7UmsLgtBZbcC74hRuiLNUlHodSxFRkIHLtiHN42kaM8MPmhPI+IvAuICjSEw5/l2Pdpv64beyhIImDxdXrWnE0OtiFSRYFtlDy9c3Enk3TYrxSZKWq5nV46ZTiYj90ayCR466oLRAp462hTzsjl1bSw6i3r5gf4sJe7yAtUWZAtLWUqUDOpG1tA+ERIG9EvSmokWReZbZQ+1ee1x9y7Ld+4TXfLdvDJ6ttwgkpD912c0U4VogBCzAHTLNv3I7r8VMyOSTDomc0rGpDSZqrGVgPvX5oHDL91H/p8CCgMR5L7mLWU0x4rSivjW4NLnLtIl9Q8+BW0ZVsHBJFXuQlLnuKu51x3SzOUPn2ARCX/WIpf9BS8n7EOcSnma35/KplU1Mcg7LU9FVVdhIq6K6QE+KqImOeRHEQdEsYwG28L43hAaYlso+QztuBhDPwtNTzwsYIRDQTLvqLF30X1wH0mq/3bfqtM3Ie3K3hC5gOLmtqQGWhhZS1cypBZUikDaCnlyZ+uBJH9yS7bJT27kcE80UAGnuj8RDna4HJxmm8jMSdt0kd8tREHbvw4j5Vnj84HD6Yms3xQY+DQJsKwPyZJyqwBzdxqQm11h4GymufAldyIEpnINIJgCL/+1zYM1tm85P1Scpbw5A8qCa/CcxGdhQuyMRVlL9Bha5F5j928ODDU2eIx6pB3z86as/UG+2pPnIK4zGUeErQjt81G9AoUDhL8YWb0KAV7VRtnSbEyBmYO2z7oMmYsFaeO4k50YDCgJ0plTYIxkdPr3Q3xNcIsiH2Tn5s9Fe1Dy2K2FDgXPLZFtXuIrMXuaW50+huGH6vSTyjnxb5jiaG/3FZSnO3RhYLQ2qfFTR93I8shEz6qG7GI+VXh891A2sLI12ZRteyGiEDXbC8UAlKxW7Qcb4fyKBLEsuQ2DR/buLIDDJmHlP3boiXXGVgYkARiHD+W6Fd+lz6rhH90PaE/4Iaca+XG+1NxVqNomA2BivZrj4z86vasSACX5vWORG31vlwB1x7s0shrTz1rkfG1Gg0IszkNsUqM9X+s5moy+PIaKXBiUWEn3UgtIlMImmPhXJV+i2fN9e4KRvPu3328tLW0MrbYtWz5kXb1JG9qmgKR5BMUJO6ag7m0+v9AMQhFbp4IH8nVyl3YkNnZY6y40enEOD3ZJ4gg8XxoX6gj8Nvc5qd4UA==","layer_level":1},{"id":"72422714-948f-4ea7-abfe-2c7bc897d35b","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Player Model","description":"player-model","prompt":"Create comprehensive data model documentation for the Player entity in the RELOAD application. Detail all fields including user_id, username, balance (septims), VIP status, cooldown timestamps, and inventory references. Explain primary key constraints on user_id, relationships to InventoryItem and ShopOffer, and business rules such as how VIP status affects collection rates and cooldown periods. Document data validation rules for balance integrity and state transitions. Include examples of common queries like retrieving a player's profile or checking search cooldown status. Address indexing strategies on frequently queried fields like user_id and vip_status for performance optimization. Discuss transaction safety during balance updates and integration with core features such as daily bonuses and mini-games.","parent_id":"5bf00e53-72e9-4056-9bdd-0e382177de87","order":0,"progress_status":"completed","dependent_files":"database.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:49:12.4796161+03:00","gmt_modified":"2025-09-16T16:13:15.4609019+03:00","raw_data":"WikiEncrypted:edXhH5kji6PgpO4LRzeWd2CBwmKf9AcqNj2LoSx7rh473tO4G1AX0B6M5MU8SpmTxozoqcB5u5MK08t5ayR8lPLAPx2usT+t8KGVXTqFyYskhQBXNXiRj+Rq3oe9YOIgauAbLgtHvntxXQQQT1qzwiyUpwzTvtg7+CTY5saYnXu0qPLkdgLiLux9KToN/1e4gGQ0S8GG3VKnDhMDNfktHM+rPNaPiQgXEyvo2f4wy8gFuvl/JP4Qeb6vvfIoIp45xsaJ/vmhjVcMLfSIEujr3k/rxAcj8MKCnCKoOUS6JNAzj0X1udmrFR4kEZMXUvVwFr1DfnWZLEhjzAEiFZR5sARjm08vjGy4dKBdxX0sNFII8H9YnKlW2oqx39X0yaQa3jCsJUrb2DiKhGK89V2iXm8Q5mX4zarwP6rvPMdZ7IIln+kLwUvsVvYKVxtEroV2y89WAp7pjZXGhEv/1qfvaGPQZfCo6KCREpeCpJ7SgNcgkMP5JXVWBhIWp2qxwDn9t7844tWFgUT1WUdlrvHw7EUsOE+z4D60QU6RnWq7hiKNXj/CgKlKV96/UJUD3JIaEXVmoq12kSgeoYhXMS9ZzK6zXEkq+Xb3u26FEQ3D0NjPINH86MtI1EhRzDr9QlgLhiQIytyZTARtk63+NVIPTRv5YCCIGd8Obvf6IOzwQHMMO4tXuPinkfSGE0VVxTDEtKUQb/nPa+ZoPrSM8jwLae4ESSpCWoC7K9qa9/odAUgL54nBKqowtNpwu5QruKq+cLVf6A+/9xKyT4bFnJO/8AjF641OMY5vvS75Q7oqa0Qp0ViplbPbPoccN5252T3bkg2r8CHniTNSN3LWOjVPJRqMCBwRitf8Gx+6j+Sh412zB1CTipusHoVZlozsm2/+HL6hnCgYkOLqKALejj7KBglf46VJ/O0HKKnQyFYC/AIB9ZguPiJffzh8XdRnV4KQLwEGIXulUB7UPqCnL0eGp01IrCzDpTR/IbGWOuAqGCJdsoxKqC/Ks9mcbjrw0ijcfaEFpw9lbuIgZQKPHi++c9RcZn6x33rIDYFFf8RLqRfHK+h8xBopKtYXqMunEPTJR4irES5ZlfM/6ek7/4zCTE80njJ/rJw71JfJG83JLzRwdbJVPJDYHvWC0BD75ZNLWT7ryh7QVrZUUgw8kYZAOmvc0opJlFORXWg71LwnBzF8ut493JV9s8/xATAKSjfi+I+dwIwQcuaw6/KjnA+xwc79Q+QI2LbPjFmVXKAIt5wnNTATSNNC6vpTCitsBpzoEZaxCNykGlRudu5qeFIfC9NmYzLGcuirvV9euK4cG0fAh6MiajkPPbE20hGE+9tPoQxa3EhZOgFZdpp4bstuAnz5zWbFf9LUgE3VumdNBuGWgr/2yN0S2YVxCj57TYLR","layer_level":1},{"id":"8b651293-a7fd-4fb6-a0a7-6ad19de7c018","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Energy Collection System","description":"energy-collection-system","prompt":"Develop detailed content for the energy drink collection system in the RELOAD bot. Explain the implementation of the /find command, including how it enforces cooldown mechanics using COOLDOWN_DURATION from constants.py and checks user state in the Player model via database.py. Detail the reward calculation logic based on rarity tiers (RARITY_TIERS) and probability distributions. Include a concrete example from Bot_new.py showing how the search_handler function interacts with the database session to update last_search timestamp and add collected items to the user's inventory. Document integration with the VIP system for reduced cooldowns and increased drop rates. Address common issues such as time manipulation exploits and race conditions during concurrent searches, explaining how database transactions and row-level locking in SQLAlchemy prevent invalid states. Provide performance tips for optimizing frequent search operations and scaling under high load.","parent_id":"4a32517d-886c-4c9a-8e67-2b407449108d","order":0,"progress_status":"completed","dependent_files":"Bot_new.py,database.py,constants.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:49:25.0127326+03:00","gmt_modified":"2025-09-16T16:14:29.8408325+03:00","raw_data":"WikiEncrypted:ZkKTA7CLvjzgsTgFJjocg8Pk13bHoKyGrncpeChrl8eiyniqHlDpMoP+FPGTRbrudaTYkDmjEcT8DkJMKbFwoqsMuKskwi+TmAwGjvzLnGHTNyDX8Fo6InrMXkE+ZBe81hez/Z4P/aVarjzgY/9OGsv8W/zkZzJPqf0Q+gAYBYQApmWRFo/SKgznmB9eVAUkEn55YjYMnXPQ5NCm77bnilq7aWuNRGI0TMBTawUtugEfOESSNEoCsFLQxr8D9s84iccSdluIMzMtARqH2m4J+P5mbSG3qyAcHRLALOqcb5J62hihFnqJ8+TCHj/YMRXqbKqlHXsZFu8LbgcVe3lfYjkOttZUSXoAjHVBl72rtILHdMTiST5cOYakPcMUGl5LxUiG2suzlAhzsgmQJKD+fqCwc2D0Ap0NQy4R3g9P2Re+3+AbduW3J7UMCnUHzOFQur1POq0XY89s2+Tn6lvamsFHFRrBbwhWEWYYPO4A90TUhNVJi+lHIW4xDUEOgyiWPuuXgfCeOMW/4PLD1JplmMnMPZjZ0IISkM+UmeturfHRJmlV01AoLcrNxoRKTJdSV5WnQy+snp7rlPeo5yoKsLYqN0kpDByK4Gfft2HkaIAiSXKzFKJJVdTJCfdl0l1MjdfbyGzW9bG3/H9VudFQATZCLGp3Y2j8nPan8FekTpQqQcFmq/W4drZVGcPNWHCX6FX3lR97HbdcJ4DrWNwa46Vndq5iYWn01gRYtGKpkoeep/Q3LvBU6WdnBPIAPw2LbSiYnXj2MdLWl1TW4X0xM17tLwGbTBEhf16b2r92lYyWcYaQ8LAPxf1alCGO9c6ukaAUbGkcZ+MwQXkPXqA906DHbatEcnWwS1C7Kcu+c5QgOk8nZE9XrfHBjXa+88T46ZQ/9PKA9nUeOBBCx/gi/APeTCJCiZ5lVpYmGRicxbcPC3bHBd7UEPFMgCFmpVXBWiKF69mPduZmWlv3oc0FJTfiGhqYP/c22gUNIcZ9lLll4tjVFa99bENfPY0XscWDlAPZTU2u2gNjHlNzqC1rc3GpnBUQxgjdgkLxI1f68DQePYlqDL3Ae/otxOfxeujZorX4ZzkAQQIlInBXXtD8u0sl8A9gvvcMMBQAx54zA7/A1TXuymNYIiYG6VH4Vn1aMl0J3KejAVoB7oCnw+l/EuNueYdlTCZBh4DzNrmEpwljtB6LrtoTvrEGdDwlDn4NTVF/oY+v44RcJfXinlDg3YIaXk3anpFbEsjrFXcgBW55SlnaPFhUw4G0m/bpZU6PHyU5Yikbn+UZy6dEhPVoJfkIAURQ/PifZ1n5Mx3I6aZt0rk4mMtWTe3YlUFnpfaW7z89MX7ttNukswnHEhvX7R+EzdiYYxKTb7/3NeZf3zNrpZfCkWMd3oUERp0hy7e9nXZJDMQblg3QV3CWoZcefgzLmHR6rYUAXkON4SBEFsjxsdKzrFpo1IZwJooC36eOfQyoDATfX+EvViM3Gt/7t5U1cj1yaNcHWFZkWYj2Yr/coizrxrB+4f8uK8kEgjA/w84s0ZtK+SJoQXDWFPXgVEAoYHjDQ1IwFJOTIfpwMN+MIrAdbck3m7zf4m4iEkUDPMgbSTKLJgqZBU9a6F/Wmjzu3UoXGTpoRkXROMTwzozs7ely/mmPmRpVvDfGGzeLjDObjphPzaX6EH+hu44R4A==","layer_level":1},{"id":"1f154fde-5ffc-42f6-bc36-784f9d3e547e","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Subscription Management","description":"vip-subscription-management","prompt":"Develop detailed content for the VIP subscription management system. Explain how users purchase VIP status through the buy_vip function in Bot_new.py, including the integration with constants.py for VIP cost and duration values (VIP_COSTS, VIP_DURATIONS_SEC). Document the database interactions in database.py for storing and retrieving VIP expiration timestamps via the Player model. Include examples of how the system validates sufficient currency before granting VIP status and updates the player record accordingly. Describe the role of the VIP menu interface in Bot_new.py that presents duration options and handles user selection. Address common issues such as transaction failures due to insufficient funds and provide solutions based on error handling patterns in the code. Explain how administrative commands in admin2.py (addvip_command) allow manual VIP assignment and its implications for system consistency.","parent_id":"db4c32d0-1ce6-4575-a1a5-af3ed86594eb","order":0,"progress_status":"completed","dependent_files":"Bot_new.py,database.py,constants.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:49:30.9506143+03:00","gmt_modified":"2025-09-16T16:14:51.9176383+03:00","raw_data":"WikiEncrypted:Z0qNLtwMJk4M4Es3ntTIAbmDZJsCg42r0ICGmysJ8TNXyBOzJrvrmUcgrOzLty4bphYk/8AQfLuhwnwiO/LsPX/B/C5RYBXJHl1D8NLt5r3i9SCUxoCCjUsxTVxfLFHm6XCnzsu0PIFKkBExxBajkXNsLLuwNAVabKFcavbzLrGxT048JxQv8ZNfC5T9nHsPBwa02MwbJ+1xCXHYpOIyyi7vlE8yChuE77nCpqK5vQMmOIJAINTfEb1o95dyQWVKgTVUpDvMi3KvBevzw6R/3ZF3H7tlRo+z3/6fRFyzDFIr8NDzK/y6sSWWt86bFKmz3ps6WZdQqKZBPyAnEug+dalXTTFgnNK5+Yyy9mH9vWgzywzC5gNDWv+5Fc1AYhggZskYuIncoefwnAAr41kYx4v8o0GPXxr3w/61L6cRwEGqWcPP0kHH95ManYJ1eZY8jgpon0VswpljiCccMD5REdccAspMeqBKtRlZ+FUZoDWCM9WipTEqm3Vizb8Z7wy+uRWq27N5HOHTO4aaK5lRQBsLsuJg/beZl+jc42DRW7ERTC3GfmtxZozAFhI6utaiFR8H4uZRybUue4rmO74Rk2NuG5nO/0dqBR2ICaGkjiZY22VTwCcsGWXKu6xt741383YFggJuFc5rwfiDAiwr6fycy9DAwRaG+F55fOEy4u7hKzp9vbPMY0eJmuTu7Q9LriRgtRAy6EdD6jsRFDx5QHQjNZLysjbxvMpX97jy6tgWIeAlGmKcWMLbuF4WmMEoM1VaoVuQX7yThBXHI1myD3C2U5FPjFIk2vUQABg+PlQ75i2fSG9rZ9LaKdkiBX8RfXnXMmCiOHfUCIxLeeAHPBumEaNjmxQZsbv1M7X2VNmvh4GB/m2XJNZKksSiO+t+h8vfUOXM0Wl/zcCN7zlSUggmTRcVq+TiTS1kjyApylazHAPfl5RNHG6qHiMkgHK8ljkdk3YsDgipZVlF8hiczvizSsMftjcUhwA1+8d6m7zug81G4xZSV2Ee0zZfCg/talwrz0u+qHooiH+6Iq2ItiO1cml8VEtikexPYAIdojyUpaRZ39+Q6SWspMxScIOgcrIGsbAbpAp6J6IxrIjrEYGlLKz8rkByODRGWQdKlNYbMFIWRsVDfzSyi5MLGZzQ5whOCsIAcIPOrLmlWONGGmv0vrkdaNFwVbpGO2p4dhsvmLITx3uEsje7cEfzrss8Oxc9VBnfMZWdZG1/8nE9ucVQon+TaGj4hIiMZNlUtw+rVC3YcM2rzPmgKcaYN1wRcXjzNYf+YxdjfTrfICft5FCPDpKOhYljZpiWVAHhmwT3GJ59DKk1WHhJRwGIJEpHORP4AQonhLZ+WivRa7/ozMZA+FHZGo4gAqnZiqBd1QicI1ANy1BYZ2wjiT+SZZS0mYCEYdfM8v2pfZ+bVgBJfcUHMcrymr485tEJOKlEfc1rw6QyDz7beypjwEJqvQQQv1+UuOj52mN9nHln3HyP5U/juikFxLNpOPXD2GAinDisjcJCa7oWE6O/u58x6AQGfuUaECapbm3Ds9dbWn8fdomj0A+UC67dXHtGCtiu0RQd16vMPSUwf9kSdI4J3kIrHXQkFPm6MtsYltREHnI2Ng==","layer_level":1},{"id":"198e2b78-6a76-4da3-9c7d-0bc511eda09a","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Administrative Permissions and Role-Based Access Control","description":"admin-permissions","prompt":"Develop detailed content for the role-based access control system implemented across admin.py and admin2.py. Explain the hierarchical permission model with distinct admin levels, including command access restrictions based on user roles. Document how the is_admin() and is_super_admin() checks are implemented using database queries against the AdminUser model. Include code examples showing decorator patterns for permission enforcement, escalation paths between admin tiers, and integration with constants.py for configurable role thresholds. Describe security considerations such as privilege separation, audit logging needs, and protection against unauthorized access. Provide practical examples of adding new admin roles and modifying permission levels safely.","parent_id":"6f9732e8-8190-4a70-a80f-b193a35c399e","order":0,"progress_status":"completed","dependent_files":"admin.py,admin2.py,constants.py,database.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:49:40.2410916+03:00","gmt_modified":"2025-09-16T16:16:07.2976227+03:00","raw_data":"WikiEncrypted:WWG9qBb74s3FuYyeVUFZFMh2xC9HnumTFzmfZO98pWxS+nic4uyNcYGtDeW6YCsF+RIkCSUL4UsCOOiho9+Ws8WwfQpQNV69L/9K4Lv/2SzDUoMlzClk1KqFpjJG4dueBWLUjm3ficTGiZ+0TDMzTBJ5vGOekCIqCpSNZL4S6sbDgwqdvUByMv48C1UIm/q0hudXkGT4WG/5y0QxwccpqT/awXcgQxK4Co/dD+v/W1iVL6P37F2Wq1T2pG578rx6OwYADIzlElN944AuFCNYmSaE9fwhClYxETvRntpTd2ZpMP1nZxN1N+i5IPpO9CkLomt3qAft/BVCGOnMUCNxP0u+PDvGBsJwkBBvnaegBUS5xEIgVOEsahYlIu6HRxeuXiS3IjxHNB9gfYvm+zWzoIyfCUBDZIAD+7qqhoxjp0n5TehrGsRs5Osm43KEm2HWbC523uA/D1ogNejy6trgeDm31ogwl9ITUB1GTqSrra1S2i2XutHL9Jg1TxfCFqCnFL/rbC+lFK+eRWY8Lgs6eQG7meob0kz3i5eiNBhzRGHApU4gP9+ofEvb4uGP1IDSvJUgwR14CWUd8F8rJHwAbIjgfo5cVjeK315n9AXOoe9m/JIrpGmroOhhoB7rHwb5d0dCiJ38SMTOiZA67XtpKYEdVHjWnNf7y/YWctYTbRd+P8EEgNl0k33AcFwhQCkSB6ngkiAmN7xIgVwjZJStY+LXZMrniXdcQb1XtDDhaYdjpDTt5t75jRrqyxL1qNQ+BrDB8dHSvUhj2xQU0FEBYA9INCQEfrezSHGPEiVKIi98fEnZGDIM2BipdvJ6ELHodpgQeIQIC7r26uLSdPGoLX6ONdU6JIJu9+hQ6VxQXjsMbGfSd8fwnxQcYj4e9ddb+8pXfZ23KJ2rghTr9/cHuxKSYcsSDXYj1riN/9zGg3vBPAi407Fc/JAQUnAoPrkxrMzrwCEixlAWQLETuKYPvjJZU0UeUXdgz7DU9YER0OexPixf0lLhDiwt2gAz0ClTaua0iIJF3hGlox8SPdwpY9psJk5RrkGMwlcbg8N0jzvrwoAKrYZZURY4p+fh1EPZcPOVRdLP5iXzMVL4PyGYMK0nxpy5QHn/+sIYHFlKMHgNvXaE+vX9kNwn0btrxvv0+SmQxEg7jlY5vn61E/D1tMEwvmTMeXAKwfMuxYOuKo4BafP6TcR2ZKDrvyt8z66mnMPGsQgJDfNhHfILYLE/zdnLA3AvH+is4aVjl57HQGBakxLZcPYb7nJKzfaWdCbIRT3yw1XZrjTs2uXQ9l9N2FjY7LIoYP7ktKXHLoFrKfA7orW2/fgqaK08jPbcQvgX6rmXjLlVU10L4nfhk3hL5aJXIuzqUJktdJx4xf/wm5WCM2PRrPkyziHgsEKCALQbqRuA2jt4JYY5jKHiR+PENmG1tGjxD1v9ZUyQ96YuiIdZ/vewNG44+f0vWNllpc3K","layer_level":1},{"id":"cfd51115-07aa-4d42-8e7b-cb1b06b1a563","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Currency Management","description":"currency-management","prompt":"Develop detailed content for the septims currency system in the RELOAD application. Explain how currency is earned through core actions like energy drink collection, daily bonuses, and community activities, and how it is spent on purchases and transactions. Document the implementation in Bot_new.py command handlers such as /daily and reward dispensers, backed by database.py methods for updating user balances atomically. Highlight constants like DAILY_BONUS_AMOUNT and TRANSACTION_COOLDOWN that govern economic balance. Include practical examples of currency flow, such as claiming a daily reward or receiving collaborative plantation payouts. Explain integration with the VIP system for enhanced earnings and with leaderboards for wealth ranking. Address common issues like race conditions during concurrent transactions and describe how the codebase ensures data integrity using SQLAlchemy session management and locking mechanisms. Provide performance tips for batch balance updates and monitoring for abnormal balance changes.","parent_id":"8c3bbf45-7ed9-4c9b-a56e-d0c3f40e2221","order":0,"progress_status":"completed","dependent_files":"Bot_new.py,database.py,constants.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:49:50.653358+03:00","gmt_modified":"2025-09-16T16:16:17.5061068+03:00","raw_data":"WikiEncrypted:yYhjtkeuUf7FDjJyOXvoylr40B1G3r9TbE9fg7cXAmid6IBP2y+n9VeqF0lPMNi8NpFT0T6WZVns8TXq4M+m5q9HG4PDJ4v0h2EMywrMboMZGyGrEZU9tJyjKw/94fNNymBqH9tTMeBFgDgq3ObsE6s5bM8dpLfs24wPy4DdrAYlQHu1FYdRNsYpUG5qzZ1vY611BMAOWm2spXEuEmRpO2JBx0g+JnK+XTzQEy1nRiYl8bfo5eo3lEz1Js0lllTIHx18sE7KYccP9h2xv/LFz9Zm0DJPvfCj/0mV7yGVesCw82iJF14QB07UKacn+GpF3D8VRaOpj/ttNPR16fo4XL9aexOVJ+G0S24PkyuMwoDB50EzXQvhIfIkB7wPwsOpT0HrZqhQQ9FATRwlmWYo8vuVoxE3IXXoNtx3ANlaN6tncwVcxKkeLVMKC3qArjZeDyFOYnl1NDTZOuoiV60/pjdknDakKozydTQ6EIksouYZ6hC3ikLJCWpqKdIwXi843gGwqMhKWuTap89TP8Q9yLp5mXo5BZKpVErbfeRT75dJdqI6xOvwv4PLYa8VDEDBdvXAgyaj4jOo2DwufjlViKb3NTupUYzvaXCCXAFLZBA6oAVW/CovvjO1cLlCJqfltV8JFAX6ysteegkxNIQIkn5rE6j6vWKTyneFcPpp7N8Z71CZQCI67KgjgjQmTLHyft+WJlCTmjdTWtCThBbv4KbX0XFd3KEF3/GC3DUZ9xPsDJugqsyUAMmW7tVKxUur8rCdd2qUr7xFs4ZghR/sgV9kfMcW4EZpiWiYohGG5/b5NY0Wcm6D6YIpRlDAsQLDD+qKuRKJsVfjHAVpvBF7OwjRnSVSIDnkKWIdOpk9oqYoNlcyUwYA6aO+T1BX9X3D83uc1nz8LgK19Mi8ADg6hDSqRL+G4QZS0ZGths6Buc8F7uByLAoTtG3QZN3YKEZgheRY4Y/SLncT6uS9/OpP2L4qW42MWzG3dQEL3QNlUuA5HIimxFfPp/56yOWqb0epMrFui/Czk8RLHiUGfuYn6u9eVQi4UclO8pFfEeptdn52D3kcG8RasHBRjjDZwNeaDvIxACJuTxf8InM89XQBhCVSm7KU2dPvBsCyfai3PLCu15wIe4JBiY++l+0/mdGxmnWPmVoer7ZjcU0e6qedvA6MLFw1y3bXergtCGmClxJrUuQRWOybquslhWxgeohyz90E4ahh7/0CVeOy4mktfDw1NhJXARZFXY/bACW1ZtywQk7zki7SQo/0KKH5yJmZi4P7Y+wS2icthRiYtUlNYZw/JzfAm44w5QGwKh6hi/jgfyi5k+wObQMxGANxPaX/rFX/mUudAl7/u8sAG1oFSa4qRO9v5GTFo7eHI1SFAReEQgb3lRLL2IIrE7EyZMq0vJD+wZGupCtBCandAgO+r8sqhTsER5SLeD8Qje5RjrEjq5H4OSocm1Q1gAltesMDUrs4oMScR8p2N3eEiM+9ABrYaILRVVy4MB+QL3kw8CHW5hiznl24tLOGgNo6JDWPEFDbQ9Wbt9oV6Pc5vyQ4aCB3V3jsDWgVgavo51Z/mj8SHQA0FRY14dXKER8vmPESuxaQNBhq6P+hNz1noUJYItjLKlAaUxMoPsUmHGwublmmJ1mVg6AN++2xAfUQzprdOEgyehI/gw5qFRQt4l4OjMtmatQLswF8MSbb41tptM3N2Xf+AgcA3c9akVHaQUr0tptz7MnbeZwm7qI71YdcfQ==","layer_level":1},{"id":"befaadd4-3a61-4c16-942a-aa59c8025d8c","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Community Plantations","description":"community-plantations","prompt":"Develop detailed content for the community plantation feature implemented in Bot_new.py. Explain how plantations are initialized, user contributions are tracked, and growth mechanics are synchronized across participants. Document the command handlers for joining, contributing, and harvesting plantations, referencing relevant data models in database.py. Include examples from the codebase showing state transitions and reward distribution logic. Explain integration with the inventory and economic systems, particularly how harvested items are converted into player rewards. Address common issues such as race conditions during contribution and provide solutions based on atomic database operations and locking mechanisms. Highlight configuration options in constants.py that affect plantation growth rates and yield calculations.","parent_id":"f87ff516-9343-41a7-8fb7-a226fa04d02e","order":0,"progress_status":"completed","dependent_files":"Bot_new.py,database.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:49:56.7275252+03:00","gmt_modified":"2025-09-16T16:17:24.3206455+03:00","raw_data":"WikiEncrypted:vT23I9UGPjRzbyJGAxGwD+iZ41iFNE9WkpuhshkT0TJBisrZhgTdiEPrUyCucAZ/WWReslWMDjl+DY+uJyZlCr3KEFzT5dZLGs7Ph/RAXmWwGkPv1FzCU+sHZ8zqAfLXNkojhsLPJTeUDCcQRpUBDsPujLu7llAq0eQi8e0fquhFBHOc1S4JZMOAlvfli0lLtpzFGwlm7bPi5RdCrh57/IfVmJPc+sEq/bK3fU6s3qiUgHEXzJAspT3NZBHiaaVgymK07Efqbxg+e2bDa2IEauPeEK4LsJB3rB3O2KdoMg0oAy1XPQVSOjYoZMQp59hOJbtlvReBrXaBrpwm9biJVMsFVkHdz76wWuYil4GtNKSD3PVNQam4wh0LJ2V4RkxTYsXpqu9SQykLJgyqpziPzpr2dxhd0G7JFNrZ/H4zvPynfraeFHTnIDTtjU3bd3alytNBmHHlq8nde5ZjVDMo6eVwXWU8XLuNImJn0ui048N79ZPmqxeizRbiM0kQhkBPnZiTOF3W1aLgp2/OdA7/D8bb6KqBhILzwlJ1f1lrdFPceCl5io0PefUz6eSl0m6Ez3sdZkGmFKwpxokuvW8TLOofpqmsBj88eJHr+1iI6TKzHvkwcWkvXc1y/1az9uLBkHnuIKgLIupT+Dau3k3Vy1YgOekE5Cr/0Nlaay/EWdVWNU2k/MXrlr8kM1AYHgCB1qcnex9HJFbmpLjyzc6QV678A81S3bDK80u7GVQl1acYl3FsNM60FqzTs2v/5CdnkqAh25B0aAeG+SRn0qJ0hZtHAkNtGYJPPHJbUID/djjtdyB3Q7+0IehrjUUzfkkY32/+lyTSgfCE0gfw7iv42Hfb8wRMKixmjX5qQbJH9EGlGOYyY64VbPjP2KMo8Laz/EOPk/nc26TTWNmtNaruIpLk2taMxsv50WUjHg28b0iR5fMDjbX3kl3G7Me2DAXQEjbghbuU/mUv3DHyxnDzdeSFvH54bJ6ZtbhRFyKSWGlqRmkf1t9GqZaAsGdRD7YLQr8MiTCSmEuJ4deE76Rggl5wUsMhTx1J66FadxI/lIVETKaV4ZyJTywHn+iZCQmrA3ckGuPUMmGxYTMhg/Y88naORvhqoe6vT2l7b557GvxJuKYqcemkRAaaVluGP9Bcm33UE+l/4f8khPd8eV/oOrxoYRPqMcvjdFxgPfq26kYPlWK1mxJUxXTnjGQNyfo5yVS1DWvxxba2KcIq7ESkKs5RUXJcFZT/kyfX1mk7ZsAmbX4KH8M+iwUgfeJIpUK9SeRm1YRCDKnIb17XJSo8sCaPg/LbHIItHTG2YQOJUJCwJIMWEGfFV72YJeb1vY96hBtgurpGr2cvJaHRWEjsnQ253Z3s65w2ijE/RwkifKoyCeVEV8EijUpENDsMzd7hAkkPnXcyeROWT4yanYkL5yfzAzS8ljtQH3j/OJ2vCxG1aVwjldXPfAbYpCZIhcFsXww2X/AnZRPVaWiokdhL1KQnTodzD+g51aRaeei+BvfWPLaZIrj0U9gs4UjqoMfb","layer_level":1},{"id":"92105073-52d8-4d9f-9e65-4045e8a46e4c","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Casino Gambling Mini-game","description":"casino-gambling","prompt":"Develop detailed content for the casino gambling mini-game implementation. Explain the game mechanics including bet validation, random outcome generation using Python's random module, and win/loss probability calculations based on configured odds in constants.py. Document how the /casino command handler in Bot_new.py processes user input, interacts with the Player model in database.py to deduct bets and award winnings, and enforces cooldowns. Include examples of the payout logic, risk-reward balance, and integration with the septims currency system. Detail how VIP status affects maximum bet limits and win multipliers. Address common issues such as unfair win rates and provide solutions through cryptographically secure randomization if needed. Explain error handling for insufficient funds and rate limiting to prevent abuse.","parent_id":"804589c2-9519-4f4a-9327-7d761b038df1","order":0,"progress_status":"completed","dependent_files":"Bot_new.py,database.py,constants.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:50:07.7695001+03:00","gmt_modified":"2025-09-16T16:17:41.7662695+03:00","raw_data":"WikiEncrypted:FIEjvCEnaPoTNTn9iY37XnQ+0pVXnfTyEBLnJtEPzJv6/q0yV8LJN9+pcilUVBgLMqabJdbbRxhPdbYQMMPQl+KQJYIj0KNlaaAQn0HGAkwU+foH6UTJrU6JxQlNjW5v0W0oiMxKEVUd9wwibgbmOBwCvjQROAh3LWkwsv3H5FDZ64B4mHEh63+x0RnXAd0loc9zZFEzfxBYgw5emt5tXZYbsS2gtmcDlRCLno3NRJBg7hIhw0hsS1fULZloyXDnubZBeWm26vftudxrMCzbYNSp62uC8TFH6yMcRdVDy61ubx81Pfg8L8u6etWuYoLYYgFT6QsBa05YBx6U/g5/AXyjRrphkK2MFYXbK9uA7RSeyzn/u22Ye82ssvqMJxTrW2AiUUmiyCayYZg82qUge+qXarar3GOsq6HSx4f/2/AKryqbzzIedqCPmAAR5JM7Ck0t9rVad/0Cz4yj8H+DvhH/geaucBMPpcknVM10LNlF9hn0mVHyh5Dm5KKA4lUzG1F2OfS9CG3pCyL8os6E2XKGWJA3wsxX2qVtgtkH1Y6dYjDWAfgCiL9WsaZsvGcUagEZa0YwFFQ8gWMN3BKDArE3zk4b27NT1JWHmw8I5x56n5VHdKrwnyTfXHO5bp7MYk6pojPzdlTr4zsGDXTrbFagktIis9gtfpOrbfEQA1VhEIHr0DwkSQ+pFrWCyvjh7guIs6GCU5HJ3DoMKLGjTlpVZr+C2cd4Y6pSbNNxlZ1mI51+7qgGbMVMTXthuMqAkgaxXKtmo3Ibgnhm3/20N1ERtw5UT/h0eTg2qHwWWX2hXmMqpj4yvG6ZleSkAuQxdtDTAg9AE48TLfgyQxB9laXWNg4YeEVQug+hkHi6BlXpkEOzgi3kFToWY57jBXTniglsXilfIdIuzdjDaUS39T+0dsRY//tZrtujLjOBORf5EMBg9yJqYTB7FYF0CIw87QSO81u/PguJSar5l8tnY5IyeJTJOCMQ2Ur+3sYEK86FMmADvHzyyaTlqiTjOXfJX1++KEsUS2OKdzVicsDtR+Vwnzp8JshL3PLjoH1Agje+8ChH9wrh4rHTZvSZVMqHK1AEjmd+jDauqevoqVNq1ChZMFAVLAn1IHQoGLIHTdrTlBahjqndpyr/qvW1cRaLWiON/ClrUAIqYA+FtaW8RBXCUSejP+DX4Yqpy2NAAgxali3JldmBX64jJQ7ej/IoVmqEfVQguP801GCsJzH9QlmLTGN/H7L0bbyjc2Ll1QDnIfFyJf8B8dOG4o+70ao5CBAOUXTwqJGDBZfeTXKIZMEi3RkjqO04kEpRTA2VNVyLpPuv7r5AaKLiQtuYCWnzefQdBYgAc5caemkxvTRf/rYQhYQGcsIOjQNtQTbCNYEZ9nIleFKKRIcBhcJ+vYFNFcMyEwpdoWe2q6S2IHb2aPoJBCnoQD94CX9khWgKtn6bLpIiamgPpD612Kx4bUU9","layer_level":1},{"id":"60a3138c-7364-4b12-b8fc-272ba43ede8c","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Technology Stack \u0026 Dependencies","description":"technology-stack","prompt":"Create comprehensive content for this section focused on the RELOAD project's technology stack. Detail the use of Python 3.10+ with the python-telegram-bot==20.7 framework for Telegram API integration, including asynchronous handlers and callback queries. Explain the role of SQLAlchemy\u003e=2.0,\u003c2.1 for ORM-based SQLite database interactions and python-dotenv==1.0.1 for environment configuration. Document the integration patterns between these libraries and the application code, such as how database sessions are managed in database.py or how bot updates are processed in Bot_new.py. Include setup considerations, version compatibility, and security implications of each dependency. Provide examples from the codebase showing import patterns, initialization sequences, and error handling for external services.","parent_id":"","order":1,"progress_status":"completed","dependent_files":"requirements.txt,Bot_new.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:48:49.2765357+03:00","gmt_modified":"2025-09-16T15:51:33.3166573+03:00","raw_data":"WikiEncrypted:w0CkdCdnXCcvlN5xOpiEhEX3U68GI0Ngj6azFMJo9xSXD5adKnu6Qo1t8CLnFs+ZY0/59wSk5TSFXlSmTJZmrpXVgL8t85CsMGODU6uqFrTRTm6MY+e/+CYcRTarMW1IayOr7le5FKcXJ7QgIvCkEr+YM1DbCozU4KcAKehAfKaNwiQ/716FntMoP8eauubRxgl1MCklQ3k7kAhm9PGw0ToyXywoy4wasCwLTilgYKWBxa5KBo8+1ocoLLdcskeKY6qUypCIOlmhUfnvR62kW85KUyjnotQi+YtWJSTYRzhnOrkv2jS2xmIp8Vk4sp5jTPJ3KL3+gQsTIVOFzd4dY7D2rmNAjzyxzwzxAGeiz5sawD9y5KIvhVNgVNYyrpcYPVlEL4YecE59LYXg98Y/iAHLDfFsdumtjrLImIRfIYyNG+eQ34WuLtrY7d6o0t8zjLnLHhiden3dbmC0HUQQioompsKS1UJwra18mmDLsQ29Yj/OotrjZKOzpWK21J8vWvIwHWGucZuKFIRwdZXjLCJm3u4nw9J3Dj5x7QwQA5OMMS5vs/GlJ98kXMR3ITexWDi+/UNQ4c6UsC4AJcvtrPxoZlb9VLrVG/HSLHHuBW3buGXL6tYW3n+Lc+JYUfvbj/dHpZkFp7mmX2Hg5uI1GXAwQh9cdtg41dZnOWRPJa+qOgIIjyXNdotY7u2FizFeIqzLVwXmdotUX0wm566XbK1DHiHDrj2fn4lHdyfX24F7TT4ywOsRDjp33EYhJ0dXE7+4bxBCKu7vFc40ecMPNCw3lhbVZchuDN0o65qeYLKUjMpTYm0CUAEj2rAEYqCLSWgbbbQrBdbs3TesJRtAbSwP4u+PraTs7gP5W4JGuIN3hDZSxFICgXQvsVLY995rdUv5YGxbrLwzIqbTpJAC9FBfJxm9g3TzasLYZg7hF0n4Ib6laNjqH+//GD5hGvsXJNqOhC6sETyFVG3/mBTC3lOm2O4N6F9DW2eivVqhFicQTJp+5UvjT39IF8z7OmDKBK9hF4VyJ/fTsORE9deZ1kvbI9uA+bRnFdcIlQzl6FNUOK3gr0A6D6cIfZUPvsmUqBljj/m+LzEHeroRnrlIkcMK05DDonuiyupHkmcGXf7ClUxwZQdE4Z7IhkIuZl3sWixybm5A5mKC8NezHaAUpSYvEI8GDXjEhibcFnK76z7x0tqgEJ/8HB9PHnJw0EFH2fDmBT8dnTqenVoez1IdkmYoQoU9sAr7FdeoESEPAiLiyG5+grePuwOjgjD8600W1GkBfu6OpskjR/Ov8dGYYVL0zRIAAcGv4kapwTSvbFEXnV5S2C66ef+ideLcWtWjbwm6E16Cns2zUk8IaK1wRG9ojVjiZek7QUvqbbn23tF+XREdnS5lCwRd/gLNdtKHHhqP+u3bT1SQ4sC4/wHKiYtN48jIzIwAvldE1wcrEwyfHAlRVnKStvKm0Mqzm+ZO6LR5x/RJKfLHTZsTrF8mbsuHYMv8HhHk+F9gCkTWVXU=","layer_level":0},{"id":"55c80647-4a7c-4e66-9975-d029693487c4","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Component Relationships","description":"component-relationships","prompt":"Develop detailed content on the component relationships within the RELOAD application. Illustrate how Bot_new.py acts as the central hub, depending on database.py for data persistence and constants.py for configuration values. Map the dependency graph: database.py provides ORM models and repository methods used by all functional modules; constants.py supplies game parameters and administrative settings consumed system-wide. Explain the role of each component in handling a user command (e.g., /find), including invocation flow, data exchange, and error propagation. Use sequence diagrams to show interactions between Telegram update handlers, business logic, and data access layers. Highlight patterns like dependency inversion where applicable and discuss implications for future refactoring or microservices decomposition.","parent_id":"9512e3f8-5040-4b50-a1a9-968708efcfd5","order":1,"progress_status":"completed","dependent_files":"Bot_new.py,database.py,constants.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:49:06.8251055+03:00","gmt_modified":"2025-09-16T16:18:44.5828119+03:00","raw_data":"WikiEncrypted:4Zqjl5aZEo1Vv5NKBpebTkLBAQ4UlnuqN3hTlv4oCFWeSdD0r6t+/tn9Byy9mRSP+ylqTUfKigbqGXfhgVW5Dv0aCsIFZvbd6IepZcM14hzdhJbkG+3jXGRWedonL70z2YSWnCFsRYolhLcC6zU2iYmpYPbetdGym28lGX/QW3cbRjhCpmPznD6GoKw/dSu2WH3OPmug3l+37LEJcA4Z2b5ezLjQJcC2M3eyAnLoVUeP+HuKWOA3bndzpqqKRReLWofLhmcCqfxtw834yKe7o5EpUam/mLv81SPC7oD/Y+0Ith5cwlutCy4Zil/oZhu0VHLVtXpKOBiVY33EtdD33dIxrCpqEdQx7/XdAm11wziNrbS7MSRZsCcVqJUQMG+H/c7GCZCY8dc5/h7bGYubMqPjYGGHdu2UWOyoSgtbS6qUw4uPEOMDYD3ovrTXDwkaWOweUaS5Cs8314y30yPMdwyUaRqqNy7bcoSxAZOoQSwb554gwuud9vSROBDUdkxYMxnX9REnOC94ILAJ7LD9lX2AlULK2vwoN4HNB3FwsMm8siGspKl8dfZYTaAfsQl4LCOzeniPdTQZhPsNAcKUkNHmaPp86xTGp1VGMmfjLyRko53wAoSk5IlRkybSWbXmAUu8a4ZZ+hBor8tB5/lMyWwwrh5Nea+cA+MbsDBOWUPCIfVruLDdU9jtW563Un3UR/+MA3R/kkK0J1g8sudNgNmtUeWgVaXaBvuhsH/49NK1Mc2SlfSW9dnp/x6jCq3vBV7QvsTdRqNUtW/1MnBfGJBRhh/9nPk4NT5LFCDw90ZNxIEDWC783DUyIIBLmRN+cfb13lzzhRn1ivqurnZW1NdK4jIN7Uy5HEk9pVeCWSl8XIJwrSM7LZWmAfu3IJgH5Car1+JFOvpPcWnAGxTgSEYQeCZ6nxlOU93MeGWBLOSKpDtZFGvx8qKL3BPV8uzQDwRnh1RRBuR0jqkjuEG7jD+SH0R8U0IEBF0tCaACVwwpaGiDlsrnRo9ZYTgS/7C9bhMIO/NwNoK2Ri8ZFShca1/MxTN476e3i7DfGqueewxirGM4qboLUZBka8tuK95LwyT/l6UoO+PIe9edQv4NElgw8PnYIui9vPPiLSsQPSr3tyOQuBQQe6KfCTF61ndezuTifP3Z3VOkSCJ9QRhgcc5ApiyoBwFLQwlOj4Zw/0ORx3vMuMElPKXCVDnXyqt1zOTq2i0iwEApT0FbQJTut0lD5iGGI8KPDR6vrVMFATgW62BEbirITvHptgEuiJgB1wowCX1QRvqYqnHsLxJ8PfLoNhM9ay2/o/kaCjQ++4xQyphIjkLSJeg+qPQHpFEG9kwxdTmTW8CG1Svb2IKOAS+AeDiwc9WpknTQ4uJ471kr4iIr1TIh6cVHoUuO2l5dFdpkZxbSsxnCqoxpalr//JaUP7GQhuE11nAcCdI8r6eLc2RcxTUjYWOiIkz4NFIZNBsr+pFj2XdXlSbOoJnqIw==","layer_level":1},{"id":"be750e84-202d-4d20-9149-e53f552a8478","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"EnergyDrink Model","description":"energy-drink-model","prompt":"Develop detailed documentation for the EnergyDrink entity used in the RELOAD bot. Define all fields including id, name, rarity, image_path, and value in septims. Explain the primary key on id, the uniqueness constraint on name, and how the rarity field (Common, Rare, Epic, Legendary) influences game mechanics such as drop rates and inventory sorting. Document the relationship with InventoryItem and PendingAddition for content moderation workflows. Include sample queries for retrieving drinks by rarity or finding pending submissions. Discuss indexing on rarity and name fields for efficient search operations. Address business rules around drink addition via add_energy_drink_new.py and validation requirements before database insertion.","parent_id":"5bf00e53-72e9-4056-9bdd-0e382177de87","order":1,"progress_status":"completed","dependent_files":"database.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:49:12.5526485+03:00","gmt_modified":"2025-09-16T16:19:07.8173328+03:00","raw_data":"WikiEncrypted:ZkKTA7CLvjzgsTgFJjocg1g0/w1Lxjcf9QKJ4RhMu3asD4r8PvOaE1fGMto5TZw8cgg1WoUKDSYjwlVbqKAW0ZiRGqBu4ZOyB42ngfPjC9tQyg7V8qNMKFqePHo3F4UyKL5k9niAedZeWPF8gAoa1K+EcYHSsHNq1h2GEAModAiZnUWywRnfSpX9mVWvODV1815hJhOoGj9JiDt3EJ57SvfQdxDL1wM+JCJivDRjkIcQ7+j+11nuxhFG/R2MdbCDO6eNoPowkeWEaQCUbAokadDe4Mvt2Nx4lDrzWar416fYF2RGK1w3A2YaAXJgoCbG4GrrWFNleblphSgU70Ju0Fr5PDGluS9HJjH1Znq+hvT8NRmHnQA9jpNRqzfZEcOYOanNpz5jcByxWlD1XFW00HCpGYmEOKQtWUIW5JpgP/iMqhjTZnQSwjqfWUkCJdeE7zj2xJw+san3fgs2BfTfxpZqkxMpW4TNJNmGGdWBEDx1nSQfC7n+eoWimIWV6lhAe9K8nVixKbpFC7XXdeLc+iAE6oF9AJdXmvs8skVyDTxAQ3V5ip0aboD+Gkya8PT0N/yK3CV5n/+f+g4J0vNhK2F05U8UhWX3xYwfVgFyZwcrzmley6fJbrOUbmQjon0tUk/x1hQC92/0tXx8DEhBgeXBMhywyvM2ZMiA/MoC2igtkLIA+tyLWB7OEIcmrj3xHWvUGSPNn2VHDPR5WHIx2Ql5SzIUoFWD8319G75zOyasHa4jVAMQnvUriMj+4WV7fnaHGM+01BmVAkLmv+zm27pJaYU4E76o+jJ8xW3nFjzFgud1dnu0zUe8PTkAHy++gCjhzv+6dSG48IWyfm+6B/RBMgIpUUk/he/E+ASl37yvDsyWcBUvi1BxSCkDRLHSWVTIoTqQ49mnmyD0J1h/twvXmBH4cWqCJyVwhFAvrJP0gY2gNQUeM22Eph25B7lYRQXfpqCHIp7Bp1GPLS4NqPG9jLeMw06BM5QALVKAp7JrEVDVSAUrHQ1OumHGHkXYj0p1wI3R/qag0KqYfSnJ2DOuRiJdmBRoVwXZYqpJ5GNeJyoyz9cykxN05tP+KS50ySXR+PqvohQyNBNpOeP1JR6ky6CbKd8W2096EyhzN+Zji5LV73Xf89En5TVTmdfzgqmEkO1E+3nKQYRR4+Hu3vD4hj57d7EyfCqJC0RB5zM0c+w2WQq7Ei880JoFOg+9ImZwj/RwDksSF6JsT/seLRxrCtYPvULzbsvlHM/BRAOB5iYPZJaBRGhXyTzqjCXe4cjERmRFXMrz+wM3+6RSuqBWPZ3naTOf1Zk4JnCpPBU=","layer_level":1},{"id":"437eaac0-aaf2-4898-98b6-3c1a2dcca81d","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Inventory Management","description":"inventory-management","prompt":"Develop detailed content for the inventory management system in the RELOAD bot. Explain how users view and manage their collected energy drinks through commands like /inventory, including pagination logic for handling large collections and sorting by rarity using RARITY_TIERS from constants.py. Detail the InventoryItem model in database.py, including its relationship with the EnergyDrink catalog and Player ownership. Use examples from Bot_new.py to show how the inventory_handler retrieves data with proper session management and formats output with inline keyboards for item actions. Describe integration with the economic system for selling items and the VIP auto-search feature. Address common issues such as display inconsistencies due to concurrent updates and solutions using transaction isolation. Include best practices for efficient querying with SQLAlchemy, such as lazy/eager loading strategies and indexing recommendations for performance optimization.","parent_id":"4a32517d-886c-4c9a-8e67-2b407449108d","order":1,"progress_status":"completed","dependent_files":"Bot_new.py,database.py,constants.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:49:25.1061936+03:00","gmt_modified":"2025-09-16T16:19:54.8509978+03:00","raw_data":"WikiEncrypted:s/nHAGMHO9NqZ+Qyj3dhLppOxsMSFPlvr+AxlVZFsclC+pQDyeg6IScs7aeYIQMhw5T8Xt3HhU+ig88LTFbCVuF/HW2WNPLpTCgwcZ9WDzCU4mlJUw5DQmPPDm7MUg04ut1nEugdcNhjD+j0gfAijRVbJ1pAK22Pr8AsI99KL1zkRPJ3y/xq+JZaotoDvrYdokTGHYOnybID/+KLWyacvlqzk3vZUpaCW4pbxVfTBp1mQ5jwyD21CW496NXDUgRkPgVj4BhgvVYcLzE902Y3v9iGAuo4+k7PnJ/FKux5tfW/MFtu/k4i90uhaFS/h/+7t1Bd1J0whoNAhWy95HxN8vLeFqZMnxI0Z4DfUgFedVDmBV8xJ3DdAjHc4xScsX6PLe031X6Ylt1CmQEk58rLf57qV2cT+Ew8pwNXURmA+D7KwnJ2PAy6EI3T+baEa/vMRPu58R1Zui5qziOQojlTGL72fh2IlAIsyj7CWKmnHAc/ZMcLcckqHndNtlrGoJZPexeGbyqDmww5MngyvgAoaXQQmRINjebhoegJ8TO1WRofjpSUGzgZeS6tvLYjYKCdVTsYOcpl28bicGJ2SCpi2lKMjFwg1oajeLzZcuc3gys0zcWpScfrfON9m8HDM1h23O4JnuvhI1X90l4FNs/NZLMI+08wOodyoWDxkM+J7viGeLJxJMs69oDEp97+eE4rx/OBHlu/DURaNdzUxYrCHccpyy8tXQpjMcOd4LzfO0CbkUOV7l1mHOO+0hq48op4QRuyf51Ivk2RTpnfucwP+K5IegJw/8cSueBcAhH6pptXFj2RQBDPg8mC0jIlW4L3qMQTWEv1iERmwXOHrZ346qe4uz94b+Rtb2bwRUgj3HQ4U/ZSY5EWYqPdIjkHdnpj7W1CPHWwNLHaQaUqtB4GmFMQ7N7cAZEAX9Mw3SC4VF+1J1TB30JVqA4iY2DJKJqdOy8BGS4TzYTaH3gInisc/mrjp7lmM75cvEXMViwH17QpXnhNBzjNnu4Rfbj4UKfII6hww6t5Db4BcrUZctkMU+GcT5cp3JKt5ppLpzECbzXknio9YdaTgjRfsWoUyibOR7MAukaOBiG21h/i+s+1n271yLZefzIc5aqM6bvf2Qyk3iwb7LYb7WXo2WbtQSuTkl0M9zX7gO0i4ZFrCa/djqOdqi7QzxqstwXTbZAfpoxYJAEt2i6yLXGlOv/LpxYZb7EX0NgBE/8a+Pn313SesdFoIiwCuRRl+kxDubizs7TqXwoYZaV9hoq4ZFn0noL55GepF+Qc+Iz/fnIbq6e9FrGRbXqau49y3cRhJqreqJJfLd5HQ1Y254joL24vN0x8aQvSiSVpdxBO3d2OgqYmjMmkLmBt2/FAeatrR+oId8pKsC6w4ptfLNce6lRNqsQi6Ld7jGj+NsBvyLs3MMXml8z1foyUhxnUzuhniFtVViPvdQ2UqLxlf80UfBOK8Gejzd47Ofd3rwYX91nIFkkbDP9tVr/sLKjU9oSPohelU8Hw3tFbJ7JKE/EaBIT4mKvNAyy3xe8/6Vd5FaQik3tz1lmUxo+6/aq/wvB28mVdST4An/iYMo65gSirO4P7DMOACIZX8I7zNBOKjq79wFzFGdODVe7X5T53nMhOk9776cqj1InLiqp5wsh4NmVbsht4x4AeHKaQN9BVLxhhlVm/Kw==","layer_level":1},{"id":"215faa2b-0c10-45ef-8cac-c42f8066bc79","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Benefits Implementation","description":"vip-benefits-implementation","prompt":"Develop detailed content for the VIP benefits implementation. Explain how VIP status affects game mechanics through conditional logic in Bot_new.py, particularly in functions like show_menu, _perform_energy_search, and claim_daily_bonus. Document the use of constants like VIP_COOLDOWN_MULTIPLIER (implied by x0.5 reduction) for search and daily bonus cooldowns, and doubled coin rewards for VIP users. Detail how the system checks VIP status via db.is_vip() and applies multipliers to cooldown calculations and reward amounts. Include examples from the code showing how vip_active flags control benefit application. Explain the visual indicators of VIP status, such as the VIP_EMOJI in messages and the special badge in leaderboards. Address potential issues like incorrect benefit application due to timestamp validation errors and provide debugging strategies based on logging patterns in the code.","parent_id":"db4c32d0-1ce6-4575-a1a5-af3ed86594eb","order":1,"progress_status":"completed","dependent_files":"Bot_new.py,database.py,constants.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:49:31.1368915+03:00","gmt_modified":"2025-09-16T16:20:26.6759963+03:00","raw_data":"WikiEncrypted:/uIe7QXByIZeoaeNwRdsfMQ5l/CR17WgZyPaL/gkHsd2kBWDXjTzz/lxogl3qee0Ny6ifGe7G2x9fVsdoIQeoTR5dtoqJPgNffmEE/lDYJ/gBtKuE2YumADwE+SAaV4Pa8PeTIiwBxicFdti7itScXMrVpN4bsrRxgg076odvuf7AVoIagGiZ2rmynqJ1/qp49zQG/e/agEb6RuHqSq0vZayEovt6InQ/5025fqcmQHZPhb/JdJbcVxzL/LcTWUYZcYJuCjNdv2aRq1CzmFF5BZkyGOV0CY444IF1IHj40mTxZg+7oVLW/dBrbmuUclwXv6fkVx1ZNx27Hk4+BWISaRpW3VRedNTNjchxX0hBNkC3GdLXzqvFsMB2h0ie9TNxaQa1qbu0TrHbwQHIKT4ga93L5IEOv4K7Xg5JMubsA9BJFmQUhL7ZXwdJ7Ddg2FUGRKTpXDf/tcc3u/I+RkPHWkJAsb0clfYsueoR53/AHmIUryTxMaBwNx/jXzow/D+wWyGtyYu9wdS8u9uvlVeV7MBWm5h1JFvC39pKC/3SRnbZtviepm04AjPHgv8eG0mmUSJMDs0V7U3WKKJDtEXYp9f4qlbT7U+AQWNBFIehvoOov+aTuaSIyiINSh/4vAqwduvocpvS0NQd7lIbZakiw7LAo5/r18rs4TTg4aogVvdmQSqQCmjpGSita8o6yLY1Fs6C3Y5Hb75V0qwL/FSODEPl4GbF4U4Jco4ezpj6yLtvbj4NNEEOsDpNLAVmP16CXjIOUHsIgNE0XKJ2femFn50HT3T+oCPI9PrzfPH5DSBrFy7/a+xEczneyg6aR8zwUhHcVMDZ9SIq3zuJ4crLaMdgZY/MweYB/yQHeuX1EGi3cg8N8LPD+y9jl5/tkdjtCsKWw0ZE1OgIj8kLbk6aY84aDLVcLxKmGmCbONePi7v8nK2Jx332iDrenZXLGoVditPIN3lIJ9rNRLE4ONYM9DpuCvjzgmMbiqrd2h5s4NPbz50uv74vf+vkxGCEL3UHmPTMPL+Ug8NhY9qAy4lHGbvMuzSFimMVbEIQYMSP18pxGHtDnv0ZQ1qfWeVS4CbClM74PzzbpWxEivYcP+HqMHpsSzab9dlYCSvdNg22TtORG41Ibh3sUHPTSc/dBNnqvye+0shaUPU/qI+TERI2JbGQfzJIP0pQUSes0Q3U9BgojvwrvtGZM1h4hBTP5QM3pRpxyl2iHpddyy/k+zeIPsh6YnOUuwvmjAtCQFX16QSU+ZH5KfaKwdCvyxf210daECN5Aniy8TrGdVIdMbaSdiqOoWhkwKPwa9wAPxyf1TVCHQBYpbPTun1E/GbwC0+isXAiuphOgQzePrXHSLh8P9hzD9uC2dy4bhlk6fVKwVZk7uDSOXbifxl+m5GysPfO3btBvXKRYOCEW9N6kBApgSkmwjIUi8iqXSc4U4i0yOz+YGyphmmFP2QFbZNWxGj53Xv+WM7DOkKgwef8pJQ27ZOZ1ljiOYYTl/B+LwhTQPgh57LOqinn/fBQt82uCuIT0T2Knaox7oxqzAlITtDhDZ5bOyu7a+IaDmZzXl6DFM=","layer_level":1},{"id":"cb6d5789-606d-4d93-a38d-2afdc294d1df","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Content Moderation Workflow","description":"content-moderation","prompt":"Develop detailed content for the content moderation system that handles user-submitted energy drinks via the PendingAddition model. Explain the full lifecycle from submission (/add command) to approval/rejection by admins, including database transitions and notification mechanisms. Document the moderation interface in admin.py, showing how pending items are listed, reviewed, and processed with proper error handling. Include examples of validation rules enforced during approval, image handling procedures, and integration with the EnergyDrink catalog. Address common issues such as spam submissions, duplicate entries, and moderator response times, providing best practices for maintaining content quality and system integrity.","parent_id":"6f9732e8-8190-4a70-a80f-b193a35c399e","order":1,"progress_status":"completed","dependent_files":"admin.py,add_energy_drink_new.py,database.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:49:40.349166+03:00","gmt_modified":"2025-09-16T16:21:17.4162132+03:00","raw_data":"WikiEncrypted:y7hjn2ShdVj88YDbsO7CF84yQccum3FHpnSLKiSUVgGOxt1XjSzNBx3vgfdQHfJarOyeRabre6anfCduZChmDrpgVkkPj2dLQbVS+iYmimx4+Zb4+M6Oe9n0rLqcZ42yb+KdTIZ9Ra6/GcgzO9Uh/7Tz3eHOBtOA5MmdVua8rHjuBd4iDOvZHVeyH3oLF80Gs1Kzx+Ud83CbEDKz1yMZst/nxgDEFrwUZBuOaDiFLZK7SS+wBRP+rubHdAivy6Unvyn862+3DTOH1iJcv1kMimOk5aEv3lkq+34xr2Y12I1ZUkActQUcbZVn2PssOFSa6ZZuF4CZP1YPdmjirYrscVI2Ar3ZonSI9+Xr9krcIlFh+2v7QLrGBpEZWg/3pvgiH+gjHZWnQ9s/9n0v+SdZ72qrOstt2TGIqxdssMIl0snqA/3Y5F6yNOfpq3m/G5cf6UIn5rymJ0t3FjmBUYw3g7REjv47uiiXOhXlqiOgwkb8OH3qD/k7I730eNLJgK3eVB//TrYjTLkip1UiXM36IQx7o4Fd1fuz2XA1WkhVFLAYooABw0+slbs0Y/dhugKdPPPYgNj05ssm755fPSlqcc+0gtGgr2GH6QzPv1IjhsvcBcBLHRtpRDvl49PblvS4NIGdO4myxUQrPOV+hpO9g8MU/SyvmqGid4VF3cekPTrB5wNzJMFXdAndbiQu8epqPYKL6CLxWxKroYxQM2F50ZsyqufSiiDUc2ijpcVjk95CZ47ZdN+ktfIVTKAD8Qq3q9EJsAWTF4EJkUmao5ay8jrqW+uxTFi6tv8KWlqajYhsUJy0jeVjbl/z2wjVayMloIiCCrIY1gvrftAjgBPuyGA0twoijWYtwXjVrN6ZDKxGzo66NQ9bnAhP+TMOrfe7hXV839rwMPV5Y7FTUUBKGCjgVwwCRR11NGuO4bh9+AUqcIcNJqIY3IOr7fsWayP/Fjq0l7a6xuGZltJg8xP7j3iIwGTgu4AdBRDgFJFbhBw0LkJJCuNPnri4v4/PGrwTwcKOsqhQjWyI9lzVQHKKvGA9xjcIe5lJ9wLCNn+bHHZJTu7HD6hkyq1FSGKymXwlMYo6S/abDAOjwMJO2zMq3mqnJt2JA+m2no583A+uIWwkTithO/4CtPRHBLEkelqE7gAz7PB9UgWITilDRHcy9t3N3C2AiwRw/uOncTxFxTP1D0VqT9GR2qodnczv1ZXOwCAQOkDzO9pm3oOSjd++mjuLe3enBmGg4ljUXdAWIRABMxZJGmv3KDX3MMVHh/db/yY+5bVflIhP2ZMHzQQmifoZrDbKay4cXUZva6lq6CAmCfARU4rwaKq1HKSsYqYR5a/TZL3+3LovxEZx/ZUWUhlHC8/ijWeG9CkXDjAKz1M=","layer_level":1},{"id":"d9d5427c-f717-4a1b-b5de-201e2a8853da","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Purchase System","description":"purchase-system","prompt":"Develop detailed content for the premium feature purchase system in RELOAD. Explain how users acquire Telegram Premium features and other in-game advantages through septims-based transactions. Document the implementation in Bot_new.py command handlers like /buy and /upgrade, which validate funds, apply purchases, and persist changes via database.py repository methods. Detail configuration constants such as PREMIUM_PRICE and UPGRADE_COST that control pricing strategy. Include concrete examples of purchasing a VIP subscription or unlocking auto-search functionality. Describe integration points with the VIP system for benefit activation and with the economic system for balance deduction. Address common issues such as insufficient funds, duplicate purchases, and payment rollback procedures, and explain how the codebase handles these using transactional integrity and state validation. Provide best practices for extending the purchase system with new offerings and securing purchase flows against exploitation.","parent_id":"8c3bbf45-7ed9-4c9b-a56e-d0c3f40e2221","order":1,"progress_status":"completed","dependent_files":"Bot_new.py,database.py,constants.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:49:50.76954+03:00","gmt_modified":"2025-09-16T16:21:45.5266923+03:00","raw_data":"WikiEncrypted:raygxe3Dsu0qDXOK9C6tclOnn8PSSXWykn7vVnTBPdFFFef/YD9EE9QpwVhTxbNBF1EgFYEwHx0XOj3jhjVKCvIJVgQKiLc2GxW1f7vePtbLu4I0JD/ysVSDpMFiff3q5e7IaiiUQaNhO5AdwUfsdYzzTidYMB09iyRdmx6PdT2Vli6sNhcUzVYMZbeAgD50M+CdfxCp7mpVo8NA36vSxFnZHAuWKh6ArCdOlOgWjVZHp0jBPp4g4s7Pfw/7qVQo+EtgqhsCTqFEPypB0DgfKzuGn1s74/NIP7U2CqZQJlVThkdMGKiXBCIwqD5qDLC/vIqrmUDI0bmUcZlPwuy8msQWE7ErZBpLcjz5jjuc1PaVSLDnRk+r+9XgpMfEeFTSOQHKUkBSUNEKpaNplLCKShMkm2UTtF+bw84x6AoLlLWjmSomlDZjWO1Pdoq7c3nPIg2+dRqmaEUzVDEuUqlq1UFDVSN/zUFY0kTAQhV/47E/xEtfjRx47V1hLI6QycikKCeLlmkgalU6ej7GBDw0NfOWmNqMbfUklxe6geBm1Vw+y3tTKXkaqFEkKFR1IJTfHDA7ugLOtQihH1dp4UOZ1eZN6qvRWFr+Uxm8N+yrHqoAJ1Qq88mIaYEavBaWFTAeUFWwqXG99aTu6SrRqJStn7qI0i0bGIvQbivLs6zM4nR3bPIvR3lz15Lm/laAJw0tCvjBXlJOXjuPzapVzWgJUHbAx9pyMd2Ake0w47zh/VrZujpr8dLK8Hg/o2eIdWftObgBW9ecjScI0q+Vr2S73R7LGqvTlummlng5BY2rQZsUkVdPDtHRIlJDCdsZazyE3IjUWpUc6Ygex54UJB4JPvdF0UxDwIG9qBhkw4tv16eeDobH+mLJK2pZ14y6U34+7zYAuqHcK9JFw48U/5aSJnWiaPFZxPTNi+En7Hbr4ZqhPezCZvyvvqfG/bHu8yIG0JCo+9XY3lHTFqjTxS2+B/OKFmc2U0XLbHC4iBzkIdWmMp4H6u2G2MO8EhE5oR+l8XVZtRGKY6JRHeIbtPQEeOJloMaCgKtjpOtm6dexkDVyXmCgelIgnYZ5fePBc9SUEfzhLHkNV0NQzybkU1bKVQ23/G0btu+4gL2fOyFaMnTZ4pAfpXFWRY+9AU+hzSfWFopp6FeqYrEiHA5iCWfdxlIgx3M6K8ZH1wVB2axn1LPYveCTa0j0ZZNb0WAlre9ghDqUSsEuVbGk23Sio4l7O6cTadCbWu4MFf7rsvIIWdqugdHsb4hIMANkapeNZDalQ1MGVO2+BPEE15l4HPwE7WbdLdVcPFjVF3BSD2SMwLKS/2oJ4ND8D7QS+ofNfV2Z3lLGX/w4BOoc1XoqnlnjvRdXeAu/ByTbwBewaiM18+J40tchjwQ3Jnnzmq3ikMyNP9pctTC4G8QelrfclqBclmORmI4OQO3uFHpk+K9wUnrC2SL0fJ6tKvKK3mOvGipFdHgArY0M1CFeAOG8lnW6VzT4fzO3HFAx7EaHgeVP8aTdfw3IcZbG4jUM8ahOMrNNpDPOy80zOTYiFmvVAuJ1iAf02q2HQ5aYrx6M1KRPjb/sRuOJ99/uxlz2Snkv9tAHwBuQM+2T2Z2fVYo/Vgat4AQwAr8iPLOrMql9mZP+WWeCmwSmaEadZSkxCPEdwcCDd+P7fPzN4VjR1etfmyTaGMTi3VFfOl6JUCiRtjWIu3o=","layer_level":1},{"id":"c45baa4b-600e-4d0e-b88a-854781fa7be9","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Collaborative Projects","description":"collaborative-projects","prompt":"Develop detailed content for collaborative projects functionality as implemented in Bot_new.py. Detail how projects are created, user participation is managed, and collective goals are tracked using shared state in the database. Explain the event-driven progress updates and milestone-based reward distribution system using examples from the codebase. Document the relationship between individual user actions and aggregate project advancement, emphasizing synchronization patterns and data consistency. Describe integration points with the VIP system (e.g., enhanced contribution rates) and administrative controls (e.g., project moderation). Address potential issues like uneven participation and propose mitigation strategies based on incentive design and progress scaling. Include performance considerations for handling large-scale collaborations with hundreds of participants.","parent_id":"f87ff516-9343-41a7-8fb7-a226fa04d02e","order":1,"progress_status":"completed","dependent_files":"Bot_new.py,database.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:49:56.7981455+03:00","gmt_modified":"2025-09-16T16:22:33.6747733+03:00","raw_data":"WikiEncrypted:VwHf6eCQHm+ziTCZEVN4l/OYY5nHMX3GAKOGWVFK+SypYX/aIXBzX6QChxgSxr37xP2RVG3OqFS4515tOW7v0wt7FmRviWXiErCw5OHJt69VdVpb0t2o86uG6rNCzDUIL7Ceqjv6rBvhG7lamxPqXGjjcAnIPdDz0TCOSVgT+olBJqdj4x7fGwG3GIaGluBb18v7nh/iqpLj3QEcTS9lzwhY/3sIOWMrFtWq6QcO+cFcNEjy1fnL1zK219UnrOrnkcy+ws8Wy0qe6o6oKU7F5wt15fEzIm7kt7Gdey6S/Au+y/G1Afg1f9BzY7iqAUb3GYk/aaJENPsj5pXYphvG4OUL4kk3mmmyHNqGj6HnOJ0WETpwgfBYc8ugh8j2eY13BUjfw68erGEq4hhP2myW5FLPK3VQWbuVbGwQsyRIcadTzhnwvY17wGb3LROe02ugpwRNYB175LCoHOnEUIWTwTwE/05UVFJqtJoOp/gInjl5TezU8YVnde3Mub9/SJVWTNNz57wOvIRQEH6Waq0INTH3rvXwokx6NK7fdocbengezqgCumBnTryIegteyEEkABjrc/EglsU0HJsCQcTGRypxGT0RIWu+Dd7BPp7kM+VWQdw6YXLFXjj4aMcht8rwjdmwpC8j76m50S5R7GXVj81yRVaaIwfpwQ9jheKyN75jsgor+C7mOJKSyYTcHSXVHa33Vm2xq50m5xZ4FSTMV8L+hlQE+Wpem3eaUJKc7WEw3jmB8EzmWA03z7anFbtm5sNa6gXzrzIU9R755xdciU+AEwzXT19LZhKv955Ef+a/4+IaempQI9T5sj2k7m0JSjV3n/lDjNY7xh+i0h+ljk+kDd393G7qTvSg8dqJ53wq7BgyygxACbleGX8fpuSwMN7CJL0Fq3Iq4gEVjy9VUL+08Vxybg0FwdjdlvxZgk9r2Kudo/u7RqRmWqD6CY/5nEyauOX3oyqFNoBLBRAi12jZsd9t/wrHlTEvecCQP0AVDlbvEx092KZ+k10IoRpfJgkhn49tbTfmt4LFzQRTFaJgQE9IHixjCFJnYle6kduXVVtXZRI6ecFFMiahEIzy9KwSXlUguW9WyyIpYQstAGnAbfNH8IjPvt+dR9VtjDGAas+N8jiyLtNidOJQ4cMNoLCWoW5e9+7MHR+w+YaEZSEkD4S4iNg/XZNii1VFinJSXrleeafZjGC+A0xV08uuKZsgSOgNeNJPV/+ShiA0u22Kh6S9pwJ9dmtr7ppBD0Zps1dCdO+sfpxwJlXqaWdQyc9uFzFUTuCMDUmLv604DLaeQOdzHYOpsUgHlQBVuzZAjguDuEpCpg3RicS1zDc2RJLtLxZASenKrWUyJj3FMcDlufYkey33OTFeTMME7nDsX8uE5athaF68bcnyHhTLL5yhLxxgd0/m1CkAOBc4Vv55s+v7YGv7FZwwctK+MTPgVDGLxLfO2IxVo3SMQh2hUxPChicwynMprU6JnoB+bDoF//6Mwu3Ba337fkUb4ldtBDbkcmcQrWMLuo9EulHZLokMi37+StOypmxjrFHuRA==","layer_level":1},{"id":"122423d9-869c-47e5-a9c5-add764544340","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Plantation Farming System","description":"plantation-farming","prompt":"Develop detailed content for the plantation farming mini-game. Explain the growth cycle mechanics, including planting, maturation stages, and harvest rewards, all governed by time-based calculations using UTC timestamps stored in the database. Document how the /plantation command in Bot_new.py interfaces with custom database models to track crop states and yields. Describe the role of constants.py in defining growth durations, yield ranges, and environmental modifiers. Illustrate how multiple users can participate in community plantations and how rewards are distributed. Include examples of asynchronous updates using job queues or scheduled callbacks. Address common issues like time manipulation exploits and provide mitigation strategies through server-side timestamp validation and cooldown enforcement.","parent_id":"804589c2-9519-4f4a-9327-7d761b038df1","order":1,"progress_status":"completed","dependent_files":"Bot_new.py,database.py,constants.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:50:07.8537975+03:00","gmt_modified":"2025-09-16T16:23:08.8460222+03:00","raw_data":"WikiEncrypted:n6+6NKapCPya0m+F2hbKNSmC1yOwOLvrxrme7LojqTqZHREMG6YrZGf6gADFUwjIHDLgKO+k+SLHt0oNUF+j7E+pKO9tHlBwIThajJijOHB93CxUGK1da7JOi9Doh7V/3VrRP9bg+5woUcJRq3sC+UfPPwcea6ClBNUrKta/sPCzPgL31M2W+Nbjx8jwLKW0F7WiS8ssCowwelBoqByO8LM397J2yXoMJKIO0AJK7LhbFWmOSVE9VDzuwuwsXVXgsNVW0gaLQVIxK6Ku0YW9FWiX4WWECHkqsYWgIQ5vrgBOuysAOdxwjvo1RbH2YHni7zFBhEdE5leM2hkfApsO60OFHlI39ClRUPCc/qacf0tazFEBlWxi4QFQY3CIDPSpFj+GcbLoZc/WR1efihTFF/18l1RrY3pI+hW2wPhoMp3Toegyg+FZ0NEEDgXBsI3Foi1ApvPolmUX9arZTji4+j4ZGgNz8pHayi1oVWEJh/T9zJgA3ZH+M1V/KLUCCsbNe8pZwVhSu9qzaptnWj+HoHq/zzGqF4VUWi0xYUK5ksxPTCZ42bm67L2/LgupN+4qXtensB9lcko+QJsDLN57Przfah3iDHQdtbaV419azdd3BU87WZp7RmVhI0K/SDELfmEDh7KGYoV4gJ3ZT+GX7m/C5Mf5Idlq/oHI3sFb+4NaNey9Zd5ZsuVElvHdTVeTx1q9/VHA730ASAQH3/OqgbsxD5iiVanIcuNLso/WUdc2gqFfQVVbgU1Hk67p2ZrcTpwYeaKiSJf+OoTa99pg84D+robfqLEWVN4n2RoBFXw8sGki7j8q6iK8C/h89I0a3qZhKNcJgq05H5ktr6pmqQ8eQ3KuV2NSkH/WsGXxkIdrKl0apsDhXHf7Zgb6BTmcFRaFy+oIMoOUXbmqUjK0FC1sK45FT44Xih+dGoL11RInyJPAueEV2D0bf4wJkaCcwMLQo8HsPR246aJe5WdmlRGoMiNaMq1Ed6o7WwWXfmBDii2CiaspXC69rwLIws4ls3PMFLbUreulrxZmNGEzJ0e2I3KokI9mXkxDEeOlOxsE/qETFb4Ri3thnNr77G/CtT2ersGYSx7tcxy4SdOAL8OoWzkfNsq/8Z523dS2d9+N3KIB80sOKY7aTlyeLkj+gd4sSCxKsDVaA7GQ2Df/L4qNaPBhVj02NyqpWu0DS8Z2jtkWRFfe9CqGIgz2hepiT8N2mg0Z1FmMo8RYWVBaPRytBF8zG4GwKCuY1sdPTMmgi5o8bT7pqVBldGeuXAH7hgYbs/2EB5oWQ6taR++V7GtgeFtlWLPNikDPUKRWKToPQzJhhWNAOnJrA0TsPxecfsJj+CQjf0DupbTrOpvV/B/rPZvEo4ahFlR3U5Ms9vTo0WKVODfSpyjZYeperzqPygO/i+IFSQV5xYXMfWVMIAUXFtojqN7pueZ3DBgiyCU=","layer_level":1},{"id":"947e6d71-387e-4b12-9eab-e3df3b7af188","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Installation and Setup","description":"installation-setup","prompt":"Create comprehensive content for this section focused on setting up the RELOAD bot environment. Provide step-by-step instructions for installing dependencies from requirements.txt, configuring environment variables using .env files, and initializing the SQLite database through database.py. Explain how to obtain and configure a Telegram bot token, set up webhook or polling mode in Bot_new.py, and run the application. Include guidance on preparing the energy drink image directory and populating initial data using add_energy_drink_new.py. Document common setup pitfalls such as incorrect file permissions, missing environment variables, or database connection issues, with troubleshooting solutions. Provide a complete working example of the setup process from clone to first successful bot interaction.","parent_id":"","order":2,"progress_status":"completed","dependent_files":"Bot_new.py,database.py,add_energy_drink_new.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:48:49.3846197+03:00","gmt_modified":"2025-09-16T15:52:38.7233919+03:00","raw_data":"WikiEncrypted:6nDTd1wU0hYJuRoAJhne4b5ashHc1omfgy81/++xSBe2w9rUrWuXSbrEHiZ6Cy0q5An6XvzHHLEqEmHIyn2epq5KEULOgH2CqfXy5wyGH0HkecQL2QmRF6trtNdwUzjw5u7RWrXX9M0+HdnzWXUwW5PAjHzzInKa5LxEWi3+BitIfzEHk0rQHa1CnOKiAhc6Qe+CR/6pUWB37R+ZRIMNe7+21DFFwb8UR7hFqMKwFfk8MsFVMkCLzbQXetaJ/ATmo0sU0DYF7otQyARYKLh3SVPfruy3Iu1gvit/nJJKeHjmFR+0GSGYM8/5jbKajV7VGv3XCzmJkMlPVJmdXylaMGEE9c/ZuvtfQ7DED3Sin5jgkdPdsiyvHLxSc4lnY8vKMCWW8xrQ3LSE4cp4NjdrD3KBi/VdJC3wpCZuROEgHLZo42i6wXBUH4qmWtHT2dDOUWYX+J10UsVkETtVZhKdqJumBb/m+PAwJ4Tu9g0nBku3rBgpUPGArMrM+02P5dBPy+WgsWo+IWIQ0RtZ+5xPqbDEMB6lYLd5A0rlytVHUJDP7mKX5INO8xriiDA9EM4f7oKtdvT0TO8moKHaStHov21+44qRAYVMcheECdQ9SgMPRjf0QOntVLBsgHZr413saLeu/4CcJMj/NgoKYCInxYqlWQXfZWybQfebMV74lFRTCwhLsxBS0U9wkt6SWjJ2vpDHGK+bUnx+M9RxaVumqbA7g7UTzbjvdHgOrPAEKRYHlk199hF6+xTsQ9xJ6ktttR6cdq6TvKjYZFqWzR4jQhtsyCgavNSNJ7zsCgPkyasdVhcTe9So8OpawVqIvXb1+lmQIjjDFjQIoxVl3H5E2xGoW3FSNbFhTGocftZ7AvJpgaMhATGcxXbROasTgYmJQGWxUIQ2MyjPxebD1ZTmsNPxLkmJh6lFMux4I6IPzR4vRk6NHqdKZLa4KYAEeKj4Ao/lzi4r4dFLZx571Ch28R5rzv0dQZPxwkuX2J38Dox0dLD6/Mcj7gQbjuCzz9ev1zBjWJ1G6zqoAvywrLc3jrw0U8+OrMYsKdPYtxPps4eHZ6z1EtbvG+oYbrHz5AQLQWXHvAmfh82oI9B5V/RjZoB0PCyUYIuTD6tm9+fSpb3cFJF1jdkQ7Kr1EDVDLse/4mj8RJ/tZe1Gs3WhPXzuxDnenY+h7hNIaJLsyWZ7eDiRUgn7QMBKcqORBOvXFuUQVvoPoifLYYy3/1XljmIEv5jW9BI273blMHgVM1PBMAkhMnv/Hsurdd6aF4Em85sNA9sas0AGjGne1cfZgTcvb5Of0arK03exYycjX3RyzsoEijK/Te7wK+/0ZHweH9c6b7Q4r5/9q6zex1qRx+23C8rt9uHudDjYB0GBU+m9u/5YxbpbP6fGNjNemg5B4nTT0jPFpWvtBSfEq9nAcwBkAUbpWGlxU8ZZW3WQoemgQgW2TOQ4YGX+iSqRmEhbXYI/rTcZncoMwyayIdyLM8bTKiuVVmgiW/SK0iGbRIaNI5Q=","layer_level":0},{"id":"c12f2471-3d89-4d2d-9174-b679025d0d68","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Data Flow","description":"data-flow","prompt":"Create comprehensive documentation for the data flow architecture in the RELOAD application. Trace the lifecycle of a user action (e.g., searching for an energy drink) from initial Telegram message through command parsing, business logic execution, database interaction via SQLAlchemy ORM, and response generation. Detail the asynchronous flow using asyncio and the python-telegram-bot framework's handler system. Explain how callback queries manage state transitions without server-side session storage. Document data transformation stages, including input validation, model hydration, and output formatting. Include error handling pathways and logging practices. Provide a visual data flow diagram showing message propagation, database transactions, and external API interactions. Address performance considerations such as database query optimization and rate limiting.","parent_id":"9512e3f8-5040-4b50-a1a9-968708efcfd5","order":2,"progress_status":"completed","dependent_files":"Bot_new.py,database.py,constants.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:49:06.9002629+03:00","gmt_modified":"2025-09-16T16:23:44.5084414+03:00","raw_data":"WikiEncrypted:PGdHQOrMWxh6s6galmzx60G4c66k6IPhWJyX8d8v0xn18NeBVDGxAJnwdUZomNyqKPRAV1f6yt/iM20PiO83W/z8VHLh8wzgK7imqlDLJdpyv3GiNTm70vcG2QfJR9ou4YXPdViEr+QXPR0c//opBOwkynpaImq85niM8vNOvTnkiImuBhjBakkHOypUATPDLjjy6Ib1FB/wkk1/38HwLPied8LHlxp3tH3/50NOiCbatdnzXi1LH3wDRbv/ID0O8k4NvgD9s6KjxKHfbN5Po7cMUwaSJuZns19iM56arlzs8fSgqBADC9XN9Hd0VM0YdM95lXtupAcWbB5nmEPjcYp9cKnwwPtO4SRzXYDI1GFlc0Wa5dZ/6jT/FydRhzXZb4Q1PoIBVSRv14K5M0NWsl+o/pUWalGdH9TXRNfPiVCPQUWY0ld9eiNlKKW7QUcGy9yT9yfw9NfF6NklLvDJcd4NLVaZQ2GvzPsALoDIs94b0YZbz025jf+6H7UmLGgGi+D+txdkcKCE778bu9CYeI+m4Qwth+cxsachZpErsWKM375Z3VHC9p4uOvVv6hePQ7o/naQELHv4D5BfuapySgrNd1yUS9qqWTuMa7TjhMOzHVL3TS+wigpHBDUfOHqej0Ua+/3qBNt7cgtTl4lVPCDmJA4Ko7qSks1Kgfg/lbZc8q1K/J7fryu0j0sQVTwr2/AIJ5aRSEccqtX4f3Cmw5roElztejHZLaEfjjdGQiZ1OiorniqMIbMdNew6CUcfNoGVS1vjzw4dr0xYv04C2lQC3OC26FuZToMJEvxmSrOnFRj/m8gt5c/SogqQX8lBuzOIEHHAKjC6wfGCVIpqbYm/CfqYfiIgeAnccEaSB6VSPRlPNc24JerMXgWErmcwbbG9unJF2cA7F0mELi70/ZBZtbb2UXVKgnhp1utYlaRfLXyf9o/PXV0yMVIMWiJrkrMPqZmCFtvoZnGL5ZIWC503GlmryUY98sXp3Nxxnulu6ajgrcsoapCLCE0BKa3Agh/8UNlupD9qQYr/8de8gerLO+y4O7F+j7D8DHJzgonRR8H5ClHBAOuROdI55tHunjcO5iFoYdyQIxhXRif9YAt2njVqLSmKtjZx4qHIw7KtQVPbws/T452AFqTs9MKRKCOT0XOAigFjALgbQq69XzlbRFLD2VeDr1nz4pTRIWzz/7kGiEkDYTC9MAOlj7zVo1cJdJCr8XykYmqR6J9xSx8muyQwuH9vwpBH9abQNtCh07shN2DEIaJ16lPybzZtskEUDgGQSTq5Qp64y58IXQ64TVHoZ0GJaJaKTENOI+KZsXnSi8UoA9AbOgrwgLFN/zEuCG6gfqwcI0XmggCn+UzHaN6gKTQqTxMPgI6K+XUS43JP6HMJMKmWcFXlvRU8f+cbzPuHd1XfA1yZ5uc+BXvfy6Ks4ncmsp8C1n972IG2K400uWx778rXUsK1hbxwtMOAI6ZqtCq+R4hzzAs7oYKIi2Zo6bhtqE0uELovUps=","layer_level":1},{"id":"c7726466-a472-4b60-ae3e-cdde4f181fc4","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"InventoryItem Model","description":"inventory-item-model","prompt":"Create comprehensive data model documentation for the InventoryItem entity that tracks player-owned energy drinks. Detail fields such as id, player_id, drink_id, quantity, and acquisition timestamp. Explain foreign key relationships to Player and EnergyDrink, composite uniqueness constraints, and cascading delete behavior. Document how this model enables rarity-based inventory sorting and supports economic actions like selling items through the receiver system. Include examples of queries for aggregating total inventory value or filtering by drink rarity. Address indexing on player_id and drink_id for performance, transactional integrity during trades or sales, and integration with the VIP system for enhanced collection benefits.","parent_id":"5bf00e53-72e9-4056-9bdd-0e382177de87","order":2,"progress_status":"completed","dependent_files":"database.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:49:12.6360287+03:00","gmt_modified":"2025-09-16T16:24:15.3510679+03:00","raw_data":"WikiEncrypted:s/nHAGMHO9NqZ+Qyj3dhLvGJgYrjgS+ecgbIPllQumJsggkDkKcuc4vauBpOLqSRoB4DGhiNjfmfmcj/97z80tKW7OL5b058UxpBvt98lWsQw69Hgx8PVd0BEhc4QBQ2ildvGyFdycWUvyXt3KV4mIQSbrJZs/8rUJ4Ra1v9MMrFaZGMc11kUTdyTQjD4Ekc7V4godrd8Uh8xpZfAa9f2Ik9ibIMNkvhtt+fA2yPJvE0kCINg45qtcJsr12I/XVcqmao0yYBtIUN3SxiRfPA4OXYvB9RunCgR3PbvyeNMBIgxodavOV8/oppIzTIls8IwZs7qg3HSeTKr2qs6uUVO8azzmNghextgODIP7eepG2X8ICJpFKwMKrdC6700KCJPYxmg3Ez9wwXu0ficGt4iFejPXzIoy7QGLakUm9F8BTfttccQv+IligeE/9WQY9PVBu4kfg4kNUG0x2/3dp6HxdG0PJy1uFLb9BwZPGevdAwRvdwBqJumwh+gPzIVGxkHph7wKBf5hF1AEt46LtJgp5hjVd/XxOIbNODeQxoeOb+WdeCcdpX2fX8XGpYey0XMs4+VMLG7WxhrrLNbGHtLsQvlN0DxgwCmE7TkRTlGDwuutI+qP1FEYmN6e3gUUFCXj+XOAlcQHbpoowkEqysGnOomuI2z6Bo8OeMvg0VG/rq6UV3DfZ4+8uvY/002ycXHimlBccIu69Kk5uKr53NLvp0ger8MMa5v+TYJ/CtguiRTWDO+MVBq640gsyuHQ9mwYSk/mmS+4IjLeKARdeyDjPFT6QxA09AgVvd+GbogawY6Ri3mh8N+juqL7mpSKkKbQxLQlO68rb/vagW8ZuIUaLEN/b99Dp7pDRBDBZHMEAhwODsomAcHw1ClNsb0y+kQznPySWT6rz2ZBr1KgXz9UmHmQ/NsQdWQaFxzmtx6eNpPUtKT2XCp7mAr/PGuzMloQdcVjZ9tfcpYzoDYvclVJUEtflOX8eItf63xtYGAauxje2vz6lUct20zBPQcvSZkiPxmQiqkjsHbeS1GQDVmCUO36LuybjlJ1gMMSGao/t1W1zzR3ZcOnHByFbr32EysV150YbPz2OEhKOfXzjjyphosBD77oQELJsFyt8zS1urv7WMN4Sy9Ohmv12qT3AIEpfLWLXZMWTLkrIwbbH+8yD0l3Wlt72B+T8qcDKGOLCyooerxn7tmlCdW7vQPSIRROAoM86OQUptcco3m7Lm5Q5Nkadm94aYiOLeKYPs0vmwHTibzsI7aXoyVyObOEP6n/5xkARfdSAaF/DGXlMji6/yc0jsSkWofmmtOjzdsno=","layer_level":1},{"id":"2e380784-275e-4bda-b2d4-7002df4e7902","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Search Mechanics and Cooldowns","description":"search-mechanics","prompt":"Develop detailed content for the search mechanics and cooldown enforcement in the RELOAD bot. Explain how the system calculates remaining cooldown time using last_search timestamps in the Player model (database.py) and COOLDOWN_DURATION from constants.py. Detail the logic in Bot_new.py that prevents premature searches and provides accurate wait time feedback. Include examples of how cooldowns are adjusted for VIP users and special events. Document the interaction between the command handler, database transaction, and state update during a successful search. Address edge cases such as clock drift, timezone issues, and database latency affecting cooldown accuracy. Provide troubleshooting guidance for common problems like stuck cooldowns or incorrect timing calculations. Recommend monitoring strategies and logging practices to detect anomalies in search behavior at scale.","parent_id":"4a32517d-886c-4c9a-8e67-2b407449108d","order":2,"progress_status":"completed","dependent_files":"Bot_new.py,database.py,constants.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:49:25.2061583+03:00","gmt_modified":"2025-09-16T16:24:55.4762497+03:00","raw_data":"WikiEncrypted:uPtIvUbMezH0ofnqqRSEtnpY7b0VNeSldYBH/DQYuU0ZAF33QbV7mMqg4XQXJYYG+ClLWcqSnS5/k2soxpvaUGKgAv4jlSdTJRNXEiYMDheXzutE3DWv5umVZ/L2IXxA2z6V68p5Zd8shhFaTwYqXaPoqjLrIrPRN4FQUEHacS8o6fC0s84RZmNMgJ77fVCmQh0FNhxCqu9/cjj3xYkTW9vgIaNcS13maKpkCwfUJQJFr5CHYdL0ZaYktE3+Aetkv9yBLhxunJU3ZrnqNlSNBs27oLasdFyM36W9H1yAewYeG/jSyr6yHzFducXQKl0u7GC1gy1YT4IgH0pqy7dSND/xBpfDJ6D1bP2CKjShvMgvrMPA2evZhSfmAj2dt189JcX4cp54wDxbDdfeZ2mBjJq4o6pQzlZ7F4UPKpwBl5wNFSDtAoCPDbf7QsAAWlByCoYzWHiAz13+LXb+rvn98/OXIVnuODrZPAdnfJj/WtLdZtJnEDg2ffIEIDxi8Wf7Bj771D/nONOtS2ccWdOWjt/qVQa9kfpZdUXFoFp8oS/WJr5OwqylaH1gs6+HVoP78cLW12zAA8c+SRnuie99BzsqZUSSjj5+vB40wCNqAXdBevcU+hDLRixIKJVgqQSWvO8yNxYIOLqu1O26fQ/VWe+AlzL4fOxCm+gB/OleAdqUT9HDARtrVkQd++FV3kO8eWYYHosFRGX8ZePp1ttYLv06aN6f40mTvhcdJiNlKop9vr5HeeIrXlzE6nluAnniXt39GRJcUquDwmb+116sUoMDqi9w4KQSaw5UTn+qzNQjPo3DCNfNbP1TcydwQnTR6IspVp29wM82cGcLHihTZd6n7wkO1+7ZzfEIXKWBUf59fMM5x/jMqh4HtMANb5+CyFYK0T62u9DYJ95z9NTfbvhR0H+FpOJDoENlAaJgquY7pArwl+KSSR7fPOPQ3w726mN5ZPd1q2kJBbnExWe3mDl0VDxXEbZ7q9SLdMzVEixEFPvVJwN5uKuZZiiST+yM5WYZ2ReiBg2lFQKbqviLO/O8s2oU2Pw5ZccfuBhOrdtAk3QRIjRah0mUkIWmi/Y2r3611U8hL9IwEDdy4Rq6DoZtm7J9qzEn1ftHVKso7qdU4m1CyVDGaHW2h/23c7QP9l3lcwMvXnbwH9VEyDeMl9jEdQECIUmpcmJqid0WERv2E/H1MNBhYCfr19Bz7XYAapgBI/3wdDLpuGjnXEnJyltGZQ+m2XCK6uTiRjYwU7D9ilHqo9w1B8CsK44lQsKYwlyXmLM7+g3i9RiWXaw1WGcLFn+V5RI0UMAQDMO8bWx02L5ApA0cOXr/IV0O31OjCf+UfG73g6FqmEDdCMvfolJmInk+D9VCA1RM6TUFMRRW38C8VnPkKiqpB98z7OQ8ncNK7aDjNgR75sFWGT1uS7QuHcNFGNaKEprOousQT5iwcYyxsJGXBKXfzzL+ltUcMEEDDTOYdzKsQCYAwQIyXwKTNL94hKvm2fsk6ccCaB6IAHDzFnIQspW3/EldDi/N5c11DiC4JwFRAXQyVLPLhA==","layer_level":1},{"id":"61aa157d-d893-429b-bcfa-966bdd4bc1f0","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Auto-Search Mechanics","description":"vip-auto-search-mechanics","prompt":"Develop detailed content for the VIP auto-search functionality. Explain the implementation of the auto_search_job function in Bot_new.py, which runs periodically via JobQueue to perform automatic energy drink searches for VIP users. Document how the system checks for enabled auto-search, active VIP status, and daily usage limits (AUTO_SEARCH_DAILY_LIMIT) before executing a search. Describe the integration with the _perform_energy_search function and the use of locks to prevent race conditions. Explain how the system tracks daily usage with auto_search_count and resets it at 24-hour intervals using auto_search_reset_ts. Detail the feedback loop where users receive search results via direct messages and are notified when limits are reached or VIP expires. Address common failure scenarios such as job queue exceptions and provide recovery mechanisms based on the retry logic implemented in the code.","parent_id":"db4c32d0-1ce6-4575-a1a5-af3ed86594eb","order":2,"progress_status":"completed","dependent_files":"Bot_new.py,database.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:49:31.2167+03:00","gmt_modified":"2025-09-16T16:25:30.0973536+03:00","raw_data":"WikiEncrypted:gtsuZ0aW/qfZAPbVFOSY1V7Ssg4xjEO1zbAks35OrNSy0D7JfRuEZoB9zaWaFKbnDtYB3Mo2rRSl1RGltxPMyF4vcidyhlRKUm9NdbqItKjs5G2hntBsSmCayFhWoXQusfXOscGjyKyIXOYq7A5yhxJ+30LaPuT+ifQza9QUmeO2rNVveH1F4u0ydtPeZtpwWyBUVoi5ZyrE9oBtCFhZHbj6f9yvRJRnQ2oehCn0mZy/EwvX36hMwq1mQ5T9rwZ3CEioq8dMvIgroFwc4Fet1jCwPgyCeuVkXh6tXepLfP5c3viBbEhkuL7hl0nmWmMoew8bNf9ftcvlPAr+qq9p2W+nKApeEHQ5waEbjCPmVFH8NbMTsSHCqRZYoRkNmaBY31EaW38QpPc3HuS4ATrVPeNjCaCdfmTVV1zRBj9boe+1fgzQlzpVsnfvRPluKAbRYtp/p8dN3qo3tUMTCnFhlRLJ+y0ZOIaEt/QmapXKDTEToN16HHowOac3UCT4a6VPIxT09K6klA0e1m1esb42sqIdORSJgMHw7VP8hK/SRw4XLBITV6vtfdFsijg5qq75vSgB8x+JUSUDYhdxTEJuKueG9lvtpll9djuzvQMlHWbdUoW+K9RkAuOY9BS6uhRJqA6ts3Uj4GroFagxdWp/2zbyFJbNG/nYIedRWKywHYQv7su1tBkg0Xeag/wCz50oM2agG06Hau0WWe5mS9BA2w3GRCukvyNBODEmP21OKOmYDDdKNv6UYGhmNHJY4xjFUwLf3QUPeUHwP999JeuizeyRdBtuEI2+BQLQKVBIDXw6Avci59KIAQS2+mcEtWdsiFzc02w7Z8/O7z2yX0OoEouFTTt5ZN1kfzNa62HwLAGnG4kGwxSuRPKnjJSCewNs9jnzXxRakzJDCvb4ABpKH34ArUAvTfQSmDDlpiOdHF+ppGZW8GZ06/n6xZKAVFFyjBO5ul70jYkzarjsL7wKGA5UAsKhkSU94V7L8Dp67z8SvG42qJDTeTZUYzTJJ5UTfTuUqZdtekCNLLlinsrBAA9yLZfIZZtnZPcwWFhNJBBEcBUNQpteeSDKG38MQnZy+IZYksObzl24CQmBgHyg8eD+ijOl54PC+DRYeJezzLMn0IxPp2pw95v5jNhteWhT9Hgy28o/y2tnACXNVY9xFs/kDHmlGUZQORuSeO96/+VLUKsG8xoinVkEJyz3HPTYpg/3d8xEX1OLB9L7D7C21rKmpdSrEvklkPOkemmFU1CQimTjnK9XbgeEGvE7cNqchNVHg5FfbWHmU0mnPo5Emk46fpKc34otCEA57HaPj7JDbrjJ0E95H39rM2kr9jaluMPtqd5VjBRq1yCPJrpnar85S09t7WFhDuRvLBIkzZJXf68bkZ9qWnnAXNr8/Kiry1lwnvehUyCPSxEKqSbyJxbO6yc8wAnFNGg73mfrCeEVehwLdQzTz9/BYHDnFJRHnaj4AVKoWYekRshcirh0uj+quzgZedSnvbiPviKMPNFvkkGWDAut/2dqIWza4+mJJzFS8myyqEbwyGbLC4bINQ==","layer_level":1},{"id":"b91ed42b-bf6a-4ed0-9a34-dd7fabf7dd24","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Administrative User Management","description":"user-management","prompt":"Develop detailed content for the administrative user management capabilities in admin2.py, including commands for viewing, modifying, and exporting user data. Explain how user accounts are queried and updated through the Player model, covering operations like balance adjustments, VIP status changes, and inventory modifications. Document the /export_user_ids functionality for data extraction and compliance purposes. Include examples of safe data handling practices, privacy considerations, and audit trails for administrative actions. Address potential misuse scenarios and describe safeguards such as operation logging and permission validation that prevent unauthorized user data manipulation.","parent_id":"6f9732e8-8190-4a70-a80f-b193a35c399e","order":2,"progress_status":"completed","dependent_files":"admin2.py,database.py,export_user_ids.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:49:40.4567538+03:00","gmt_modified":"2025-09-16T16:26:02.93358+03:00","raw_data":"WikiEncrypted:piKNT601qxwAxFbFc+bbN9Jvv04A2h70W80VDYJEzNkAEUmq2XzHxTtt8aZIzR7xF2J2DmGQVw/y4w6dafGfpumctfnEBDg4diH8VHEGgQBFKy/mnk2kyzL1RokjlCf0VN2uDPtbULsiehjMZ6+8Tq+PoDZJLXlZ7jIqYKX5YeIotvd7OlhzWeEUuS+kAsj/Uh5qgmkzx505POM27rbjIWMIjOI4VhkxO7EVmlRRs/aA/N0E0uF48AwISlTdbXgfwnxtoJaY5zs6AJupUGo4CD4Raow3WT4CTDt+avrVdPJgzoVKc09YhyYfrbv3JcoEs+mX1oFse24YgKlUJljjmyGrbRZE+egGPe1fppXE1u7OI+3rRqMpdicpSKS95oVK5d97478sU2UZvc8VNZLBqArTJNIFQBDsxGjZrQb+Kc5zUC6MXnxJstZbvlpOAsDNVxVIdmPWKDbBgbITdEypHbmOG5FzewCbQTF5pymt2E9bHGInPg9nBh0Lpt43ZpCdDmQmC0iTsy4PN8Ad1bkPmGNVkeyHQ069ak7WLsMcFW8LbUE1yHR5EDzFoSp0PNcHBsb8lITuLXUKTj6NFdxtYl5fsz/ErU2dJpOxPQiVHV67mV1HWrGCxx9DL8UZ0RwkcbvBHz9D+mhXQTCKg/6TuXdyxWE08xqqbzX2s30ODbdM17WLRAH/PyYxX7g5Uxj4mvsdLg5o5+7OvPIxd1o1nxm6+0YOQFadFfT70S9YU3lg37Cg5+3p8lj1tg5/IVi7fLjHxiwtsBojKwq7E18rtwyxHQVYzfdX/quJ6w+CUrlvcZ2zYPpNW2Oi7nu2fVhQP1QvnZuBgY86RYX053VqeijO8NXlk+IBnScQcibBtAwdIPOGGWL1jGmorly38rdboWdrgKUSXeQtsxbMjcMJyVGyFzeb4B21Wb5jx6+m/FraSgdi0YQRpS4iQw4HEgzlcc1hW/81AscJYs2HXXCWCWiHuOLlGJx8oEdoJc9Es1llIkvr0eUDiVk77LiLotLiVjtpZu4OaJpjTZPeqFUDhQ5rTWZVXgqe+u30llQm9ZqQqG+3UynTc7Afiz/J7to7drFqI5hEABR5Y67o9xsLqzzBQbshFWjBFJmHqw1Y7s6W34fYY9+Y5P9n6ag6RN6g82O1ABrX+Ozb8jUZqI1SJVAZduRFVIjmnnAK2xfVjFeUvVtpK7lRBdrrLxA41QZybaEUd/+Ofw8fKuQYA5c+g8M9DbQ2gPDCgp3qxc03QBcLydZhGnIPE1pNchPtjdTB149qBeSUPbtG+1VXPoUpo05IzUK2VtYFrckMFC+m+CQ=","layer_level":1},{"id":"ae09e337-0222-4a4b-82d9-13fab93ac580","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Receiver System (Item Selling)","description":"receiver-system","prompt":"Develop detailed content for the receiver system that enables players to sell energy drinks and other inventory items for septims. Explain the business logic in Bot_new.py command handlers such as /sell and /offer, which interface with database.py to remove items and credit user balances according to pricing rules defined in constants.py (e.g., DRINK_PRICES, RARITY_MULTIPLIERS). Include examples of selling a common energy drink versus a rare collectible, demonstrating dynamic pricing based on item attributes. Describe integration with the inventory management system for stock validation and with the economic system for secure fund transfers. Address common issues like price manipulation, inventory desync, and market flooding, and document how the codebase mitigates these through input validation, atomic updates, and moderation controls. Provide guidance on configuring price curves, adding sellable item types, and monitoring transaction volumes for economic stability.","parent_id":"8c3bbf45-7ed9-4c9b-a56e-d0c3f40e2221","order":2,"progress_status":"completed","dependent_files":"Bot_new.py,database.py,constants.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:49:50.8715821+03:00","gmt_modified":"2025-09-16T16:27:02.1427445+03:00","raw_data":"WikiEncrypted:OxLw75zJyzGExYdh/w1VR1kcdzoplOS2FckzUrtITzt7LH5y7LwynhaX6YezQlnpdvZG4ZzjrXVgnAbjyjToz67CM0mFWlMsTnTi2SIz3ksETLYojJ6vfLEjc5tMftM7Z0XDiPeAk1FW2XBPlX3KYTkc4+wvBp0TvXv5fRTkcab4DX5zhvQ76GlRRs5btYw+oIOUp4YjKhn4mZCwh3S0LChJxjAli8GThL7G7axldLyTxzNFvHNh+Iic798Sh7jBf4w2qS3JQHpA0Ku97ClOfcBRiH9iiK2pJHVpLXPoyDL5k6ZG8WbRgaXaxU/LfAUy9bL9Ng+8OZFWjAGN+wkA9cD+Keo/brNVtO6YY4UrHnr8gfQ0VErMQhuAzIumkK4jGUwJmdRiACxUVCkFR779VCv3JBzd/Qiy/uSGskWzNCnyGJsWff7HuS1JPTgamcbxW3etQeiCfqeAxtYel6cVxR8lyn7KwPbidz1P17Ts9m0T2K+EF/rv5Y9nk6a0aOfd778Souh/tc8yh0bDG/vPBc72kWArhsAGOnjOn6dMyr4V11z4/540Pu+TQ2cod1S8tUG57oTN1nDCFyrwL9MMvJHt+FY1S9GUR0sM8fCvjfWiAh/tLgpUWio/lpE7NbcvicmdM2OAJwZ5jVtLKMhUcqkxS6Lg2FxDTjaRvbO+KYfJJfe0OLykA0/HSPd8g3303AvHvsKfucqgHKHlAdUnFrFre2vCW4+3FDHqtSvwwGg6nC6vvV3tOlEX+q2vGDVQV9Vd0fxBylIqlwe9r4cJn2K/qAi2GS950GenhZE6Cfw1dGVw3qWzSUN+gzfYSwFucCaGpBduXlBgRf+SOayXV8dE//zeNukDrTcEePIheUX1cTipsbjbRUTYbGdau7IMWkLhVJcl3CwmDKjLq+d32DytRjJ7OJ4gtfpYwrdYEUp/DT4rQ8POZ/Y4fb4D7Kr78LHEOkySD4W5MIKuMXc9VcgAR+4l1atDdebEACoRx37h2fQ75d1kxg4voPech96wpYcs3uYOICSZFY8c+70OQ82WMiy7nA7Nnw7C1kbx3WrSuguCn5cVZ5Z+7lAzAZvcG185owHw3QKMkPdLxMDZDyQwNYcaRSJXF4uOp4nIgqxyq2qF+aaThK98MMAAiIm0jNg57T8cIKInWCM7ftxnUTbwMHRnUAAsuWVDcAR7U2Rw3iAkm6qWREDxKyVcHr3iYGSV0clKjAhBIVvdOiEnvboEanzK6Z82WMKJX4WoPHvaR4f6eVeFre+F0eZWfXe1MWekGfwBpSHA5gIIxu4nQuU2rIs/m2j95YpyYkNBqe6++Fs9n0rDmlex6nZM/PrZrh6pjaXMSZQo/5uR2tCmubilrVFdSCTL6vv3c9tp8z61b31+uhEwGALh1f2AWpeBBBL28DKPMYmrtOrO8yydg4wWdVgh4p0Wey8Sl1FGL6HITEWFDfbNblKvlS+RZ+tkGdNSyF91KuDNfj8Q8486AS1bKtnH72JoHv568ui2Hbfs98YD+hk78+jLEoJHGI75aPus2POkRnDpjIbsN1qXidj8HcFlVN4mYDye4DDzan8vgf0LYAPLYd0q0Vu34paSnlx64Gwl+OSWgO7G7p75HSmqclTxBjt9Qe9KGdbN6FuwHDxdn3sf+m+Rkv/3UURNbtVL/4Omv0WvEn16qgWtKQ==","layer_level":1},{"id":"f236bb92-be56-4ad7-a590-0b273fa05746","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Leaderboards and Rankings","description":"leaderboards","prompt":"Develop detailed content for the leaderboard system implemented in Bot_new.py. Explain how player rankings are calculated across various metrics such as total collections, VIP status, and participation in community features. Document the database queries in database.py that aggregate and sort user data efficiently, including pagination and caching strategies. Include examples from the codebase showing real-time updates and periodic recalculation mechanisms. Describe the different leaderboard types (e.g., global, community, weekly) and their respective update frequencies. Address performance considerations for large user bases, including index optimization and query tuning. Explain integration with the UI system for displaying rankings and handling tie-breaking logic. Provide troubleshooting guidance for common issues like stale rankings or incorrect sorting.","parent_id":"f87ff516-9343-41a7-8fb7-a226fa04d02e","order":2,"progress_status":"completed","dependent_files":"Bot_new.py,database.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:49:56.8729425+03:00","gmt_modified":"2025-09-16T16:27:41.3751794+03:00","raw_data":"WikiEncrypted:e1JN8tF5c1sYfwP4R9jP/TuxUdZ1DrHLvaGXynpQQDf6jwc/9KJeEshQncAxGZO72dFLZWXPkJb0XYeV/MYmOiQ2kj5Wyf2cmE7r/EacjWbmUz3RMqDwsdfBE/C8Y94kjASl4XS7VVFZj3rp4O9+2fqtbVYww/aWXmo6bv3LqWC1xsJtkfuUkGeniwLjvXluUbHZ9dJnVR9frEGtuw07HH+zP0IeBjGzIR9bmAMTSKTOPmLGJERjsQPPeWpPfI+vurnRsaADxXYyhB+YA+1ZPZEHf9LBAVBlWJksHfYanhn30jeHECSpVWCmTEl83+q+Q9pm2Ki+iIa88yTtQLdprNe9ay4Y6EJuijy0iUxp+sNnBEC5OUWyJRw6UYMlqM5BBK8zlJCPJTAMsVLZKnYE9rBnA8yc8bmT3frRH9La9ZdG77LHTU5upo/XhW9uGmph3fcOpsVeRsO+wcZ97GaC55/+ObXAEzoU5EJInbmYvD832E5PtDEzmKZErdWr/nbPdRveEgrrQ+k3aMabDOQwM55OPw5GBAKt6o+5Q6X7Eh6UfUNOwbOXGxKkcA5U178/+y99EzU8E52JIOXbEsPWlgfAP9C3U25n0erhX8JaKKOhjk9zqiNoMFgUPJBtN/dTusNojqJtfzXP1VMRGtP8EkuUxWPlLAiYMFS40yStl2TzWGyOTvI23HivEzwOdWYhRnvIqZFz0ChFo4hs5/Y8hzg74hHWAESO686c/KdYDqTGK5HnW3g9/QEeBR9BQ+OqZ8zY1ziEmHJXw01lx8jbIUP8hrFf8tg5PNcvAGjhR+qAwBVIqDogEc6luB7WGg6KTP1weno7MDLPOK1gh6D5ezyyz8Jtc8zHsVi1TugovmOX3NL9WtpL6PYQq70O4GI2zMUDqAyiWqTJ/gzP7zxHyrEOYVMI5ix5LiRO1BqwPaOny+JU/+dVnpMUO21Dtdtupz4AEkz7II3YbSDV/3sEeF5xDqmLeODmzq0AFIATdb4XBc7sYZ6lF5Rao86EpSft0tqflcloD+X24Cx8LymE57fH5etzQ+NjcoCnn6wvRF6V/JE+wcDyVraZCPQpLJHDGqpBktmJ+afuv9mTdHCvDpbr7tjeWVDp/znjENvyZDwEa9MzRjqj/jwJGzf8ucpKjFNA+8L2c8SILJTqpoG87dCy/MURQS9pww+Gd5ejsGWC8TkmRCwzca+b7h4jW7wODRyvCifRjh6MhWOKWndzW+uuUKXuoqB27BPRLsVz/sv4gtHCp6+kJWsfvFtnaU9GiAbwAsPZTP4iREfwg8yOsjh5iTW448aMd67IBSTl7VFXsfIdVF1oJ9+oWkuj/z0HJUJGTd5rCXWIv9Na1/lTiUUL7kbRX7OHFA0iEbN02KNbBdq7x9+MiVZjKVC/uNgaO1CX/vIyC16xetZKgi6/WeZcSQXFbEmifs4NzER1XmsxyPiihWr8WxW6DUhiSdETX8xhC6ljpVgOIghq21/wHg==","layer_level":1},{"id":"5faea0c4-05e3-474e-bd2a-8f80eed4cd88","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Daily Bonus System","description":"daily-bonus","prompt":"Develop detailed content for the daily bonus mini-game. Explain the streak-tracking mechanism, including how consecutive login days are recorded in the Player model via database.py and how bonus multipliers scale with streak length as defined in constants.py. Document the /daily command handler in Bot_new.py that validates claim timing, updates streak counters, resets on missed days, and awards escalating septims and energy drink rewards. Detail the timezone handling strategy and synchronization with Telegram client clocks. Explain integration with VIP benefits that grant enhanced bonuses or flexible claiming windows. Provide examples of edge cases such as clock drift, daylight saving changes, and multi-client usage. Address common issues like bonus farming and suggest server-side validation of claim intervals to ensure fairness.","parent_id":"804589c2-9519-4f4a-9327-7d761b038df1","order":2,"progress_status":"completed","dependent_files":"Bot_new.py,database.py,constants.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:50:08.036601+03:00","gmt_modified":"2025-09-16T16:28:24.4226875+03:00","raw_data":"WikiEncrypted:Dmn2WSDytSyXriNXg+5YfVHSZEyAiUj7iAEk5EKn1zcbODAEL9K0PPHujoUj7wjyJJ0JaUamJt0aQQC18avKP3kpgXMLq6SuFtIKViKx954+EEdBDcM3TyvIYCFFkYvmZoHJTVWZhMJshVr8yjd89jyxNAelI481CHoe3vFmqvG8MME0zLqg54wnlrGhDlVxPQoaW6VXQsyW0GBPRI7pK5qD8KcXhLdVa+ckdtf3tumX2yECoCEZq30LcPL6hhafFjnLqlfEYxdvnmwBsJDgEGMMB8TQ6PG/XgrF36TDcE9SjVJVeUh9ReSCYB/oXgMpXnM38PiNKsPxRVZj+k/VVfCMzBSw+wNDbro+IhY/DOpymD4Jv0G57rsYd+KFlpiyWL18CHc06kbZDsj0Zkai7mAkcJeU34tne1FTHjbbrWw5WpGU5iSQa06qmgx2mHY1mJkT3B7MzXD+82VxIgbzouSe1GveX4AxiEnnJaUgJtD8NQaGB3d7UISYjqg0GL0EM1mytxON44/fUoUXinfXSrjwIe58DTlGQ6SANYXbtdyC/dYA2QeJU7wjxEekn+Je5trwn7lBQEgtr7orfqcYYskm1pxVG5L6ZCWdbdRU/UN6wAeLZdSzbaMnSWQ+/yNxn2f0AWOb050P4wIUvSDvb5VwOoIHB/JrX1DqFkL6zzfYFRudQIygyA9cJvnWRTaOhFInPkTj361Z1iP2tz0KAJRSDyHvW9WmMwFPsygj2bG9mKMwSfFWffbuV5Xp+7Yn06FG71Wk4QLxHjfomOnwUj8XZV31FxaWDpMUK5M+WAIgwFK/jl7R788F6iwtsTR8/oVE8UZyFzRpT176VQoRoAXMRU+nBW6EBhRGzEbiVO0/s95sZRyS64k/o5tMBu1BHiLa3hQ++5dMn5E+h0vCw65fVQfCKopV3TC1MGIy88mxQ/E/zFTtj3BQrjmuI2qetbTM6obzUkUyKSqH2PQOgPfz/B9ntL8M2mvmFjSvgkdsKymS4ptMZqV0CCsta0mwzRvs6HtRvjz3eggi6P5C16300Z3+ZtGXlV/tsxAyzzqSawp7TbF6gu21rCjJHY39SxfRZJj1z5SeKsO8eQ7v2DPeXiXsuh2wnWCzxdLn1V1ObX6EqQia6huSFYfKqb3d9zeEZkWUOe/a9ZugxwXbVXeDMn3Adcy9VObL3LzctWOCz8rk027eNzxVBUV87A6vDxka9zQxjtR8DiOCfKL+DA9hKqgE0cq5blLcNCskc6ocRYefZsDRZ7A8BR1XQmkJZJcXmHYalxlsgpnbODS7BASu4pjyZ8EtS+1U4cSoii6+9+86DiWhsrE3zmiAPSBPRN/j1kVy4pHzxgUJ5hMvsIvYaUFbFCF621DL8W2frthJu1iD04fL8kQng4l3im3ER4QHZ2Fwvc5zUA/KpW7ldKH2oPJG35ru0shiCiASc2U=","layer_level":1},{"id":"9512e3f8-5040-4b50-a1a9-968708efcfd5","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Core System Architecture","description":"core-architecture","prompt":"Create architectural documentation for the RELOAD application's core system. Describe the modular design with Bot_new.py as the main orchestrator that imports and integrates specialized modules for administration, help, and data management. Explain the separation of concerns between the presentation layer (Telegram commands), business logic (in Bot_new.py), data access layer (database.py using Repository pattern), and configuration (constants.py). Document the asynchronous event-driven architecture using asyncio and the python-telegram-bot framework. Illustrate component interactions through sequence diagrams showing a typical /find command flow from user input to database update. Address design decisions such as the use of global constants, singleton-like patterns in database session management, and state handling via callback data. Include scalability considerations and potential extension points.","parent_id":"","order":3,"progress_status":"completed","dependent_files":"Bot_new.py,database.py,constants.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:48:49.4512818+03:00","gmt_modified":"2025-09-16T15:53:32.750621+03:00","raw_data":"WikiEncrypted:4PoKJZEjoeT4XL3d+2H6W/6FWVAUV2gnu3I7xl7Vy/iMCqHD/8h/+V5wTHHnZ8kJc0EguZ5A2p8nyksMztkyQoZjKupKuZNkfhEwrvsdWrM6NWteyel75ztM49lswj2o0yxBLPKHyYtPfDbz/grz2jriBHIuKm4hxup2skfYU0EnTZxUMzA+goqEZXqxxaDXocS+yI4EuxjW65zNnGYROZ7luKgUQnVYfGKXm71vjACjZwG21m7gETCPR40I9CP7b2Gm1pVH+rAtu8pmTlIOklxsqZspAYe7s39fqJwwDVv3ebkrAgk1wVrMCUTc4ySDTGNF8J61BKiIy5R2jbBNxuiGElNNh+AsyngEyd5gdFcxh3GKy/d7kfVXaNHalKmLe4xUmMYh7Or8pnQCLtiVnLL2Pe4ZsnCHfa65lPHsdGZFY7NmIom/YXCW4CG8tYGrl+AUTUErYv1RggbYdSeXQ+tb1/Fcni7wW9gwTpn8bMkj/UphdyzYj5HiyhFKEAOs+lijtoJxY4yeEnXi/U4jCU0vMPmAgKQQeMEQkdJ7/pvwG8DhS/fdTpRap4hrCNhIx/15vLuH3eBmwfiROjS5Mmn4FUtfDPqPfAS4aYuYHSMoz3Vzq0Vw6qrPPy2CH/CZMnwCB5M0yjX04248dMXABW53lgnSYRaZjO9MDUATHeSI7UipJu1HxFVfaIqHrxbHc3Rtay9aPGfNLDwKnl72XIm/VdVbtCj0PjlHFxJwoN5y4lMpxUj4sGcNRwat221Xs7BVvSGUpBRElrnNXWVMIFul0era8ZqRaakQpB+BBX1OnDN2zEtk1q1arKFr8Och/D38yXurf9ZFbMtOVNX+/psbFC8zbKqJp2aBuDoRDKNjrbpErr3WCebNzBvv5S823d7R1upk8DM7CwIEvJz3nUTOPU7nYltRMQxP2ppgseBic5vLXN3tWQGG0DYLS3bWT3h6MFONtnkIGOlUb6NUvJ3K/l9xwOfEGwAcrGQoFIlzJkrHSDIQBgkif0DTllVI2XmZVtX94eDJ2EMXluGQcFtwqAQdR1QYfHzMpGzTo3DRMEb7w5SUqbTAASZx6I4bp0fdus8HTReyUuswn5BtIHtsZjsntdIlsKhRNeRO7A5mLxUVPXeU81jbP1F82llTP7chB0G8zEk9qBAWY7hnZ6kbcrs9R1MoNu94PLR9HWKpBoCkIueN+2An9fZRgtzKSohE49wlrMYqQuBJmeKZ0CQbw6IEpBvirpzhwY+eS7yF0tYrwz3fv73YVptzxHxP04C8o3NLnp5AjSkZpx6tY7/EpVPSveZX8kNn1OSQNyqXodRfPGUJF17iNcStecJPkYc0K72qmtbSN+NtgAnjQWYSkNKC6CxBziTEW9AItWg8+saRLeILZg5jL6FJCMuQF2emZDn0F1fwePPh7S2eD9b8IatGbiXL4J80ai1W03JBV89fOd7yBLPSIo35ppr7FxbnYmpPx39BSwTmo1bhZzBQ21WihQ8MAUj7IE+nAWjKPVUBIKbQ9MuLxOy5pyjav22CbMbfYjaV9vtu9D5yBQNvneeN3JdaNuH3iNL/sm3DPiSHhI1EnabCXxyujCtAEk+gJ4VACqqmG18bYGoVG0w3FfK+P5zjBzsGBHOyEytsyG7PXjW7Ey4hEGATWKLgqgg2ZzmitU4pJiG3dstc3Hqdhcuitf481aj6eKD8wSQ=","layer_level":0},{"id":"5654372f-fb4a-4289-9c40-72a856ac14a0","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"AdminUser Model","description":"admin-user-model","prompt":"Develop detailed documentation for the AdminUser model that implements role-based access control in the RELOAD application. Define fields including user_id, level (1-3), and permissions scope. Explain the primary key on user_id, the hierarchical privilege system where level 3 admins can manage lower-level admins, and integration points with admin.py and admin2.py command handlers. Document security practices such as permission checks before executing sensitive operations like user bans or database modifications. Include examples of authorization checks and common administrative queries. Address data integrity requirements and audit considerations for privilege changes, ensuring alignment with the multi-level administrative system design.","parent_id":"5bf00e53-72e9-4056-9bdd-0e382177de87","order":3,"progress_status":"completed","dependent_files":"database.py,admin.py,admin2.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:49:12.711006+03:00","gmt_modified":"2025-09-16T16:28:47.4066118+03:00","raw_data":"WikiEncrypted:WWG9qBb74s3FuYyeVUFZFDie+OW3d2+1sJa7Sn8A7ZcfJx2E3sNXFhSPRCLAElkBNPWZ4o+yvYQQiXxGQoRl6dWGuZ7uJQhhiwoG3p3/JCGThVbw3Jzu630kPcFiLb1TL6F07oRKXr1cABBvdNVx2BtFKu9R2w+uiybwEARhsH6HFeGUwgExEMNYhmbxI0/GDudJT1RrR9AZIeW1w2qML+xfYgvWg1Rs5AY1aZn2nJCE3DltjJf6Rt8uoJZiR/EBcdwp+x4TFi8EoIcKIhXZ39bhpOKz7yU455FqdV25tMa+FsUCgUIDrj74ipkbnF2aHJp5D0iy7icpl1nbCxPCVrGpq/inIKTS/iWiYz1C178tDY9JHEj21ocZI+F3V7ZmEkm/wua/jBoSwTL6ZayjLaxJ3NChY9OpCTzVLdBLR9zeh7mCjW5Zrubk+x0c80r/gHICeN5rwoSY7gHiMLJjfxRQwc//FIHCITSGHwfhGUcLFjSZ4C3WST+meo8N9D5FCqkF39l8pbpqQdFQ7Y+KPaO2YEE/vZHmFdxezbgKDpMok1idnc/xUcAQsK+POG3TnoGdoE7ypKYlacxlCSvvgl8wZxzVpAXrdRd4riuF/e4ymhGidD+wZZ5JGu6JbxsJNoyMsFCFor+R0ZtkSk6WRY1opdz9qVlxHXSOBqA2n0yw9EnkeIyBo8HxWoNaFB76+Kg2e+0GgZ7u+Se6rH4w53XQqDFeTs3b6sqd5/UtnTJSqeBxfyQKFuVqYwDqb250pSAEv0JkP7YJe01uYA68P14Otd55V6BHZL0jf01e7J5tNBhttWBWe3Mz7GRXtWU4NgXmuhsqACrgy7oVOci0P11v0SdqonANNhu8wE1AL+7MdkzgG3+tMsOr8/xOrLylTZBT8q7rF58aeVkFUUb4TzyZ7ArZfWmwcKN4hg6ySJuJ8PscmXbqceH3GLVC88XT7STKMtseniSs577vhG9C81njpoN++7OQxEeKMfzqcTLd/re4gDMo59IWkvzKYpn6chFjgp1Jtsxtpx4u1Su6zJ4LCdvwNJ3xOoDYFrsFTn+XZrdSnhLRBT09MG9EUtW/mGvlBg0+RiH4Hx6ssinsC3HlqshoJ1gjXD/9ntQlDA3qhD9ArbtMjWedLguCPAILWNo1LaU2WddijO/A9tEWn8TGJisdsv053Jm/tmtuucEnmULrgVNI0S+zJoUvd+khFXt6NuBB/WMxHm8eRQ1qwS3XygpJFgfSRf+NeXnl4rbvn35kCjwNFvzcxUKOfCuzR8kEEyO+xZ5SMnpefEeGZy0CR69zxqoN4OrefGawF+3FONWFp1AJ0XJqWj0oLfanNib/qa5lt1dwAylGFiiffA==","layer_level":1},{"id":"5bf00e53-72e9-4056-9bdd-0e382177de87","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Database Schema Design","description":"database-schema","prompt":"Create comprehensive data model documentation for the RELOAD application's database schema. Detail the entity relationships between Player, EnergyDrink, InventoryItem, AdminUser, PendingAddition, and ShopOffer models defined in database.py. Document field definitions, data types, primary/foreign keys, and constraints for each table. Explain business rules such as how rarity levels affect inventory sorting or how VIP status modifies collection rates. Include an Entity-Relationship diagram and sample queries demonstrating common access patterns like retrieving a user's inventory or checking cooldown status. Document data validation rules, indexing strategies for performance optimization, and transaction management patterns. Specify data lifecycle policies and migration considerations for future schema changes.","parent_id":"","order":4,"progress_status":"completed","dependent_files":"database.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:48:49.5432888+03:00","gmt_modified":"2025-09-16T15:54:57.3123799+03:00","raw_data":"WikiEncrypted:veTYwq2y4io5qXerCTrkkKY19u2QVJ1rg3+MIy4jIV2G7991jW6cwRmNYXwYpuW5Ml+KIEcFsGuMaLPhyxqQ12Lfpg2uPJQcsmkp+Y+WvLU7HJtC1awsavKLxqC3zmWY2MwijFgtEzCXuNqhiJfVxrPQNolIlycG/kPDUOkaoKqbftyR9m8Uaa2WgR19uzCu42Td41Psgdo/HTVii1hozvaG1o+M5x0y2A286MToJf0lGGU7ju7MY08V6wApVUtDyouAMbkfue3xHpMma4N/MfuU3h6pLHlaCX4sga1eMHxVJPIhKWgzEAWZgyDZzErglfbvwroBAZbkV3J4bi7QFoSJiz3N/vyCPKLn1m2XFvN+5HEjqgB6s4Z7gJlOGIdmCfad1mgW8mtrkb2RHJ0uDFUnmOTaioO2wbUgtF76ZsC84BJSoVs39xpO2/Mt8L1qhFGYgJxSsFhgCnb0vgT9sUntxlgmaIDN/iEyRiZCA8DtqfI2PF5Bg6tLSwYTySmobbX9HeZ54h6zlQ6/GJ6igZjQ9GxiadmNjPMvrruCDbBwjHxxAeFN8jXNccVN/nXm5rGT2tRWzY54I0Jagu4UPT+1YtbvXUJddVuvdB2C/D4RiL4/qI6y4rQFVMiRlupKQjDVuIWuq+lv6knoKT9nG6eVoTDnHDMa3GjrmS02muEvjGdD6BvWOAxpIruB4cL7Q+BJZL3ArzCAV+bAQrtH8LUZa3N3HRr+wbB02xm6HILCOZornccuaYfgWu8FFRmqWFFgfrZMYe0ow8yJNgNYhwiuZsFpbbb1uU1T3qnU57JZOrBaPmUwQyDcoeNbAge0AuiGvhDHKH+cX6k4BQSAaOpj+zez3Q4b4m935lrPPxDuMnS2Tqz9GUrDxZjlHwAd/Vc9P8/DuajLmsg1UvQ+0mx8UXUu4mbLMNBdhhHXyhc/5NhGZ113Q2pZ7mmKyvIeN8t7wrBNvYTlmI2D6E6Wa3rydDdMeCZzjERJD3aE1/+hgZVsumduOEDwa16mxv8AhsUW2QF7te8J+AjHTlDylrHbJgp+OFPkmC4mIQUdTunBgsJu8U39hlChb8qxAVxcF2cX6KvLIQaMrK2NjHCEychuW6ilTZkJg1QjCvhJuBll3OQiuJ9uO0hnA2ofJaPwn1T3xQgxtXNusxC19evCY7CsH0U/H7E61jnYsl0kCKM+KYYThANkVmM4euu+wHvGfLRYuIdOZl81Jgs7o6Jk8rqSBl6bQy9NE2LxuDuHEK5TNNHjBhVkEp0rLSvH1igaYN/2GeTHYtypulPLfnKwmXdlMzzWT0WDlmNlCOOaLnjt9nD9AZNSCX708B293YZswnzOApPgT38aTZR38R8fZEpvCfZWdgaowrV9OPcnIWj/TeMJkh3IOd63O442yW2BNYMGtS8DQsZJya6CkyXBD0VqZOEMLlXSNZjpxDOVs43lEj78t77Ic6SvinNZSvY8","layer_level":0},{"id":"4d642952-645c-449c-8710-08b4ae7af9b3","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"PendingAddition Model","description":"pending-addition-model","prompt":"Create comprehensive documentation for the PendingAddition entity that supports the content moderation workflow in RELOAD. Detail fields such as id, submitter_id, drink_name, image_data, and submission timestamp. Explain the relationship to Player (submitter), the moderation state lifecycle, and how this model integrates with add_energy_drink_new.py for new drink submissions. Document business rules including image validation requirements, duplicate checking against existing EnergyDrink entries, and admin review processes via admin.py commands. Include sample queries for retrieving pending items by status or submitter. Address storage considerations for binary image data and transaction management during approval/rejection workflows.","parent_id":"5bf00e53-72e9-4056-9bdd-0e382177de87","order":4,"progress_status":"completed","dependent_files":"database.py,add_energy_drink_new.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:49:12.7858682+03:00","gmt_modified":"2025-09-16T16:29:30.4362112+03:00","raw_data":"WikiEncrypted:Vm8fU3mgJcVlu8jGAay5a+L2uznLdExB77UF3NSBD3qNzHKy1lCloT9jnWuKAeM3HsC6l0gT/v7DeCKuKq/wdyp+WiOdrBtGyrYUgIOriPUO/KC+l7WMM8QNc942ahm4/6AXuecdMuZdxA7Ry/awJSN4UuRUOdqvp8KKDj9XE8ZUPm8KIz4Ovbr4LXA0iCvFcQAnOLhSF6iULSJWXZaIyO3XewlSKyIOTU3NNrM3bGsoD4CItIVh9I5bmZ0F3xNhtsxx56zu86KF965s3MrplXeLRBx48/eZv0w6Tueh2L+HnxrlsXlp1pCDB7CnorftzKxrP/1PKWDVRhsHOTnURFI0nvQZkWHvC10SNSwi+JC3Rxir3pdrBxMo8sZyMyVBhN39FSu2LHObmQD7/S/HN2rmL/MmFPzERr1of07vz85m49j8UW37jgu2Fh+2DKFvA6TBQBlr8+uZ7bWOzfxzJn8WgoUkDpCB0Uq0BC1Hi1iIrvxwawTHZ5tVE5YRTKOYeVAXvn+cyaAvM+0lITEP8i0dOzoVZpw1lClFWtITz9BC/4/WC9Ob/V8lBuIkjEKnuI5qUk0NerxFeKFxUnBlc+E1bmrTS0aUz4KMZbIQyimGv5zjw5wr/CZbknHrwI5Wcx1kSgyMoZlI4oQyn8XnPaItv96izSZzyB9gUc8i8WqaeFNgD0pgNFblJWZOIwhV+9cWNvTfSgHW0MUOVM2NUqaWDHGrbTpvG+bNvwcrHMA5n2znw8DgA9buPFAFYO9Gz1S2PeW8WoS1bQyr20VhFl3fUTR1ksLUU+z6vArARKpKJl9Aj7KU+1xG6LojPAD38qPnKE+VjGjGqLq6QrZWdHrg/IltpCc54nqvMqTb8zHVifqmG9GLVkhv1aVRfatacsK6wWhmq4V+yc5Gld02tOl2nlydwmRq/jrSJAd9in37k0WITXCpKfQnij6r257cU4RIku798MkGaQxiy45nlfwRqPTrNQVMBeyCCKjPb8h7Z7Lam21KsDnv12wJPomaz6AlNRkqHxFXJSzEawYtLE3i5C98G+U9gI5pl/lvmRPtEhUVnLTc22Q+U+eHVkq6uV/4Hla9sRrHLLZFbkv5nPH73snE2BRL5KZu863ojVHYZYiCcvr3d3cIMs/MaLVbLLjjmPIfmwQtszxdyfmUnalJT6YEh8sBnPiE7BPQ0Qyi/iO7SHoVE54s8HeIy3kvneiJZrNkwVDM4JQOymJUjBvyX/tsBFxQUjA2LK+30xwP16frbTphiT1xj0L/zbzwywfGO8xHQstX+c8YVsHxvnwIfNkMQAalHPZAZKDmde7L6QMF4WDYYwUFXVsRMEo9qUmXDkRNzZQ0vGgD94BwOwOMPX/nZ1LBArF/9s7LAz8=","layer_level":1},{"id":"4a32517d-886c-4c9a-8e67-2b407449108d","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Core Features","description":"core-features","prompt":"Develop detailed content for this section focused on the RELOAD bot's core functionality. Thoroughly explain the energy drink collection system with cooldown mechanics, inventory management with pagination and rarity-based sorting, and the search command implementation. Detail how these features are implemented across Bot_new.py (command handlers), database.py (data persistence), and constants.py (game parameters like COOLDOWN_DURATION and RARITY_TIERS). Include concrete examples from the codebase showing how a /find command triggers database updates and reward calculations. Explain relationships with other components like the VIP system and economic model. Address common issues such as race conditions during concurrent searches and their solutions through database transactions.","parent_id":"","order":5,"progress_status":"completed","dependent_files":"Bot_new.py,database.py,constants.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:48:49.6013607+03:00","gmt_modified":"2025-09-16T15:54:54.2396501+03:00","raw_data":"WikiEncrypted:luoNp8LvFa7zGThvIT9T4gfD6KbzJyTAydbcRfVv0b4ipMir7bDcMLDQzSOEcRtlGF3LseUbKUQSZy8GFXzEwYryEI9JUWzVZFkjpoOy4cU/1p4kkwnEcjXU5bDbFWqhVZRUphig4JXX2DZdpbxss2DEvh8V+3q07NrTbjKAWMK/cMtouTsdthk7gkhryX+FF90dLBUchdZ91HVWKmCmm4m9IsVjXn7xsm7EFDB7Ltdrms8Lr41Q95iTox1fzkjFcHBW858zVCTUdkJJgWsp55pKonCDIzdnUl40C09RpEklBmERnWGuT7FJYBLGbcEn5964/3j+YF2euxoKcmAFIoyQxEGkocmb9ujaTa/TuFtDqPuiW5DIuJwRDX5Z3jFTpFiq+7SpUYP0Y9+2FS6gZeC8p9St160N9+DqyoPsMeD7qGUYajQsYhF4DGeM9FsIY5k6WAXWg2vKIZI9/kDvebLc8Ip33JiStS+dSDkovRFeW+9vv9KJG062I3p9ARpbtFI5sM+i+a7Lgtrjp9wRTbgVWuP7bW+cZnlLzkYcq5aIvmKrwx17UD3UsTx2UUao4p174t/PbFWTSVhLBy2kzDQkKUhlqOl55RuAim+DNLlF5MC1v6BNAjatRJNYh18asXw8VRLn+2BQsgtIRTw0OygTCJ4hFeD+0XlOvZqyU9WE+lM43WHsXvlkjZDthCYV9MzHl3G69coqlVJ/d0rPbsrQVneK5YgQzyNgpVhOmAolsXoF7zNvhS7xI1Q2RqZZzb1TxnhuFRcZ58VPs+q6hHkYT4IMFyi/zt2yUfXBMf9sScQUOrDd6xe6QvixwnILqhGblcxH4PeP9WZ5yaVkHxxB/6BO7DOW4gUtJM7Rv2bV2O5MK5XnTEYVrx6IkEHfEI2PWZ7SUocOL4SW9sp/PLC/cMS9R4TsVxG3setFYtnphrFZ+y5A7lNQ2b3Mywj/W6GEAEsu/wF8oYHeiPkV5qyTDT9ZJe0GritZgXsTvTtq+hbwxo1iq0qNqsMCH5r3Cw/lqHgNSiRg82leBHfbLsiCfETnkTjov0T5Hup/h537fkMVDdAztByqtFddLQZJgD66F5akvn8i4X74h90k00tyqDk8gymon1iGaaP+4Io9FQv6qFWP9t9mHkA9CvNSTyFMYs/7ecLX27W9K1zOTFBFaAOSGV/c7Q/SARkvgR6odckl6QwtCPybT6k4zVqjJDU2rqHWLbs8FlyN4/45O3mTpbwzaceqgYHw1PBC5vwVQtNhLJUrS4brpskY2VQzMutNU5Xt5WzH/jOSAN40xAlI387W8XmGB5wmxTfoEy4j54fzP1ZFSg0P5gclz1ZyIaxc5Bql515mgVR3agqdyLsRW8BZvPIuVjiSSb6ldY5XnkUg61YUaVQmwSEphUqopRhOd1d7DpeoFuhPjYl6i0QnctuGHk77yUjVSOG+EHH3Euo7rwBr2u8UWuST0OlwiJ2D2Rrh5fzRgsY9L7X3vA==","layer_level":0},{"id":"cd19ac67-d8d0-4f72-9011-bd4af6bc317f","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"ShopOffer Model","description":"shop-offer-model","prompt":"Develop detailed documentation for the ShopOffer model that enables dynamic marketplace functionality in RELOAD. Define fields including id, seller_id, drink_id, price, quantity, and listing timestamp. Explain foreign key relationships to Player and EnergyDrink, constraints on positive pricing and available inventory, and integration with the economic system for buying and selling items. Document business rules such as commission calculations, listing expiration, and atomic transaction handling during purchases. Include examples of queries for finding active offers by drink or player. Address indexing strategies on drink_id and price for efficient marketplace searches and concurrency controls during high-demand item sales.","parent_id":"5bf00e53-72e9-4056-9bdd-0e382177de87","order":5,"progress_status":"completed","dependent_files":"database.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:49:12.8608316+03:00","gmt_modified":"2025-09-16T16:29:53.6365555+03:00","raw_data":"WikiEncrypted:yNZBGAMU0yt/1qmZ+PjuzeuRes+vIJIisGID49FHk/DQKc0x2uByO2y7CvNrabf2mqVG6kHhcg41d2t7zbqKob9eIr6l1rYbuhFHqpLlGqCH9Z6CCmgaPxuYRiD0zGNjwsgiMkHHA9MpY/Rb2k0a1I6gZ8R8Qv2p80zLtwVBb0q6//wGnEiqoNijrXYmmWgUUAe2TAkYW8NwziGSPpc6GP50YL4uNgBxYYWx0v+n5sFPb8YI75NBCeI5jHLL09cHsZOJuZQkPF4D7GjQVr6hNSMwol+6WuJh2eIf9BKCAydzKGkIP6VlW43AnbS0Wb6BxNOI++OXzGjyIZ4SGM0/wwH0TOAtdzLlJIaVGYvIGFkEKkGm6hEQisVtUHBvxL9khDcBZHJ6zc13f8OhkmDuwYvP8ZGNRp+FhuePbMSK3MnypM6HGErlq+Eqwn9evgdpYjCB4zlICkzwjEidHhcS5IYeZ1m4tLyonvNDyOVMKXFkbj+0xsRAEl9N4m/YWE5JLaR+BMNo8+sZVy0pf4/n+lj8y0sMoAx0PGozHlAHJ0MD7pemCT+SM8vmCQy9HFd6blL7GXs9zRlIOSvdcZBbZJ9I3nWCc81h5qK/WDx0ibQ8XQRpXXgzfaQGZjSwe2h02t24K1+gpPMyNw1dmL2Sph9cqFqFdkIAykfYUYMZJsb1t4ozodwLrTYEcPUOfzjSuIvSiTKvWu5eun8DN27a7DlAIqr613lc2q067oo5QMCbEjhFNOVDY2ftaxGpoz3pGW2h35zMk8oT1m821K0p3Rk++aI7Ig61x5kE4jLiEIzqaLzi7jensTf9L7JC+eR1TUXit1kSuSXUD+jFtO1tHSdI7ABSMyz6fjj3gf34x4VrQYxgwEYlY4QHjufX5fr9PFuvt8WpFldtDgEO4SpL8RtL03DzYDWU5Hj2V+Qj946LsO8dbM2SStSYV1F8pMS+tRGi4Jd2JxZh0vByjpWQKdv5LyH4M2Cy3l1ASR78ElXZSZVHlrfacC1muNqTTvBkey6lO7o84bovi7OmrjJTNccCHCpapqMb4E1sBrnEYPxqudrhZ1T0MoM3t+AIQjV35TAdahDh/nPOT+Tfav6gwowy1UM3i4jtiJF9FYRshcsM1+XuseT0oZEODNrPkVle0AWpVQSRZkZPDYStZqO6gymvFwtTuO60EnD1fTEw/cmTAjKxEB3oLoFeRq0+4FvjbdrnUFr0uH4EjYcQsC2f0vC4Z0kNrvpJBjwXWKA8XtZYHCzRFlJkgiRudjV3uZCxJwKu3dGfxLXzeAfLuqtFOw==","layer_level":1},{"id":"db4c32d0-1ce6-4575-a1a5-af3ed86594eb","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"VIP System","description":"vip-system","prompt":"Develop detailed content for this section focused on the VIP subscription system. Explain implementation details of subscription management, benefit calculation (reduced cooldowns, increased rewards), and auto-search functionality. Document how VIP status is stored in the Player model, checked in command handlers, and affects game mechanics through constants like VIP_COOLDOWN_MULTIPLIER. Include examples from Bot_new.py showing conditional logic based on VIP status and database.py methods for updating subscription states. Explain the relationship with the economic system for premium purchases and the administrative system for manual VIP management. Address common issues like expired subscriptions not being detected and provide solutions based on timestamp validation.","parent_id":"","order":6,"progress_status":"completed","dependent_files":"Bot_new.py,database.py,constants.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:48:49.6682281+03:00","gmt_modified":"2025-09-16T15:56:12.7240535+03:00","raw_data":"WikiEncrypted:sgtePYLFevnEBflrNyyQDMNheFNZ7/iurPmlcm0GNEJuzp1NX3ePk+Y8M9+3786pgp8EDFq10Xhk3VhdymPmxE8TFPO38QsNlgUpMvHmLP8+WKuxFYgktiqHsP5kfjgRIfFBSPraal+y0GqHwGEUcbu35S8ZEIm2lxQmiWCKf+jhWxcwbbrTmSDO330rxAoSgf7meCLPQez4If4wgJgKaECxWSxTZr28j8pxOJpIdCYguTkIO5qO5Gd6Yjt2SWWsaQQYCU/0vdIs1JE7izZz8kOB49fLjSN0r8q4bAjF2lIupIy8tySk/bHP8hTwUoIzHDF+8xfZXkWc7F/8UAwGBaV3cOMDTnNQC46v+D0AK0Q4h3GFTJ4X+VHCUvpak8iTGNBnjcXImg2wVtuLzjBflgmYYkzW7ht8Vw0U47/Xnd+ZUoQ9vWiX0czQTIc7WWLat8rQ2wWnwywQQHPaSdRQXtqiLQwn3RxvM1uzgd23HOWjVnBoInUB0xvhJyr24kCxCiB/+lfhS0spr6BZ6uNy89YCZL8r7/laSYZk3dk1ckCyBheoqOtoI+ASKpngTp2a0P9VoXMpjj9zTAU8jbemb2QwqwoStrzz3hwtCvyMosxPM32yrYqIC8tOCJGK7Wj3lIgYw1gHp2+I1QNJUdkeW8SE/yER9j+WEklBaVXO/f5OwxBCZ9CKvIu95LeMqVdGUUe8yB5FWt+PiJM3zC4MjMRyhE28ma57SZNISJCpSMZof/ij1ZWlKqcMiFVSiZxWt+RibE/qgkcvSogQ4zOUJyFrVLDCBLZCALhjdm8W8rbfTDXmJS/8ETZPvY7CSqDSaRlGApAvrZhTdrG9YDNn5DRQeDMaEM+JS6HkJ+tbKmYNIX3ARJbyYUbjQ4tQ+12R/24eEWSeJGQlHX8G/Pl7ZJwUXh0KNI3KchQEmYyr40wnhk8DKvuWIf5+knMahG9+EqqztmTn3+2nWVcED+a4u/B/WCUacooXlBCj7jouNt/rd2h+sti/hOOS4BK0dfl0EOOkWOeJ1qKYVgfbs7a4Sh+6srfTZfY4R2F67cMeCYRkYtiinz2ma2pSis6aiAPc8zWnW4sA+ZXzofUCWl5D0QAf3GyxQgx9BpfJB3CJoF5cWjClapRsAujPHyow75qskw5c7OVgemcAQa0Hr3z1DsRUk+bASibcYbjCHYJINMfe3EUqYyzLdIKd2BgUPUDO1DAsNtVsOArAyKgL7zRNNo3DDSfFjBTNBD7RK6M/KNPLy0FQuRkw+CI5HL36U/WvNuKHQj5DBZ2ZK17RNlwjsMGm74Y9UVRpWke79iiaSMD2b+Y+IHt4W44SL+zOV6hmBABpE4gLmmYlvn6fXMJiF/6EOWFaPIimmPuWwH/NhskM8QUpo25i/4+7uYnY4qBNWKdGs9G26i4KUNfJ4TfcVw==","layer_level":0},{"id":"6f9732e8-8190-4a70-a80f-b193a35c399e","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Administrative System","description":"admin-system","prompt":"Develop detailed content for this section focused on the administrative command system. Thoroughly explain the multi-level permission structure implemented across admin.py (basic admin) and admin2.py (higher-level admin), including role-based access control and escalation procedures. Detail content moderation workflows using the PendingAddition model, user management commands, and system configuration capabilities. Include concrete examples from the codebase showing how /admin commands are registered, permission checks are performed, and database operations are executed through repository methods. Explain relationships with the database schema and security considerations for privileged operations. Address common issues like permission escalation vulnerabilities and provide mitigation strategies.","parent_id":"","order":7,"progress_status":"completed","dependent_files":"admin.py,admin2.py,database.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:48:49.8297888+03:00","gmt_modified":"2025-09-16T15:56:43.3429124+03:00","raw_data":"WikiEncrypted:WWG9qBb74s3FuYyeVUFZFAGHexTh1n/FLZn6wQ8OFNkaRYiZVe2fucLMELzoFhCQwA0DdXyD5rA2TXYiBMoJCLgoOGIQLKZbxJR5AlaxsQMsgOh6eEc1VepVviV2aluVcmbSXd3ynu3ccZ9JrCyeI1AKve6F27A0ZvtpuV2IlZ2CAGSIFKOBBwsAls1JU313vQHxtvP2wm/Db6xUjMJ6IA7lpMeV8xF4ez+Z/0qnGtG5cSogzCFMjNI8n1VELN5DZ1m7T+BXmIY97mHikWmnKxNjslSI8OvMLsJJpxzftSY+1jfKNf9nP0gUZeavZvU1fW0QDnZbYNclATzbisHuRfY6bBvK3A1bz13ILqv5qTB6v5Syl+j/3MdHh4fepjGE4fTrZByoX9rhTMWhSk8j50DOrSsfng9fj8HZl68iQIViSTpHJLHO8+AnzOruwOrvYek7jI+X7NHyq4WmeaTQmuvc/SKPYZr+oy6Fq2f4Y3SHs3co+xlknrq+T8t8aMRFl/S9/6lqhbw+8aAclBsXV8XOh/Lc33Q6IRveI5E6XOkKJ2flK3zRDmcAc6Jfs2xaXF1PK1SfU+Zz7aVZKDhF3y2eS/lQHxiZWCo4kZYLKpLU8NEjHR5LWQJpcvGjYvtxogFqdLO3e7lpOK8cpk+CosdSjPhzQq2n8aEJHJztLgbgNoyrYRi0d6oKMhftUPk1N9eSlEQ7YLn4SVfB9OX6p82OdK+3qir48qGVf78TIsREBfyxeX/3TQDaB+dPNdjZMgRoMkjW8POr4jw8ZuWZy6kAxsfl8UEkAT5egtfSSX2nGivDYcKsDFRIujJqV3cDWYeHyuYTVwgKn+3TvdIJNhPzSCNX8ffTR0IN9+qI0v5ymZHtkxhkOBSoV+j8JvoyKt6nYiP+euK3BsZGTIzixAltysTZJnX21/6TZyLAuiCnAqz1g/BWWvQSxSghcX0wfsjLaT8NHth58MI7zqWURyIRcSJg05eYRsCstsqL0yS9tsucVkXFJ4cSiQNgPFXsf7AyWs3wWOv/2BhB30XYU6sycyYgMeaQ6grXVkjp1YpCCUVUz31f6azTTFjQaiWc8a2fcAahFIip8V8h+bb7BwHn2iTz89RLm145HfwpKnCf1KMKxnYUxjtQ4X1ijQiGRpd6ZmMnyRxO3wR3m4gd3y2Q6jHddifdNiwc05P6g17aXgoitBSZSjNmAq2P2hqJtVnRKMTFLdulIXh3qXbrqLRVnzT6RNlPx4R9FUwlSfLr+cOOFYsQLGGk9Z/IZr1qN/j41qw92TYoS7nI+XHLSYaHzNgVozje87H8hqcz8J5XbjvofGpZU9B3LlP3FFKlVDShKa/FHWh7p9T5VRclty1CTzH/qvOlnG+VQ4AU/UEx71ASmm4IrO5NskXGduB0E1NHKlXi8NY6AcSbuaProFpc+vkZWW6F0Lp/Bv53XEFBO3pjGPxwSbidJcsko9UXEPdPaDOTyTXTQwAX75lxeh+g6fVZqhURZRJk/Pti6dlhOjC8ZtyKx5qOa/yMhef+","layer_level":0},{"id":"8c3bbf45-7ed9-4c9b-a56e-d0c3f40e2221","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Economic System","description":"economic-system","prompt":"Develop detailed content for this section focused on the RELOAD application's economic model. Explain the septims currency system, purchase mechanics for premium features, and the receiver system for item selling. Detail how transactions are implemented in Bot_new.py command handlers, persisted through database.py methods, and balanced using constants like DRINK_PRICES and DAILY_BONUS_AMOUNT. Include examples of economic flows such as buying a premium feature or selling an energy drink. Explain relationships with the VIP system (enhanced earnings) and community features (shared rewards). Address common issues like currency inflation or transaction race conditions and document the codebase's approaches to preventing them through atomic operations.","parent_id":"","order":8,"progress_status":"completed","dependent_files":"Bot_new.py,database.py,constants.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:48:49.91731+03:00","gmt_modified":"2025-09-16T15:57:55.0833864+03:00","raw_data":"WikiEncrypted:sC12HxiFsRJRpyEao5XuDk1jY4vTy7M2Op3atmQackG9aPaFoCfcrZHwxWgIB+0bvr8biPOL6qfGy+vYQ6Y84/AfKzeNYHqVxWxsMFnWnAoQb0zWP8n6zItElLXzeZaPz58v5U6pcPuOJ5QRRFg4kAdQJKzCXZ+jc45u1qi+YFcTGWajGkcEbATHDxiz1z6KY9fwMXJ2BaFQOHiFJIdvc7VzFwCdVTssMo/HQJPx5aDRLOeGjEiBMeJ5Tx6JMFrF/pnVp54kCtsXDNvJl9GkZmXXpg/jqCr8HzTlHb/N/Vi/cYlBA1m7Jm4+3rvrS6eurRcWVv6aUaZHv478DMryoNy3Pd4IkAftOvMiIfAJ2rAcJHEbvbZyDdR9hnIbwntm2HWORj7c6tDNs1CXtiEFQQOgM090NIbaNXGoKyMf8KfYbW8pMS07gPCgvBV1lPI227PM1zpMqEYKH1bMNKwfQqffmP2eaKviTU99eV2KCsjK+QL8xtgwWEC7cYLGQ8M293kdWnnopHM3sjq/wCALEwV058uGpKD7U1YN6BTZJn69evm2ZkHyLjKDaU1Z+lZLxeqOr+GXvrvBK1i/EsbDP44k648FhJ4+pkpg77/KJsTHA7rU7a53u7+v0Sk9LJcdL8JCZ79bKKFFjfe7kuChxXKth2uzxfuY2MRC+l2VdiVER8Ydl32j607uDHwRV65OUViumJo3zySekzQ4S1W29voF8ry9eufZ8439O9vnUbEXECQBxEnNpWiUOH2TS+O0NZGdVxu2yodUMgaP2qbhmNRdSomlX+3LqjR+gycsVqNMj03Qh/n4/5wR2Vxo7X55KjQ77tguHsjGNZLFZgXSd2aRB8lADubdY6dmrLt60dMtzs7MOJpWQr5BH5fUtQGFX9epRLLTn0pfsb1DjEJ73mPdwwanoOI/xc42i8Xp3wEF33VeWiE7t0KLtrBxzAIAPz9PCvoMs+PE4E0tMcoWnRs5PcDDGsafWPuRq/dd84Y4lhdub7FML3goDLoTymMSMiIL+meKqNShH3YcEQxD5HEj2PMWLWlWiLjFCYVhAlYqoMQiC8mSHvsqlv7FKDUftjos4o8SJ24wB+MvpFZK1pH5WOf1cnDSsUibsY24djO8+Xa6kLd6xyEPf5sy2tX58GpnG0Y0vcQBK3Ml5aE4TIy7LqBJM1ehiqgpIztSyLTgPb76/Ll6djMSMtkBectCSZppqnxzimoYh26jqY5sT1Sg5MHJm/FU0Ki11ouaIilKqZhXmlscYf2yT23zUfStKqfpYfI3yurVJ/gAOGTuigJpelfvFcjNvPnxHQC3/xYNpgGecTng3Q6s5+8UQO87u8HBsQHl5ErY6/l/Z59yBz0OXYZ9PGorRs8f66Tumtk/NZz2ZSDL8wIFH1r2hSa5e5SGjatN9kquM64c/+FBMA==","layer_level":0},{"id":"f87ff516-9343-41a7-8fb7-a226fa04d02e","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Community Features","description":"community-features","prompt":"Develop detailed content for this section focused on community-oriented functionality. Explain the implementation of community plantations, collaborative projects, and leaderboards as seen in Bot_new.py command handlers and database.py data models. Detail how user contributions are aggregated, progress is tracked, and rewards are distributed across multiple players. Include examples from the codebase showing shared state management and synchronization patterns. Explain relationships with the core collection system and economic model. Address common issues such as inconsistent state updates in collaborative features and provide solutions based on transactional integrity and atomic updates.","parent_id":"","order":9,"progress_status":"completed","dependent_files":"Bot_new.py,database.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:48:50.0583464+03:00","gmt_modified":"2025-09-16T15:57:52.3691066+03:00","raw_data":"WikiEncrypted:vT23I9UGPjRzbyJGAxGwD+yN6JsU8oZL1jWPB+O8bosp2UOkyxrncLZ2jOsG2dBTPiiy7QkrEnDDzkSLh3pjL8b64v5tYuL5krrMtKYJ3CVLZHve2mLFjYgk4e9tE5YIBUMdwuGQj1Qu59UKivPcp8EDRBN4ra2LKQezd/dKXMxYhWsXeB4MGSkXP4oKenSeeyD8m8OGjinlZ6VrOd60fksrA8NnJK807KZLw9BzPdGkIaUH3y05LBGexv7FAZi3ubdw4aQZtOiqNgIOHqOOPIDBYkBPt91B2OAdpCzqfwIPjZOtuDEg6s199mhZrTfoHcWT3ro80+CHDiLTJqGWn7HkroeVOiiBNE3RWE2MZad+rSUN+yFMYer4aTyIwr8w1X4i2uSqztyGi2VhpisnTrci5Tgd9buBAbneR2R2LrdtNyrRSK1Hxk1IuWre2boepi28PUq6S2MNxMnrpxlzy1cbQrVRZFvyhn+91xiyUanDdmsGqGkNRaNNxXHn/0pDJGaMu2CpoNlSl7t4608fdIwmw+mdcMxR1REOEclpCsoa9nbzwT+oucIHpdQe3DVpkd6tA6cMwblfCanRZ7WCTq5oOs8wPxq2FFJHshk2aPdjb9FVmPqzmEQavgWdN+PBR1AOVSMTXyr33R7uTbw5r3LzT4iM13ZiOVhNqKNMePYr14lsqXz7J9s7VbfCRBsB3I4p+U4LTffvC+PlUfKhiYebxJFm5Kk2d3xOk33N5RjvouhHXNxFOZS6/dtJA8ppTWoisODweeSY1syMDJ8YulwlWzwwhZ+zuvAlfmQrmudu5OuynNTv4eou8KtKYX5F1/kKKfkeQxRu3CxZ3qFPuErjyU6d62DtZm1FzK6v258w1DN9dWSdMgGFx2mGcs7cZNG0LO0k3QxiVwQn7fqCIf/BtfsFxVkWfLTVsNLrpl5CbzP9L8LKlYxWr7MzaSC3eeVtSCRUYbDDUy+vkKMojCGXqZzVQn+G8mHsFvPNZCzbzZAjLGN86/EB/PnO6H4J29URm8+Jx5ZuiVAWLDkqK+iKYlIsBJ/rGlj3icBrf3W/9vYaQ+o+0x5TTb6FcP4qwr0943lyyAYIAA3zNjHDVMsT3+ypxVN7lPqy960RPMi8Gl6vs3wV4bRyQbhcTQ6Qpmp4gE2/S2WRrQMZ/d7SHFuwwUJKnTGlQlZyyrYQMapUZHWeY7Hue/yQs8lBvJMMMwvX2i0ZFfNHWYbQvcixwfVjIjlwiQi9FBx2LRI0kDIiWcTTi2uKtfI1AyeWXvw9KBGdq75DvDko/Jdv4joIXmSSJPsFC1L1/n8MEZOScQySdk3XBtx2uJVyWraBJrZoJzbntmfamMPA4ukjOATZaQ==","layer_level":0},{"id":"804589c2-9519-4f4a-9327-7d761b038df1","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Mini-games","description":"mini-games","prompt":"Develop detailed content for this section focused on the embedded mini-games. Explain the casino gambling mechanics with win/loss probabilities, plantation farming system with growth cycles, and daily bonus system with streak tracking. Detail how these games are implemented as command handlers in Bot_new.py and how game states are persisted in the database through Player and related models. Include examples of random number generation for casino outcomes and time-based calculations for plantation growth. Explain relationships with the economic system (winnings/losses) and VIP benefits (enhanced bonuses). Address common issues like predictable gambling outcomes and provide solutions based on proper randomization techniques.","parent_id":"","order":10,"progress_status":"completed","dependent_files":"Bot_new.py,database.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:48:50.1427161+03:00","gmt_modified":"2025-09-16T15:59:15.2889498+03:00","raw_data":"WikiEncrypted:AJoVZNZtfw3qD5qC2stUDu9CC4QwBA3wD9nK3+2D1IBwKYxFgdzd9ORB3dut3jHY7VJhdgt+WXpiSDhXlFhd4TgdxwHUy5U+dtIovuY5dFOd35xxy349pdxtgLRz87Hk5owDnLAEPLWgIguImnE2ILrHcZCbf4YsJ0H+xjzbqeFP6mu3MHYuKS5+QmpxT2G/nryihIsOWdVdg5o/ze4cTLljao1gu3LUfc6TxqY3DAE3nRmOMDpqaGn0dAPZUu8Hq8SHZS9esmgyZ1FfSxOL6Edrcu7qGDc1DMFTbnvGveyu4L3p20cm/t8XiNhrP8ctKW/4fRj8BHR0NIYX2f6BYRCm0WvX8mzsVWytkrH1sJftKUjYsV74QdM2wOPjkwDLsBx7XPOcAfQ09jH7CVpT8gH/JzoS457cc8RHNu2xkAtzd3111kVdGYRsvEt6xZ+WyOJm9fXP7NDLB1+wspbTKCTHbBBymR8att9v9kaXfkjC0DukhvveqUCyqkNmXonESXRXPVCh3b/9XULIRGhYfi4guzlH+H2BKSGy0uLvqCzZENiwK+FXV7lBc0JCUkTHDGVdCVC7LVRMkGhU/XEs6gZ3ittupLQorrpD/lIU3dIwsUAQPQt7WplWHnW5uQhsxZeG2iiOuwO102I2S/kDSKJ3Xbh1esHx6jV1WMICmOZrJG1sGMs2E3OG9ZG2jb1899bH41MByGajJcTRjjM6kTxUkkZdimnyLDcSyIjTs9/72yBc25Elm9AApiROff8gF0gqrXbEwC8n6K4e35XUoG+jLC/9hJJnydBVOgZ5tjeO+Ib5vdCdCrlL3x7P882TtKAhTF1+bsV3wintUHkBr9K2Q9w5Csxl3gWLDW3fQMY3EVhHZm1hkjfw4W8rRqMYCRtJ/u35uCaZaf0CEhX3z52XuzDRV6L6ZbeSHsjUQZluAMG6nQn8taobrvH+f25m8PPg5L6SVOhXuYT2Og5EBjeUqaBEw+gkDfQVyS1SSNc5DXA2g4lsOeTGec3dpyyP2x/hhMq99QDChhyozSArJhGTYTl9pdbdZCg1qJJchHdM0pjNAPRKy7QnpnNLI+ut2LWOYX0tzJAO7aZeVIMEaA83d7BFKL8hLjLgV3vS2YOFF/2qX1feP/j/yWdkAiQ4AkL/y7WOlyjKsfJcvPWyFAngJ810L8s6Hmg1Z7t+K/L0onzojDymyxAyKdEuVojnXAhlWrwpQkLPzcdXhgdHIJ1z/yd0dNjRe2P3MTlOnblL3uRHfunfeyTXq8wMwyFlJXrjL5t/hsHvlwUl3FpG3VXg8sqP+67Ie6k5KLjbh9tdAno68m9WAwydzjoegd7g","layer_level":0},{"id":"2306ebb9-2810-455c-87cf-cb61e17185da","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Configuration Guide","description":"configuration-guide","prompt":"Create comprehensive content for this section focused on the RELOAD application's configuration system. Detail all parameters defined in constants.py including game balance settings (COOLDOWN_DURATION, RARITY_DROP_CHANCES), economic parameters (DRINK_PRICES, DAILY_BONUS_AMOUNT), administrative settings (ADMIN_IDS, MODERATOR_IDS), and VIP benefits (VIP_COOLDOWN_MULTIPLIER, AUTO_SEARCH_INTERVAL). Explain the purpose of each constant, its impact on gameplay, and recommended tuning practices. Provide examples of how these values are imported and used across Bot_new.py, admin.py, and database.py. Include guidance on safely modifying constants without breaking game balance or causing runtime errors. Address common configuration issues like invalid numeric ranges or conflicting settings.","parent_id":"","order":11,"progress_status":"completed","dependent_files":"constants.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:48:50.221818+03:00","gmt_modified":"2025-09-16T15:59:06.5286141+03:00","raw_data":"WikiEncrypted:aC5ZtUyEKPSxjzg//aVllG3KeKoHrt3VUYbwJdfZuc0oxoKZ34OseePg+VVHDrdEhdI9NXcR0MdzCBvFt4fAMyjMMEPAXCMWeO/MlHjEexgXqOebhERekiestO4fyZ5SW4lIyeJfqkvYnVEc14v8LowIW/fcqpQqLUd6AgsaPob7p2J03sWH/FnfO3pPysVDOsNjgORr5qHqTZwIvMg6F6yaJseYOc/Ih0KF2FL/D0As3V88OlM7ek6qT+/RWW4GxUrqerlWyDDVR7YkD9YxazolXBL4i3gsSTvzyQDq8PKUE2mRrY3bbDazxllRsW50VPHs+fMJ96KRfgw+kL/3sTRDc0Ij/6Na+6hmOV07WJRziiR/eZ+bY7L5ggP5ANbNOFPf5g7rutIgWOj6+tmZlDn6nM1yGYfmTHxG/pBWK80aZxnuLb51gLVkeDhJFQGdm2aTWvEUchR4wQ3oShQjpXGNTaCJTC0lu9MnJxtzjlLXvYenJzwE301kQgfPCbZl1sFJVDJ8HZREBUfT0LNXiu8WYaLsqcHlG+cB1Ew1moi0IVte87EvoSjlbO64D9bmx6bewcAHQXb5YGQmNPDvqrwRP7H73TbHaHjhv6iSGvxAA68UwypWV6N8vQ0M18V8uuTlRY15pEFTbru8I1B6BG8uBuTSgkMlUCUl/a1K40jVPaz7gFMGsRWN2/LAXmHlsuXGXJzshzKpiIjoDjCGaxbHA6K+NTPf449v6kmSc/nRbxd/9Iq/LawZ13o55Z5naYVNDRbjBYpTNSeStoZnzDMHa1puWfkLkkj5jrfEkD/uk8e+gGep8/DVnPKUiZDUnBxRkDXwfKxEyVqdurorb4conHbAAJW2NpnY8wTaJYFTFDcj/AqyxeZCH0q05sgKa5z19FMFyxRj2mATfDOBbehKbRpQp+kE1uBeIeJ8RwHBy3V4bH1WeUn8XWnsS7TyF3rO2nnlXcUZ/5wbKBVJWZRk19LCEYzR1lG9dxsD181EGD/QCGiwmn6WZlpSnETp3BoEGMTpjqVhaX+90rDHwLWJcf08clHr9DSe3BgkGahKlgb/cl+dRV1qKgGtYPn94UeqfxLx8zUbnFw2aMa7msmzZDe6pUeNXGh9EN0tjAdtand0IC38y8vsgaQaF06LEWyj4X0/OkmS+Dr0bpzHikjs+iKLAlF41Te30UR2Lkn/3mLj4qIoRq7a9siJLikqFt8T6YaglnNSzx6aIeU1xOcdROYq1yROHIPilIqFglcQeDidAZR5K6+kYXWwykLcl55Y2N1AAr7oMVrMg2emd8mYbE04laHPy6KVG0z1RP2TkrskThfC2bd5mj3JU+19N5uyVBBGHxXxxGDHF6X+vMLvLqbzFWa3kR/bFA1G6nmcN9Afd4gCRnnSHTMkmi1bOAowjRHZ+sVex/FZkzp/jtqc4kY2138uPJxXQ8W2L9R7Jngel2OkTWm3/ASMChTmZ/BGTf66F8uzQlY7eaobuoF5oR/xxGNyY2mWFwLnzWI=","layer_level":0},{"id":"ac5fd6d7-58c0-4cf7-90ba-ef1f46bc6bfb","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Development Guide","description":"development-guide","prompt":"Create comprehensive content for this section focused on extending and modifying the RELOAD application. Provide detailed instructions for adding new command handlers, modifying existing functionality, and implementing new features while maintaining code quality. Explain the extension mechanisms available through the modular design, such as registering new handlers in Bot_new.py or adding methods to repository classes in database.py. Include best practices for working with asynchronous code, database transactions, and configuration management. Provide concrete examples from the codebase showing how to add a new admin command in admin.py or implement a new mini-game feature. Address testing procedures, debugging strategies, and version control practices specific to this codebase.","parent_id":"","order":12,"progress_status":"completed","dependent_files":"Bot_new.py,database.py,admin.py,admin2.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:48:50.4375059+03:00","gmt_modified":"2025-09-16T16:00:34.7520307+03:00","raw_data":"WikiEncrypted:F3QgleoEfoy16cQggYe9C/ucQxiwh0okVA48AmODs5Szbt24MRpdYo2LFNA+b14p/t+/eH6Nvm1ImUHqBDK8WF89rJqPN2AJ5ulRfJzlfqJYhbT2MWuBIS/IllKoVHjlP/SUYHc7/AnuTf5uZcfd20iWlKhyoZNWJTxXtZYXuFCY4PnK0tHk1pBx8VUbsQogmCs1ATgd9O8nl88c1CWV7m7I8jDXeJdSl01Y8HmCX884kPH76PaScgcPergqU2IQrShW1iZSR6kZ+zyQig8hb1j67Hthjl+Kjvz+iE5wfvlYtdpRr9rK8wQs+qldJb/hM27xUiGBIvZXB+1TXsDwhtblgwdWBXbQZM4bcINO08NKlaZOylhONz4482B4dVNk/1CQBJGbuIbO3QhJ5KDhuvhOZmikDrQEoHfN68tx3r07vvNEXEkQzTj6qOgNMWKzrS+uyIg8zWNZ2TZTu1xAshRZy4ASZgbFuUwHcvSOFpILa25CxrBzJpMRIB/bKpP6llnVUC1p+kolGS+LVyowUKyNr41hkKJrXRG6QE2+jAm0FFVIL+q1ZCdH1pHXHgE8ty/t8PNuC0Dp5+OBYFvqIiVufBzuiUVA0XoiS+SYcJsKFqkMBo72LsSRc04fMBuow6TwQdnFU86tM2I7FBzfn7NSei5a92uQ3MMaaV2qZSe6w2hr1Q7U+LSngfoJtoWEKzoTffDPVVD/TBBfPtK9XupC45D1pYbuDFslOJabJlUIayrZWDWLoLmU0sbYpyxBsp6SloaD0D2ySxJsPmB3iiA5p4pJbV6nb1DgxMuLdaFSieDiWntYyWD2hvAfTKZ9QiUwqMZYtGJZvuX1jCqyDm0kEJe77hnqWtjZN9FIGRnOWCXXbohmbka3NLAlZOIE7xpY7x2GgCFElKaS76nOW1Gm3mpAo43HRbrmovb3ITH0aEeYaOSgEbkkvyXkqJPLB5AyVbvYNh/BDKOjHnNy0lgS7ECLFpD8nOAaEoutKPnSlEclZMnVkz/IhSOL4RD/yT+IjYaIxK0YqCAIT2tVh0vS/PCuNeyDc6f0t+SfKu2o6Y8uigCoPr4aKtpVkra0fwfJkXNG31h83p4Z5DPLL/FB2EgNvVpTC6f4Sq2W3V5Vi+RHym+q1m6kKfzwbQIeTF/3ao/kRDbFnyVGEJpyZlqcjANYDoC4M6SAh6Fq6309C1fHIkPFzkXXIW8oMwN+GoZf1vi0SykHTgW4ZTCF5MjXnK8f/QzbSsnU5gBua0pbIY3yTOgVPwyjnER/+UQoDONY951sHyMb6/983pu+O9QWmNzwwpLWHybSPuXIQPtjj4ZymBfirK92mPm0JjB3kzRk8tTVem3GWzhyITtSBOhKLWJEn6JDh51plmldEgMWbDi7m8ca2OrAZSXGwfS5qY+T2E70WOSoNxFpgKZFI9sHa574HuUmDRSb568fexO1tzs3UnW4knc3IdE9pr5hSSc6kq0zE7IX8KQRW6VNXJgN5iFVpgjukIYz5yClsWpQAVAFu4rtfoWp99kbETmCuphmdO90VwKzyHhX55dfDPWjj/k4/XjvDVPeY10AIREIJrOzFFc+0YLJ8j2gNm8W","layer_level":0},{"id":"61816edc-29a0-4e5c-987b-5315b8cb8c5f","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","name":"Maintenance and Operations","description":"maintenance-operations","prompt":"Create comprehensive content for this section focused on the operational aspects of maintaining the RELOAD bot. Detail database backup procedures using SQLite export methods, system monitoring approaches for tracking bot uptime and user activity, and update procedures for deploying new versions. Explain the use of maintenance scripts like export_user_ids.py for data extraction and migrate_data.py for schema migrations. Include guidance on performance monitoring, error logging, and disaster recovery planning. Provide examples of routine maintenance tasks and automated scripts that could be built upon the existing codebase. Address common operational issues like database corruption or migration failures and their resolution strategies.","parent_id":"","order":13,"progress_status":"completed","dependent_files":"database.py,export_user_ids.py,migrate_data.py","keywords":"","workspace_path":"","gmt_create":"2025-09-16T15:48:50.6387885+03:00","gmt_modified":"2025-09-16T16:00:35.3770139+03:00","raw_data":"WikiEncrypted:AymRokkaRBrPd1uk5umiX/dhQHTPPm6nf5mmDPb1IMOOv0hFcvNcDqTL2TGoqudRrR5jb0tfUSErk+URxezpCah8PxXS/aQ1NSqe6uRPQWxN3r3xTurAac3G1ecaQ8Nx7QPMVIFdfuazQarluOmYrbuqX9U+lbnsvuW3kl/wrGkLYBfqt/YsHaFmXyMPuKHzWHXxEmLL4Yef69hTzFzMYY7uvw+YSfoVfKLf2nHf3HSV7yPFnOB1O8DEQ1qfHpEBvA42RJUKqGqtccCh0kz8DBw6725At0UNFvTPtEYxxB04ZLm6ikmTxTp6TEZPwQb+mGwVbZTMpePufN9MEbwZVFa9TmFV31U7Lctq1/kT4OiZaPiqjz7j/VMNomuKAXiVoUZ0KXX6S22TJbUdSk7kSIKNCwUjGTvd/eNOuzX+SKDesaheqRnRhBZnc459AwwW89qYukZRYLRZZKqEQd/secNPJxN6IDpyV6p+F8e5i4L8qZAFi/V9I7tfEzAYARTrhGXgypVr8wBIo3UUycyAaFhdlHr4+V0n7lDoex8035mAA8LnufqixnOMpZHiVbxDYmAXImDz7EXXyO338/SpAo1rhr0BbRClIjGnJ+JnyTs4YktO0+8ix2ryoDa3T4GTlA0yJAzMgwNbE7ZOA+g6+8BG6quJuuIDAN/ND/zqWq9E00ekflDHFN22qo/KdbJ7oTQ659XteKuAiXALaJpypsDWAg082dzvEDsu3AninzfLTVfXEtYBpq3vzKx3g/dMI0dxST4EUA0kSQjR2194feBxxZOzmh6wDQy0lbwxJrtdrbNRUXDq3V4+NdJZkBfIJdlN8OlrV8/XMOkBXHzJBEjJY1iQp3aW2hc8U697UIYkHyXRfhLqw58o6C13n//7/qBq9u/15yp7elsmkrSOTuNMaarpe/BWE6fB7uRPjjM0RlOSMlahffeGUz+wghJi1THeBMmC2F5biqf+Fr075fP7i++83JUkuDe2BIqgkSLpt4FhS7TCfaJSJ3V9hRWAyS0TY8PdAJP1Ciqmfk0gmLR5VkvhiNZEGFJAvxtloGP2pS32Wn42jA6fHswQ9/rlJBsiO54BAlNJRe11TFiFyheWDcDL+X5Sk6axmkDCfKLd/WQtL6crfhUS658S6bYM9jYNlck5/7BkXLSJ9g2jnmOQJox8Rj4vmrS8fgQpjR/vjtcVpYaux/nEc2poslB13OigXT8SLrWb83OW3gOL1i9LcQfc6eObZoadvt0itRByH0uEcHSR+UfSE4BOgKvHRwSgU2yey113v3pEMPjusTzNJPeQep5obqCANP737XYf6xbXxbXYxrDIIdmQhiZHkei1LdVWu9m5zZ7XXU/OAmMFQlpaO6RSs+3wv/ZBXAnTsX/NJNbYgnCZ6kK5d6J5kgxRpvNc4gNzs75ez8sETb1YR40zv9uOIvuO5+pmVqPc+KNvqh5nlxURlRmB53lHrzBpKW8YDrXsW0UVCwl97w==","layer_level":0}],"wiki_items":[{"catalog_id":"60a3138c-7364-4b12-b8fc-272ba43ede8c","content":"","title":"Technology Stack \u0026 Dependencies","description":"technology-stack","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"3d0dc2cf-38c3-4f61-a415-c1fa6c462113","gmt_create":"2025-09-16T15:51:33.2452787+03:00","gmt_modified":"2025-09-16T15:51:33.3231432+03:00"},{"catalog_id":"ef603f06-6856-4aa2-8aec-2d99a09c6021","content":"","title":"Project Overview","description":"project-overview","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"4d8fe7ff-9f09-429f-8b9e-38920fcd9d08","gmt_create":"2025-09-16T15:51:49.5965288+03:00","gmt_modified":"2025-09-16T15:51:49.6679147+03:00"},{"catalog_id":"947e6d71-387e-4b12-9eab-e3df3b7af188","content":"","title":"Installation and Setup","description":"installation-setup","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"4505a03a-b79e-417b-bc47-c01899d17b73","gmt_create":"2025-09-16T15:52:38.6426054+03:00","gmt_modified":"2025-09-16T15:52:38.7248872+03:00"},{"catalog_id":"9512e3f8-5040-4b50-a1a9-968708efcfd5","content":"","title":"Core System Architecture","description":"core-architecture","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"d49bff69-88af-4082-b630-ea3ccf94a59c","gmt_create":"2025-09-16T15:53:32.6830617+03:00","gmt_modified":"2025-09-16T15:53:32.7521168+03:00"},{"catalog_id":"4a32517d-886c-4c9a-8e67-2b407449108d","content":"","title":"Core Features","description":"core-features","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"64a7edcd-2d92-4cfb-9b71-3628f9c786ab","gmt_create":"2025-09-16T15:54:54.1515666+03:00","gmt_modified":"2025-09-16T15:54:54.2406476+03:00"},{"catalog_id":"5bf00e53-72e9-4056-9bdd-0e382177de87","content":"","title":"Database Schema Design","description":"database-schema","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"d781078a-64ee-4dca-a022-64e69f1ceb22","gmt_create":"2025-09-16T15:54:57.2549299+03:00","gmt_modified":"2025-09-16T15:54:57.3133767+03:00"},{"catalog_id":"db4c32d0-1ce6-4575-a1a5-af3ed86594eb","content":"","title":"VIP System","description":"vip-system","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"f1b7da28-8e57-4a12-8ee3-30fd55c31041","gmt_create":"2025-09-16T15:56:12.6540247+03:00","gmt_modified":"2025-09-16T15:56:12.725051+03:00"},{"catalog_id":"6f9732e8-8190-4a70-a80f-b193a35c399e","content":"","title":"Administrative System","description":"admin-system","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"99b10f06-432b-4d8c-888f-9aa0dfbfa3b7","gmt_create":"2025-09-16T15:56:43.2427497+03:00","gmt_modified":"2025-09-16T15:56:43.34391+03:00"},{"catalog_id":"f87ff516-9343-41a7-8fb7-a226fa04d02e","content":"","title":"Community Features","description":"community-features","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"c3ea6c6a-018c-4b97-936b-5adf42e06ae1","gmt_create":"2025-09-16T15:57:52.2781993+03:00","gmt_modified":"2025-09-16T15:57:52.3706047+03:00"},{"catalog_id":"8c3bbf45-7ed9-4c9b-a56e-d0c3f40e2221","content":"","title":"Economic System","description":"economic-system","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"455d654e-d359-412e-bb52-6f5b50393d61","gmt_create":"2025-09-16T15:57:55.0005008+03:00","gmt_modified":"2025-09-16T15:57:55.0848822+03:00"},{"catalog_id":"2306ebb9-2810-455c-87cf-cb61e17185da","content":"","title":"Configuration Guide","description":"configuration-guide","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"985a05ed-4734-4bee-8398-a45278c9f314","gmt_create":"2025-09-16T15:59:06.4463126+03:00","gmt_modified":"2025-09-16T15:59:06.5303525+03:00"},{"catalog_id":"804589c2-9519-4f4a-9327-7d761b038df1","content":"","title":"Mini-games","description":"mini-games","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"d8b204bb-8e3d-4629-99b8-eb4579c3dda5","gmt_create":"2025-09-16T15:59:15.0470337+03:00","gmt_modified":"2025-09-16T15:59:15.3707523+03:00"},{"catalog_id":"ac5fd6d7-58c0-4cf7-90ba-ef1f46bc6bfb","content":"","title":"Development Guide","description":"development-guide","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"1005d576-ee65-47cc-b9da-3cd8b5080cab","gmt_create":"2025-09-16T16:00:34.6847106+03:00","gmt_modified":"2025-09-16T16:00:34.7729804+03:00"},{"catalog_id":"61816edc-29a0-4e5c-987b-5315b8cb8c5f","content":"","title":"Maintenance and Operations","description":"maintenance-operations","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"591dcf71-fdb7-481a-ac76-0277f5a0f3e4","gmt_create":"2025-09-16T16:00:35.2714457+03:00","gmt_modified":"2025-09-16T16:00:35.4173979+03:00"},{"catalog_id":"72422714-948f-4ea7-abfe-2c7bc897d35b","content":"","title":"Player Model","description":"player-model","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"edfc62d6-cacf-4fff-a769-922a06d19e23","gmt_create":"2025-09-16T16:13:15.3888477+03:00","gmt_modified":"2025-09-16T16:13:15.4805854+03:00"},{"catalog_id":"9aecb97d-480e-473d-b467-abe7804735bd","content":"","title":"Modular Design","description":"modular-design","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"b6a60fda-abd6-4778-859c-3e87a509a4d5","gmt_create":"2025-09-16T16:13:33.2139174+03:00","gmt_modified":"2025-09-16T16:13:33.3102961+03:00"},{"catalog_id":"8b651293-a7fd-4fb6-a0a7-6ad19de7c018","content":"","title":"Energy Collection System","description":"energy-collection-system","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"d592fc62-3f25-45a5-ad2c-9e61bdc62eba","gmt_create":"2025-09-16T16:14:29.7722307+03:00","gmt_modified":"2025-09-16T16:14:29.8418455+03:00"},{"catalog_id":"1f154fde-5ffc-42f6-bc36-784f9d3e547e","content":"","title":"Subscription Management","description":"vip-subscription-management","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"8989055e-b60b-46a7-8116-2d97a0ccff1d","gmt_create":"2025-09-16T16:14:51.812581+03:00","gmt_modified":"2025-09-16T16:14:51.9191363+03:00"},{"catalog_id":"198e2b78-6a76-4da3-9c7d-0bc511eda09a","content":"","title":"Administrative Permissions and Role-Based Access Control","description":"admin-permissions","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"36778d39-c6cb-45ed-aa2c-3ae4c70bfd9b","gmt_create":"2025-09-16T16:16:07.2021428+03:00","gmt_modified":"2025-09-16T16:16:07.2986205+03:00"},{"catalog_id":"cfd51115-07aa-4d42-8e7b-cb1b06b1a563","content":"","title":"Currency Management","description":"currency-management","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"5b624eb3-704f-4dac-b87e-2c642bf433e7","gmt_create":"2025-09-16T16:16:17.4358891+03:00","gmt_modified":"2025-09-16T16:16:17.507104+03:00"},{"catalog_id":"befaadd4-3a61-4c16-942a-aa59c8025d8c","content":"","title":"Community Plantations","description":"community-plantations","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"8df9d489-adf4-40ea-ba29-96f7c5ea58f4","gmt_create":"2025-09-16T16:17:24.2338794+03:00","gmt_modified":"2025-09-16T16:17:24.3221409+03:00"},{"catalog_id":"92105073-52d8-4d9f-9e65-4045e8a46e4c","content":"","title":"Casino Gambling Mini-game","description":"casino-gambling","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"93c62bec-b8bd-400a-9cf2-0f01bf890300","gmt_create":"2025-09-16T16:17:41.6355865+03:00","gmt_modified":"2025-09-16T16:17:41.7902134+03:00"},{"catalog_id":"55c80647-4a7c-4e66-9975-d029693487c4","content":"","title":"Component Relationships","description":"component-relationships","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"96c10fe4-a630-442a-add7-b499ff7c39dd","gmt_create":"2025-09-16T16:18:44.506197+03:00","gmt_modified":"2025-09-16T16:18:44.5843087+03:00"},{"catalog_id":"be750e84-202d-4d20-9149-e53f552a8478","content":"","title":"EnergyDrink Model","description":"energy-drink-model","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"055e7973-0876-4d86-a4b5-ed49124ea680","gmt_create":"2025-09-16T16:19:07.7434666+03:00","gmt_modified":"2025-09-16T16:19:07.8183302+03:00"},{"catalog_id":"437eaac0-aaf2-4898-98b6-3c1a2dcca81d","content":"","title":"Inventory Management","description":"inventory-management","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"c378f546-b9e8-4b82-96e1-47be588d9bd3","gmt_create":"2025-09-16T16:19:54.7846517+03:00","gmt_modified":"2025-09-16T16:19:54.8524932+03:00"},{"catalog_id":"215faa2b-0c10-45ef-8cac-c42f8066bc79","content":"","title":"Benefits Implementation","description":"vip-benefits-implementation","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"774ceef3-034b-47df-a6c8-c1a589f150fa","gmt_create":"2025-09-16T16:20:26.6064928+03:00","gmt_modified":"2025-09-16T16:20:26.6769931+03:00"},{"catalog_id":"cb6d5789-606d-4d93-a38d-2afdc294d1df","content":"","title":"Content Moderation Workflow","description":"content-moderation","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"ca3bc949-17e7-4ddd-aa05-7dabf9c7f4b3","gmt_create":"2025-09-16T16:21:17.3129048+03:00","gmt_modified":"2025-09-16T16:21:17.4172106+03:00"},{"catalog_id":"d9d5427c-f717-4a1b-b5de-201e2a8853da","content":"","title":"Purchase System","description":"purchase-system","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"904e10ef-9e7e-42e3-9238-f97b863b1092","gmt_create":"2025-09-16T16:21:45.4343255+03:00","gmt_modified":"2025-09-16T16:21:45.5539485+03:00"},{"catalog_id":"c45baa4b-600e-4d0e-b88a-854781fa7be9","content":"","title":"Collaborative Projects","description":"collaborative-projects","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"c42611bd-37a1-48b3-a8ca-3d24cc44a93e","gmt_create":"2025-09-16T16:22:33.5899624+03:00","gmt_modified":"2025-09-16T16:22:33.6757712+03:00"},{"catalog_id":"122423d9-869c-47e5-a9c5-add764544340","content":"","title":"Plantation Farming System","description":"plantation-farming","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"fe0d3127-1685-4eb9-8d04-98b24104a6b5","gmt_create":"2025-09-16T16:23:08.7462846+03:00","gmt_modified":"2025-09-16T16:23:08.8475196+03:00"},{"catalog_id":"c12f2471-3d89-4d2d-9174-b679025d0d68","content":"","title":"Data Flow","description":"data-flow","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"42c44cec-0f84-486d-a4e8-759c4d9d3eb3","gmt_create":"2025-09-16T16:23:44.432348+03:00","gmt_modified":"2025-09-16T16:23:44.5275167+03:00"},{"catalog_id":"c7726466-a472-4b60-ae3e-cdde4f181fc4","content":"","title":"InventoryItem Model","description":"inventory-item-model","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"2f8772c3-1fac-47c2-be83-d7592b3ea385","gmt_create":"2025-09-16T16:24:15.2646968+03:00","gmt_modified":"2025-09-16T16:24:15.3530615+03:00"},{"catalog_id":"2e380784-275e-4bda-b2d4-7002df4e7902","content":"","title":"Search Mechanics and Cooldowns","description":"search-mechanics","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"1debdde1-a8de-4c4b-a7e3-e10ee2a09f45","gmt_create":"2025-09-16T16:24:55.3844711+03:00","gmt_modified":"2025-09-16T16:24:55.4777479+03:00"},{"catalog_id":"61aa157d-d893-429b-bcfa-966bdd4bc1f0","content":"","title":"Auto-Search Mechanics","description":"vip-auto-search-mechanics","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"0c6b3976-8255-463c-b8a4-7cf887a0c49b","gmt_create":"2025-09-16T16:25:30.0241545+03:00","gmt_modified":"2025-09-16T16:25:30.0983498+03:00"},{"catalog_id":"b91ed42b-bf6a-4ed0-9a34-dd7fabf7dd24","content":"","title":"Administrative User Management","description":"user-management","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"8a65be32-2023-4216-bd61-ca65979128e3","gmt_create":"2025-09-16T16:26:02.8505783+03:00","gmt_modified":"2025-09-16T16:26:02.9350752+03:00"},{"catalog_id":"ae09e337-0222-4a4b-82d9-13fab93ac580","content":"","title":"Receiver System (Item Selling)","description":"receiver-system","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"148e981f-eba0-40e4-b459-1dc308be1781","gmt_create":"2025-09-16T16:27:02.0704667+03:00","gmt_modified":"2025-09-16T16:27:02.14474+03:00"},{"catalog_id":"f236bb92-be56-4ad7-a590-0b273fa05746","content":"","title":"Leaderboards and Rankings","description":"leaderboards","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"5efb3b01-d8bb-47a0-8f73-9eafa3fd7ac7","gmt_create":"2025-09-16T16:27:41.244744+03:00","gmt_modified":"2025-09-16T16:27:41.3766757+03:00"},{"catalog_id":"5faea0c4-05e3-474e-bd2a-8f80eed4cd88","content":"","title":"Daily Bonus System","description":"daily-bonus","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"6a7dede2-fbe2-40f7-9940-2accaccc964a","gmt_create":"2025-09-16T16:28:24.3477861+03:00","gmt_modified":"2025-09-16T16:28:24.4241824+03:00"},{"catalog_id":"5654372f-fb4a-4289-9c40-72a856ac14a0","content":"","title":"AdminUser Model","description":"admin-user-model","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"2b74efe3-1957-4d99-9b45-087a0755d2d1","gmt_create":"2025-09-16T16:28:47.3259382+03:00","gmt_modified":"2025-09-16T16:28:47.4076092+03:00"},{"catalog_id":"4d642952-645c-449c-8710-08b4ae7af9b3","content":"","title":"PendingAddition Model","description":"pending-addition-model","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"7448807f-d431-4ef4-abd7-baa1e44b4761","gmt_create":"2025-09-16T16:29:30.3178893+03:00","gmt_modified":"2025-09-16T16:29:30.4377079+03:00"},{"catalog_id":"cd19ac67-d8d0-4f72-9011-bd4af6bc317f","content":"","title":"ShopOffer Model","description":"shop-offer-model","extend":"{}","progress_status":"completed","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","id":"58102d2c-1ae3-435f-8bc9-37e1228ae286","gmt_create":"2025-09-16T16:29:53.4043193+03:00","gmt_modified":"2025-09-16T16:29:53.6380521+03:00"}],"wiki_overview":{"content":"\u003cblog\u003e\n# Comprehensive Project Analysis of EnergoBot\n\n## 1. Project Introduction\n\n### Purpose Statement\nEnergoBot is a Telegram bot designed for energy drink collection and management. The bot enables users to search for energy drinks, manage their inventory, purchase premium features, and participate in a gamified collection experience.\n\n### Core Goals and Objectives\n- Provide an engaging collection game within Telegram\n- Implement a VIP system with enhanced features and benefits\n- Manage user inventories with rarity-based categorization\n- Facilitate administrative control for content moderation\n- Support premium features like Telegram Premium subscriptions\n\n### Target Audience\nThe primary audience includes Telegram users interested in collection games, with secondary audiences comprising administrators who manage the bot's content and operations.\n\n## 2. Technical Architecture\n\n### Component Breakdown\nThe project follows a modular architecture with clear separation of concerns:\n\n```mermaid\nflowchart TD\n    A[Client] --\u003e B[Bot Interface]\n    B --\u003e C[Command Handlers]\n    C --\u003e D[Business Logic]\n    D --\u003e E[Data Access Layer]\n    E --\u003e F[(Database)]\n    C --\u003e G[Configuration]\n    D --\u003e H[Constants]\n```\n\n### Design Patterns\nThe application implements several design patterns:\n- **Singleton Pattern**: Through the use of global variables and module-level constants\n- **Observer Pattern**: Via Telegram's callback query system for user interactions\n- **Repository Pattern**: In the database module for data access abstraction\n- **State Pattern**: For managing user interface states and navigation\n\n### System Relationships\n```mermaid\ngraph TD\n    Bot_new.py --\u003e database.py\n    Bot_new.py --\u003e constants.py\n    Bot_new.py --\u003e admin.py\n    Bot_new.py --\u003e admin2.py\n    Bot_new.py --\u003e fullhelp.py\n    admin.py --\u003e database.py\n    admin2.py --\u003e database.py\n    admin2.py --\u003e constants.py\n    fullhelp.py --\u003e database.py\n    fullhelp.py --\u003e constants.py\n    add_energy_drink_new.py --\u003e database.py\n    add_energy_drink_new.py --\u003e constants.py\n```\n\n### Data Flow Diagram\n```mermaid\nflowchart TD\n    User[User Interaction] --\u003e Bot[Bot_new.py]\n    Bot --\u003e DB[database.py]\n    DB --\u003e SQLite[(SQLite Database)]\n    SQLite --\u003e DB\n    DB --\u003e Bot\n    Bot --\u003e User\n    Admin[Admin Commands] --\u003e AdminModules[admin.py/admin2.py]\n    AdminModules --\u003e DB\n```\n\n## 3. Key Implementation\n\n### Main Entry Points\n- **Bot_new.py**: Primary entry point for the Telegram bot application\n- **add_energy_drink_new.py**: Script for adding new energy drinks to the database\n\n### Core Modules\n- **Bot_new.py**: Main bot functionality and command handlers\n- **database.py**: Data access layer and ORM models\n- **constants.py**: Configuration and game constants\n- **admin.py** and **admin2.py**: Administrative command handlers\n\n### Configuration Approach\n- **constants.py**: Centralized configuration for game parameters\n- Environment-specific settings are hardcoded in constants\n- Configuration includes cooldown periods, rarity weights, pricing, and administrative settings\n\n### External Dependencies\n- **python-telegram-bot==20.7**: Telegram bot framework\n- **python-dotenv==1.0.1**: Environment variable management\n- **SQLAlchemy\u003e=2.0,\u003c2.1**: Database ORM\n\n### Integration Points\n- **Telegram API**: Primary user interface and messaging system\n- **SQLite Database**: Persistent data storage\n- **File System**: Storage for energy drink images\n\n### Component Relationship Diagram\n```mermaid\ngraph LR\n    Bot_new.py[Bot_new.py] --\u003e database.py[database.py]\n    Bot_new.py --\u003e constants.py[constants.py]\n    Bot_new.py --\u003e admin.py[admin.py]\n    Bot_new.py --\u003e admin2.py[admin2.py]\n    Bot_new.py --\u003e fullhelp.py[fullhelp.py]\n    admin.py[admin.py] --\u003e database.py[database.py]\n    admin2.py[admin2.py] --\u003e database.py[database.py]\n    admin2.py[admin2.py] --\u003e constants.py[constants.py]\n    fullhelp.py[fullhelp.py] --\u003e database.py[database.py]\n    fullhelp.py[fullhelp.py] --\u003e constants.py[constants.py]\n    add_energy_drink_new.py[add_energy_drink_new.py] --\u003e database.py[database.py]\n    add_energy_drink_new.py[add_energy_drink_new.py] --\u003e constants.py[constants.py]\n```\n\n## 4. Key Features\n\n### Functionality Overview\nThe bot provides several key features:\n- Energy drink collection through periodic searches\n- Inventory management with rarity-based sorting\n- VIP subscription system with enhanced benefits\n- Administrative controls for content moderation\n- Premium feature purchases (Telegram Premium)\n- Daily bonuses and special events\n\n### Implementation Highlights\n- **Search System**: Implements cooldown periods with VIP multipliers\n- **Inventory Management**: Paginated display with rarity-based sorting\n- **VIP System**: Time-limited premium features with purchase options\n- **Administrative Controls**: Multi-level permission system for content management\n\n### Feature Architecture Diagram\n```mermaid\nstateDiagram-v2\n    [*] --\u003e Idle\n    Idle --\u003e Searching: /find command\n    Searching --\u003e Found: Success\n    Searching --\u003e Cooldown: On failure\n    Found --\u003e Inventory: Add item\n    Idle --\u003e ClaimingBonus: /daily_bonus\n    ClaimingBonus --\u003e BonusReceived: Success\n    ClaimingBonus --\u003e BonusCooldown: On failure\n    Idle --\u003e AdminAction: Admin command\n    AdminAction --\u003e Processing: Validate permissions\n    Processing --\u003e Success: Action completed\n    Processing --\u003e Denied: Insufficient permissions\n    Success --\u003e Idle: Return to menu\n    Denied --\u003e Idle: Return to menu\n    BonusReceived --\u003e Idle: Return to menu\n    Inventory --\u003e Idle: Return to menu\n```\n\nSources:\n- [Bot_new.py](d:\\EnergoBot\\RELOAD\\Bot_new.py)\n- [database.py](d:\\EnergoBot\\RELOAD\\database.py)\n- [constants.py](d:\\EnergoBot\\RELOAD\\constants.py)\n- [admin.py](d:\\EnergoBot\\RELOAD\\admin.py)\n- [admin2.py](d:\\EnergoBot\\RELOAD\\admin2.py)\n- [fullhelp.py](d:\\EnergoBot\\RELOAD\\fullhelp.py)\n- [add_energy_drink_new.py](d:\\EnergoBot\\RELOAD\\add_energy_drink_new.py)\n- [requirements.txt](d:\\EnergoBot\\RELOAD\\requirements.txt)\n\u003c/blog\u003e","gmt_create":"2025-09-16T15:46:47.8037018+03:00","gmt_modified":"2025-09-16T15:46:47.8037018+03:00","id":"958620c0-bd03-43dc-b8f8-9745763c8422","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":""},"wiki_readme":{"content":"No readme file","gmt_create":"2025-09-16T15:45:55.0018254+03:00","gmt_modified":"2025-09-16T15:45:55.0018254+03:00","id":"01fe7a3d-5339-4e78-99a3-f8b44482f2bf","repo_id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":""},"wiki_repo":{"id":"a043ed81-ae43-424e-afdc-107d5e66bba4","workspace_path":"","name":"RELOAD","progress_status":"completed","wiki_present_status":"COMPLETED","optimized_catalog":"\".\\n├── Bot_new.py\\n├── add_energy_drink_new.py\\n├── admin.py\\n├── admin2.py\\n├── constants.py\\n├── database.py\\n├── export_user_ids.py\\n├── fullhelp.py\\n├── migrate_data.py\\n└── requirements.txt\\n\"","current_document_structure":"WikiEncrypted:YpgZK6tBtw60FxpmWWASP4CfkAvUly6w24ve6OQ1OPVkd0ZllGu+ylRbWG0kEup63zRAn7UeY3zyi91dCEmKUvwZEunrZEMfV7B8GUGs8qA5aC3piJwG6RKIWBoCouje3uM9BLZj7lQ0YZvSvZNLHqDocw3zHVjFlzj2muzN5gO158UXwwnlPt5apvIc4RY96Q4NG6LjVnQwwyba8REZ/uzxNax/UxJ0ZBtobs2H3HFuR19aDRbJrAMM8vmy4v+esbygj9nx5vFerp/6ftU6BOE3qTeIo5KcWut+XOxQMrB7bXLsrOm/ueSk9Ng67vvoUBNjMhnu2ZE0I+LwMsqZ4IQfdCU7l3yHSOo5cCZ7DVf6qnSDsTPFgxn+4SQIgRmnjV5a5qLtvWMzOgH2hHOhQkWGrfNWVfM0uqHK8qwaUbsMAipfuaNlIfBPZ2LbR7hbKRtRq06xAQEPLFcV8xr/uaNYfr+Mrrww2YOEshVVCepzraAI2dFL23YQU105G07h/JWiD0Hz3LGbFgUuJr/bDSISeI34Vscz1zWsJDuHh+7fRu/fqgptPye3n8Hx05yDrFdGEEWcQkDBK2uuZJ94qKqbM+MZDj2gEAMn3SY4+lsc/MKLr6DcZFIg//LkedY6lE7XcaOjzv8W4m0nMpLiFGge1B2GoSd0BKaJj2yLqLkuzWaC/Yj7qpGfXzJ/XvQyMQpmJ0QIO9jaK8qAALtheRTjwr8J7UwVb5Z6YrLqZ7mOg5lsx9Eelm8V52GFfy+vT0UNj9hpLNr5fLD2HJ7kez4ROCMfGvIjp4Ipaz5p6noYQxG9H1KGAo88UwZPKkNk63MNQPBUuQtTgk+G0m1omkuu2Up5vYpMJ84oMm0B1WUb32StzMKduZTto2tmmSOLIbV3D3dmtrMP0ZQP8/NwaxCYl56ED5Z5zSiFHy2rqLSAPollc/qh12D7kwfIVEvjzvAXSG+1RgIjAMk9M1cJAVfkalGKhXCK+gMQK2LngEPAw8R3Hu5I+YEx4yamJra6VkrkXHmVHveybW1Zuz8ureqHitIaUufqIElhUXKkmogV3AiqpAjB2lYpU64lneS2hrl7HC2TU8T5/ooATLjFxFH0paFT/iE4geWgvTPdLtLnZfN4dcNdWgsJam6pV/agRSPiVUQK/Umtk5z/yn9Wy2tEAFGb8yhmgfBN6NWsqCqM7xNOxFTzxD81yv2ekWGxtFHIvYMuIk9lwRqt7euyg8foXNeheCMteGoQJqhAYfmMvCknRnvp804DL7+9JQOMlGKYC2ct4e5XATqJcJSanSXcIY8opC63RNxAKIGe+qFEg/ULLpmWHA4BXulSYAOvpyLXvpsaBMmMaJvGJmk0ztdGDbrBxveORr2c9kjktKMh2zSxaFQrdbaR2QNLwgTO3M6H3Ic9Kf5lDHWbD0rSFBVRcc9Os18QiQy7kuz+q9lc2zsVbEtwNmp+j/MIMGRFaFKumdUlsmLCyy+oIb1jJVFvxTL1s/GtYG+LNGqmDOTq7O1J37PqYbw1O6OtBPXsWQ/x14/5wurfEgBS/J8EJnHfCZEatpg/3/IJ6uG4KQ9Wj0KAOdZez/S+/QWHcgof2Y29XK6qPCbueWYa2Ov5GJuClPYzgSQB0GNFVVgo9E5H/bcce9q+B2GRKyzEhLMOo44RWgwU/rq+wzV5DnDfNZwuTo8ohOIMyPyDZRxV+N+J+QnwfXnFgVliE6s1k2DsQzl4BxVnrOkKa5L0nimFfjxIPIStpkGlkGfpR2XpD8kuiqzRBHlubGuFfYhRl4T3tb7mo+sy8xYcb7SWecuDTXRns6/NKTPkphR5E70NIadwNwX5ChZ2aieUnwnypWMwkn/cGPKNnu7mOlctTpRf5zpLO8bLvpKo1whQBuZ5mNQb6+iTnOMDsUm7UuBsrFtQm/7nZ0BKShJEE+ohAZ+gdjO0CDFQA0ooN/6bREQVVUt+qCJO2ulRnlxzrUzcxlnrVmQevxqP7JfqclY6nvNfo1Qf6zJFrzmR+sNgWM371+BkNgbVgieu9/B4pKgmVEGiPLviUCE6v3OJZfTJE4i+bHiOV4QfDx+B1wwJ866cLXQ5VQFroKRDxpwXBcpMDW+0Zd1XKAUABhJgE2yRSZqeYWuq6scGve0yynLnia5vg6nPIEfTq6gbNUGiVcO1npFPLi82jTHK0r+rb1TGEFMTYhq6yr3rFViMOB0BA+xTUMwJ63ip9d3NY9321IuJfZuGpq7toToj1j3Ctl17gv2aT9p3iNw8LmmesyBVmATqdq8MEcC+Avi8mOLGI9E5aRBhMwfxN+bVt3VjeRWm7yhi9NHpsGFM15XvunNx4Df/F+daTbEp4EtU3cU+MGNmk73naeYGEVS5/gFt3ClJNGDekaW/Y2dFS7H/MU7605qtBeNH7FNUaPRFIYP9NIWaldNPqtO9dDxcTc5MqzfwENnY3ZMitrqFZyQ/so0LD2uuP4rmLwip0ybbJdhTnrTYFpfBUeGPwIXvHJFw63BPdxK31/3k3/aEgX+9LNl6N7vhkvWx96oGHyAzMO279fSXcRerbJSE/SpFxqJ6VgGlnYL8ZlAZOquyY3NRPrc7BQyrQLJT2ksSlK92LWTGWtijNr/TcqmF34zBVNeY0Ydunn8SL5mRWBzMZu7kyUUOkgULhakj0DQy8W8TFcwxjaGNEwuy7gzQVm3Cy5AHLmCECMSoKvKxlGDvOBuudRFKELiPsOSF+/RGwubbEM4JuE1RXCa4O99I1/61WGBDi3uRAALn9I3dINKD448RYnqzB5iu+Kd8WbTFEut6x7VeqE4tQl6eIkuNNs/HuRKm1X/hhOJJ7u9g6cDDMD5QoZpsslcC9MsoRDTowhauvBHlWhLdGDh1Vwee+MZkjGRc59n/e4CnexjEvRfzB2Pzc5349AuDBSXDiqWehQZIujePPr7gliYWIpX+/Ntg2023UK1yC/+lhkRW0SZU3bJZ5t3GETm4WriQeF+EGZ+gJYulv170u9UBN+wNfCeu+0xU8b3LHAo9UEjmeE2jiQGVYyzlSBe4vHs8A9GIXdosnD48qevneUdfJpqc19uwrZOiXHQUbEtvqIfQzRTk/nw/fhl49PLsblzwGHWJSSs3oshdJs5ZGmR5Czzi4KfEhGOi59UZ3lZ35OSEjnztpG8d4N+DwsvJANw4127i0MzKcnDf2nAsfS43I2nKRpJOtBwH9RQqlS/NR5zJrBsi2TqrogrHgopzn+Vt2zl0YxH22KBcHrGEa7+Cbr20RdVrgOARR8MgLW1XDa02MnWVfdvgfEgpxSqR802jKmJPdRoIbLeZstKUNp0oKOW7P+iITEcOiUj72prL7Dx3d1IKmoDN6uFYbVi37h3shrmKQ99utGd7ihJ8TKtau5ckpLJ1B4T3/DsG++tErawh2s2A56D/FwWaPzhXp9zidJXVAYgBBqGYzxVqSoD0GhQCMHw2ub7xPBWFAEVb7ZBXeyuqFjjedO5vgYIUjqEWQoBzrPdqK050MejZ8keqS2CUPLHlx7SCd8JPiTPerCqkBV06NWr3jPNFro2SwgknhDwNbeENWeKYJTknwNSdSREX8qIxLDIjJKjQIRLUw/itR1p6a/fHMIDO6ZYXKtrOIJTXM85VGDxVBXdBMoprQkwj4VDMpm69BnB5Y/pMw3CJDGM25S5nRsBWwznFh3OJ9uQHR6X+3/FcrMdcwQhQ9hKLxIHN2086JIt8XfhJEAwcWQG7+X9kDDWNLYKy2Q9SKKmOtAV/QhHT1zzylBb21DhMkE4todVKhPUTwkBNxNuOxPt+zGDKdi2H/Che9UINaVkKeXxrmpqsqAdFqwiRva5Or55X37phqO265bveCbCbGh8/n1ypg5ESv5/IY0b0E1JU6dXpX52/sR4A4yeqOzYsjKTZIHFx9yyVFLUd/fFACkLNitUrgBEJ3pS75e4FKd2iAQBVIJLTFrWUl0P+m7bgHekvvfbkfUCwjo5QOYzIAiWc6cDp/q3b43Eyg/8aJTItKC2Pf2JHWBM3Nc2ptlMkgNvCJEJdXLXVj7nAgPpSKwCTliGBY+bnHeLNcdWUQehRbLLyMzXi9DaRlmNZu94TzHL5ybxJG84AK79q1UHnQwSSTd3JNjIYXkKpaxxcExK09wFlTDnJ4KhXitu/0UdZ/EkiLMFK0Z9sanxhb64N33VaE5/UQGMiiLSSHsVPQXqejVfDtb/pgn5YRtHOALhSftPJ1Fasb4RY+hM61vQzVYV9HCIVZp+fg1NHRS3woXIykBZMpeNQR6Q1BY0uQHnOhDkbwtFvTr7cFSUOl6GcINExXFkWtORSYCkoADKq5bBx14Lue354gg0opzXApxhr9bJIQqiAM3JGD3G1IbmXygeFaXNjqPgCrgThh1hzOVJUkB2eiieicTqVwb+9aVhQtaNftY1sei1MvKYqs563to/BLhmmI3a8a8UmohE94WkbPWpRokARc+bLKp0YWDOgdAh/CmQ8HAk6QSOwktL9/kbq2OAGnCS/VIkusw+VBaV/0wjlufWuy1QK867UR2F2ZzwYmTSdxUl5o0Qj6pWf448iDvjnoO8WeddKZEuH/yZPbZh6BHTIJ7prOXD+N79bay2r+/nxcI2OPnLVRW9wB6I0OFJKEQU/6vyGDpFUBI1jwjMi/E3DcGpGOKN8DHL+ay7ZoUGyfFHEL4NyiXNahksmoN8UuEiULddtder0CMKO+MtOym/gYvoedpNaI3fQu+exAMxozY8bY9gZnO8I01LNMFBJmU0YQFoi39ljivHekR24Q97rEKoHrqG+kweFS6pe8ewZbEskiYYEamJSTA+mlj0anA3PdNZdQ8AnSWFp83yz4N6EyEVL9WSeOtDHRh3zSYjZPmMkD+Q5nDd/h2CyzqNwF1XQ/27sILc8dCoLe1iq9ZtFEcqtV2p0tHoJa/MawcdAL2xo8VbrRCbeJS8LuDWcL0RxHhS324qGe+hn1QsSQmi9unX5mnaCbZ4zMzMsvRCIEJ/iVAFsiY8WiotVsPACSm4FxNn7I2YP5+ShKnB6v1hDSwmQjJh+DU4mbcQff/zDI7cL0Rek3tZ13sLksr0y5ymK9f7NykvvgKk2l2GVCaxguV3TajnMMCgajbxwGCpnCncZ63RX/GtWarfPkd5e31ZIUAa9JGN6EBWVOg+mysVh3C0uHn99qelRwLvB4Xx1lD7dxjwqBX+w1PguMp0+7mf1HoQVdTx4Fu/Bz8MY6WYtaReYlMmDNDPXv5u1jMEDzV9t7cGfr1mIl/icFfuD5HLAQN/R9RDX0MLq9PdazoF+bWEgFCg9CuIuQIxdt4u8oZA7Lr49AjHl13mcLHPvQZ7d+Poyy4HTcdGGrpsFtQHSVuzyzcxfMTHbVGbYsE+Jqca6bwXv46am6TXCxfBF1YrebE5m5zzGMoXkeuVapd0kMkV+zS5TQER2IvhKB4mR0G7URrC++r65Rb3J0PCP1TeJXfpsOBDOEoe3gXKOiiMHUOLFiqJRPMC2WKd4/QFIb6sv2nFEhQp0rZAjUvZW1w0Kf0Atayw1SnCOzbGkDcmYMam2sn+jrb9gVzL7+SOx/SWMVNsO0C956QU2Vr2iPoDfsOKq5jljw8p7fDHUjzkzLVVWuD9z6/u7/pGAOYoc11gSa/dK1+Kh+4Xu1JnG6dMJ+Ua6L73a++IZ5dJnkQZ8kfeBnYlBmIDUskFlx3TthsnY4i3Wrz1svdgizUPicUP2df1CEmv8MbgwNJe1hcm5PAaZSHOZ28D9HoSrUFGKyWAN6OcSYlZtQCBXQlVjL2FEDLhYwBuvGg6Du/gV+q6/4IdDxnvKbdfP2x9QCvnz7FUWUWy/b472EPCE4ntpEzFIbaGZGsQm4o8t7wDmOGaDjsYGChBLDraK0GFVVBgNC2xkh0UUYYLdTQus6ZMDgYVrJUZ0d4odXUv+Iud8aW8/RJ9Lx4sGmVCY4Pi1uYkGEPnwvBxjPQ0tDQK2Z29Z1VnKeTFKcQleoFPXDqc0fvAgJICetfAkSY41y3tlsQ/FGSHdmOJD8DEyik54pJFYynZ6H950S4lxgU0EWIxlw5cktEbW6AlQd1nvLgCxddZ3v3+4IlH4pQq4R/cvo6Hrx1JD7/00aAGOgDU7JYWqKL8xxFvyOqfElCR4cDvcp87L7Y+DWUXH01Hl0WxxwIAuXZZCr9JrTji6kIiefT1YREh0uTIZs1yF8qAUAMykLB6wfjkbIXOHa5bB+2KolaL4cqj+t8ZLj+fVCNbSGjL3M1YQ5jsGn6qlwtQFiwgFeQFmjPhkyaDQo/PJQCYHyfV+ECCDRZ1x3yyVeAa6bXZgW8UYgPF36vO/7SejEjN3ILZy6snHlSxeFLQbo1Ztv85jxTLT/KFcMifafzFF58k4pqa0v4JnfsWUvbP/Yfdr5hZCNaW7IYIJog6ZFRL2ucbL4HWwSr+QBIXHoDKZ8qPEdbAHAj+eCSwxWxZOa7x/nRd6pfUtl7+KbuTqA/qnppSX+1oYEAGjjZAEbBsroDLJ/uGgM6YrztGVna0E96bKFGsdHsxvleZhZu4xJtSsmdIK9fGXHYWFfxf1+w703TBXsgfUGknZTCrhmFIolvKveQO+VemQAs8j1/2K0CIINLFMign8KLf/OQVRq7aG9I3BRnJSQEoQ4rih21iMY20vWQ1ViPjzirJT/lzxvPByFE3ltjoaUNIcdMVWCECX2oUyn/Jeg3VkpKjy+KsV/2Xw6I2OEi2KHe8nR+5xlun8kIFwntC8GYkyDsd8RpnkPXMnxEcTAP1wvncf8PZ3qP4V1B15EJ8xH9xacd3ZF5+Fe8OdQmcJ7acp1Oycsg8PKTRrpaJ0CCSy1HLRaKNSKIdsyyDdKnikq0Ku7bFstaxZpZXq/wlYlcjKUq2HdULpGKNmtJsXcOZfl3wCyBfvJAn+tMrwd1Us8V+RCE0VPg+y+0pmKDB+bSuhMJgLluIWrFbDIcc2K0EtWRf967HsdEIw+t6Qtqystj9+s8r/xAxtWed3R1bMHUZYhGpAqbN+JjlDLlD+VixkqA2VaJhJUs0WrGJNa1fqLHHKgmSR0xGXw40jf83PfK46q/s7BiWUJ8KpllpDCpmPGFtZCOiKKE4oiiJpCuRL6At+UzcXMsAdjQLDb+HqSJknLmtqOWHVu1RjeJguq7GPHi7F8i0jAgadpIB+I3AFH2au1NcUwvFdXNlzXkT4X3C4ZGyFer1UPzE64hoskXP40/7h2o3wrbGKqmh3TbIUJoTcnLoBspwIC2T6QHtLpLEKtjZg0QHHuHjQNC+4VyuuxOLQqbLpCUUVw8s3RMY4P5D0tYL4cDad8aE6JwegTbJ4DZ/zoI9OomKLqVQDcGnrcW8L88yEipkApXi5n2SbTa7nfWkEQowpKM0jGS5bytIgZ631EBNYkdiX7+rd1CiRTYV8fI3p1aO9mZM2c5fKDMbXzU2rZ5NEClqcI94GmqeIqTUh/Ru761hsbK1/WsUeMPa4OoVfJGODN0k7ByQ68QSsRGo7Y2nnH5nMEm/JyoQr/E2dpsRPcT2j1VlAoHk5HP2ro6P2eR+IjJc8QvBsTwtYHoA4nfYdWRvT/K+ZoikyLKFUpQuUSxhxdvXJ93WWGFAF0/WCdRq5HFQsmQrFnp58l6QqQHkTAI1B25Pvw9IZENSzzXuWlp7V45vg6J8KSnhL42Fmb1vudyOP4rEoC9FKOw69fcp833lXnGjZmOq949KF5b6dM79L7xOTRWQ1Fo1gtUO0gO6RkTJWDBKg3lHslireJu4c5wdwh9echREw7qvXW6GRkenaHtO6tAy+i5ZDl1b26UiCJoVBVQnTlWa8scnZ5cLiXOkdVr7+PHu2klfPnzX1TvKwGuYGerDmWE3ipR2UQ49GzvzJcDMCLmY4sgbxJ6B4HCOLwC+DncTD+6FqJrjr4i9RP3dHswwHZ+tLNB30R03AanoOXIH83Jlh2+xJa8onhoGMyGr2VM2sH9MrNGbUZKWTDP3U3SNvXaL0a3PWbqf4ioyzxL/xSWPlrQsMr+sIk+9LtO+5g5O7p6E1kR8OmCr1H2A5phyQslqr8gh4lXRVhDycUICr/jTQt9rPNAaU7XjQY04aY0Bs1RZYS5gPUqpDvijF7/YAczp79GMr2+69O1+mfCv22WBpJ+5U0wZaCfOGfzhWGOk9+lODbJwbR6KaFx29xBZJQLbvkIqv8J3gnTDT0cog/nDRoay+wlpxnTM/ns6Ej0Ku+1qsPEmuEfbT83QpR5LwCi0trMW3DgzCAxekWceWiyt/ElW4LqhbfnrEL1kC8S6oo5Nu37g+jzJRaz1Xv4f0smM3ul5J9Tg21JVop1r1C4rEgo4jpXWowRIpddLVnuUKhXzkVXvLqbsBoZ/cHwRhtIMyCtUw9Vf8NP16xtp4hj2VbOMoD9IHeKPUNl075Wo8IOhF0GdLa9dovGvqBFsZECJe+4O+iLnyTxa6kHQNltZIGWEf1nayfwiR1S3QLzLnJnOx8UGwDgyVgbBs7pJhZEVmZXbBn9zllw3SYFujwGWulEmkKoAmzSIDtOShdTjy1v8U/9i9QEVsQq2MC5so6daA1K6gIYAathGkQU1O6PttvGFXUnfPflWWLcxsBohV6jB0aaB8CwOPxGSv9KfXVtPv+lXgm2vzob2zHirTw0w9hTERyp/IYhEZ9mblzxD7EvM3y3lL/MW5fnHP7qrOiCXWM9x3i648AsmLPUIkoEOyPGCXAU/3mY5cz8CamN9khLeDbpgR71WX5ZyiIQ6Dt+/rssJFJgPVz+/JTi9eZ717Hmc+nFMDF1AhkaURV2FRXwcWt8BS9Z4Xoa9fgN8WJpgstVfoVVHEa2XLUzM+nIgEVHS5u53rc6LIx4GJIPVIxUMSH5KFgOaepz09qsUnxB5ecNsaeJpBzDNVIKjLn8y9QY0kzxCFVacq127/FhMCe+sV89GQiyze2qCxouKTMEqlnTeDpM1QetlQBBmxzazrBwh6AD0YQvtBVgF/ySRU99cnoMHS4qyxBWND3LlpBob17JjI7ltXK0QnL1FqhS36oDh3hbdeCemYRVnKHT+lpH+4EJhpahwwSuT8LzUO1CsWLafCTMCudgzjsWVV92Mg5+keyRX1PM6aOz6IQoN8LCCYtQYRbdi8IfqTkZeTW8TvnUMOGSod1y7U5tSRGbU45DTFwuuTBhwGDRhn4YGEz3syT+lS8N6PYc3nZseoVwTCfPQmkunU8L0Q5ps2ci/RLpNeYN2+N+0tK+1Jez1L5xnrir0tIQO0Bk0bJ8R3WHlXDmIS98/b28wbIE6vjMDMpG1lRTDkt0P6naHg4iAp0hfd9VSSc1VIIJiA/vJs08HP8OPx7gBBnAhS4k46AQe2qEtKo2gcwztYcaNJ5THq9HHcpHUdIo/++Nr991Xa0uPifrOJS8FK3DvZTilnUFwqxtDH/uEq+Eh9s1BKVMH+5yqICq3VOKScXygEDMaFmJwIx3KJ3oW9xELzBFFmgpvXvdBzxPtIb24rt3aQZhrSIhWGvYGUzwyJS8GCwN/AviYCq8w5GZ89tZ3H8YeQtmEx9Zo6zk6i6c4++jiIsT9Yl5aJDD5FWgECmqDOmlnAEL2rnc4I0YfMYwkQFCDgKcxIRrIriqyQosIG+c2VE+Q5xY164nu9Vzi6dXlmD3JXnykdu5N5CHtXkVuBguG3K4ZKHYIB6Ot7qJXme5bHk1TUy8abVx1IiojA7aE53F4hHOHWQ0hvffmkn9Sk5Kp304H8uMrOEfpQXBQE+ZIocH+xuCl0CW10Tp5VE+VcJNw06L0sWXNQ9Y+UAR9ZogBDq51HiW343fJBPWkTPBVEozdyeMLS6EMjE2+INgY0fHvvLCb5c0emZaKNYvsvHhaAC1t0cEPXzk171Qk4e0Jd45Z6MmVj+sfgo093ajwuhZJN+EEmbRVmVrKE3KGnauImzJNy1024KeUNenRMpUp/vN7Iv56Rt1n/cTmzuh7gQmJ/QbxQFHKErDJ78ZAn4/XoSXInC9mf92okkb4j2DgqI3nxIadV0CBPbfG7MfWZLxoAIEychk+AlXP6e3jrNkr+Jw/+zRG05BLHqbs6pNU5d3sXkc1rNap0agzJWMCoPTE1NKZUapy2yETwsvreA/SZ5ZqjixQujvdps+7Zq+VVLYV4/3SLNmuuGkElPcENH4hSUEPyS7wgNeTOQ/6OvsRakwVuSzjf44sEJYZHmq3t04X09Rdphv2Ci+QmpFxupSWrHCAAN3zXMQuTpphlvWA4q9d0kV0yPOQU3bWIlUlKj//JJDslhYzouhXuIIKqFgF9ypSudu8gOxzaVD6ZhAlzIgKEND5wdop7Q2fKdkUJ9gq0sB6XdxSXxpiOD6BHt1fdlD818uCuxio1noxb3aYURF/4SZBeTlpzxLCsHiFO/s94/R9SJoeszTN7l1DfefTIZyb+NnDofI8ad+6/eEFhigIj9pqqJhraJ7Q8OfN+k9gaL5Guhp7WcpcWXA8cRneGS2wsni+2l0q5D4v7BdtX6hzUI8hAGReawX0sskHdeMFWzbAnbrH9vowpFJ47tR29IzR6N/IP0l0xgDZYLKpgvsT6UH96x0A65SCLOGwBGnyUhcUTbq07dizmccoDn9lB1N+9QtTblNSYQGrys4SzE8yVU2OvTZMRn9XozmmHDE9+slI43dl4yH2VFOwsylf/yxf9Rhlsp19WA/gk132RN8PQ7lkAsqq5HjEwg+sbljpjRwBUrBb6LSW5NOeRPHASKe0N3/nHT/Alajp92skdzcKrDGro1UGQeecDs2pn0LSwG+E5NV3FF7XpTD4TWl4AexlZ1I613SLam2V/K5refI6oKZ3zvhaUgNzF7K/u+W7bKcoJ9QLDJu8kUqRJIvQ9v4/UornpG9ffk/cSpvhq4gVidesm0qCRDQtcOmL70Vtbla0F1Kqbzk032PKqHJKeJvijlLH/dSf6BkMp0UYY363nuFMzgT/VP3XiV2F1ORJ62EQhmwTThGajy7y7GXwIdWOPhZ22+G6LrSLf6sPft9a5QCtWgTMam0HLZgovJw0p7jvweY9tu0TGOQYabyXbb5L7eirgyT0haTYHhyK9c2Arkz9XKzkK6eSIEIkM8nCmLvsMGaosB5UngFLdTShdMPDtQ8rITTMXaTQgwyHGNxxCez5aMYC1ty8V5+5Q/Ylmle5c8tj2J3wDC7yrpkhj1/PMceeFl3CvjjvT/22z6eMLhBTTohACwbKN/kY0KQkku/8kX2Q5F1GQ/Z/iQS1LlMhrS3Zr8VEiifwEMaiPRbBAwX3JRHtS/iPkFGz2Ct34xpQpnTesPO1saivfLq1i5bP3TzSVqE1xN58edL4NZe78jEeKPJ+pbOTOEgkBHvm54byEf2eLzTWu9t/YiLSw2+bGVcZfmaMc3buiy/6JM/ljzPj/y5bYvO2MRW+B2Rw9HH9S1Wtij2TbBtvD/EFVuvoZuFflBDKQPJ0fwLaDdf7RYYx+/MnhR+BLWsf2EgTr+CiS9teAkeLBtqsezemALowZgD8cGc5xOWy3RYWJJYDTSZOeKAK4iqHOUNw8y68KbMn8LtwAAjP40gLiax6RTcKuG4Dl3jP+/ThO7MiOGI7Q3fmJGcE+QwADCuruh33F8Tb1DFwILfNOWDq2BN4ygLZOfh1wMmZHGKThbkoxrlgwklSCPLhD4K9a6kpg62Kqwv4etmXgBBjMB2Ii1SqRJ2omLQGxY2jsh08qHo7/I0Y8J3To4/z62AbqajePExrKFAgQP5QdIilaSoyvfCBes9v51RM9h8lmuY/GzffhZS7MImnM3FqnpRTV8JCwUNAd9q66Qg68WnITOncaG2gHuVw5Mux+tnTRrR3yoXpYvSQipNJE6iYQJ0Fyd2pkYLgqXGrpAo/3ZqAV867kIfq9Uz182GosxhpyJbhQ9QTtpeQSQ0ZWksvJb8M+7dhMK+4A1P7PytN/sklArJiLL7YbT99PX8EM9p4+Zmh0Qcg0PTHI7AMtfh/P3hGzP1vSTyRtpiFQnAio1xGnUYPF1IHEAKjI7uJWMZCBiDuAAFhkljWGDKxDoPPjOk976FIdk18gf94O50bOHD+dN1aS6MdWUgOqgVZZqUYzOW9Eh3pGoG2PETbtMikn9KaEu0s0FjVsNFH9ek85xDGLXL2BsxczuINMw9GhLDUj3ErWc3SCA181dEYdRkZGYK95zU3Q9CRXHx2+4dGGPhAPwxtX4RTUwWiHguNwEKZUTte8T8sO1N985x5koIEPGFkgdmm4kKM9ZPbKdc1p3wfk9Dqo1KCm3GOLiT+18q81TCQtMmh/rWstthF04df+AfHMOU5WOYLWjdOmvQxyMx5NbK1z417uTwAO7xR3GFpPaHezIlUWEAWLC0JAneO7n6Ga4bKuN6fKPwMUIbtayaBxhrE7odfNCMcR/1odJiTfzSCg0HBji6ThdlI6QzlSs5UIBGMI98KU1hcc4/5iJLA8Xz3odRwkGjrB76HsDSbTQzUfVjODRBrNzpVkx+L9HPXT6fiDAtj8ZpsNPFN4yq7aLXmkU6bv6NZW8LtzP1WS4qXwCoww3q8TWpA2b53+k9EelhxuEokE9CWfuQMLNaRtmK/W7j8F3GRDc318zf4DhtXYOkrsPYeFuXeCYhcMUgYdn5IPqFRIcOzzJKfNP3qcI2TVsjE8jvuAaqmrBOGvUD48HTFCIHizGfSGftyw6GFS/QW7d+nQy9q08P7Wj5FrNH0J6S3063vW6za9p85yLcPHt9RASRFROn5HzhXS28sMt8dXqH8Ff2glxxxxKGNiEBaxfepydtENaiY0pZPk6ysBTkAkQiYs2Fv2GOfS37rU+OxFeBXajPI4X+lhrN2BiNxgi4mkSk8Ii4jwVhxZ1iaqGwhjuyF0KsnDf5fhnFh5qbM7bhIW0jgcYwgHSy20CKiCgUbp5LI+qRp1j+MYeYvbXSA1sDvbu4UnqPsILBDcYM8c1TGsru1PuTFxehPLV8R20qdGf793ssbI0FcNDHvmScDYK8ds6Thu+tU9cvkbJCj5IkU0i8Y814isI9SyB98hcM+wzJ1bKwy9KjYcsyn1AXQ/DkCq5hVOtSHWoqY/kYyvO6qjoCZc4TUIuSk8ddh6scjow0f3fprSkhTfaZitKaPDuGstfRc/TN8h6aJGQVYVghhfiE6qkke8AeNpu1Txjpn0Ucdt2E1SyKxsR/q6Tf2041nglikYRgzGNWMcsRxg/cTT1OmUgkDLpk/tskjeCB9vrD2XxO6VPsGyfAZ2iysdSwIHQeNcKEGq0p7iYZuFMRVDk5Ww/rZ8LNvXsqAIW1Vv15r0fP+WUkOiFQSl4KVqR+tFHlNKNi4/4OzgdgeZSRhCeVCQtzNAztL3n8yFzVNLZgci8psMPACLtsFHNsHfn3P72rHCZol69Q1POCnlvATb72RhAkejjSMVZjUW7pH9vqZQ49Xe6hwCsG0lodr2KRDqXv0wT4CUsa/9kkGFx1BpEbAwOoKCywrQR9v5ZR7bJWeQslrE9IFy9puDc+LMzb/vTODw0+PQfmZ91hdABVakbUiLrlW71p0ls3PU1gNrtZYbtzsCEFPAgM7PdEsyP901LBGnyu3DcseViqDAAKAbL96QiRaRcz2UilOn0TjZoLvRSdEc84WNGqCNvMczQLWmCzYsxAtfTN8SlpQkUbDdDbdu+x9EiopPexdkYTkXCy+DHo+i9CvR3HsY2vBhSDDAJcIV6uRn1QKTKijx18GKSQgxCZlJuVQ76B9didqt9mVdj8DGuqRqXbt1qW2GBkLy1VpEhkUG2XjM4lK2rwlVu4xnr+649NHWnAbkD8FPyCO21PWrdq2vlGBW8uPZJ6QJvsGvKgZXajjhoYPqYPHxhPh5Lw93U329pb8VqV//+HfHnSdL0RXiPPQhs8Z5GE7ntvEObAlp9LBlPdmysiZUQkaLrqdgt8O26tneIx+IvtwWnNVObhZX1TVECCRKn+gY3pYb2WGoXVfhMrL+k1B8TzImZlvMxW/jWvV5YL23v6ls6D4FpRHn8gugvzyMgUP+c8aORXyHIZMbr2eut3F+3e9kIlKcZAK965iawwNEFN3+xCwib7s1vEsohtDiDPvGMLE8THxIbPTRj+dRMIHryeE06YVNrlHW1EGbiJmlTpPlWAtchvyYLY/wL+UFPOoib/9zPHRAK7H6LgVACrNci7v+1n/OYduJHGIBA432C6HArfHqV7KT2VEMaOVhs0t9dvMouIVlBRUF+kUZ0c5HZ78ELp8Bj/GF5YR1gNynFkFwzHRFqbmQi7f4R6/bu6pAQoL3xVQwBhMm8bdxDHU3MoT48T4Q6M+Z4AXzHtFb80h1iLPKy+rYYMgjl1awtlwq91hqmFlqqLIa9gqblWrCh1zX7evC7TwEjzX7zdfJgVagy6qCeD+vLhXNUGIJXUN8sejzeKC4YHb8BN8kITm78gm50iTV+DFt0iUTJQeBkgYPy9g6QqMZ3pxwbGydurf1AgYDzL93R9kEs2mM4M9s3SEA/ITLfWKrFYxDhf0uv2sZR77rxTNftoRP+8VOEs4MZe6ufjy8m7ugDMNyHfBl8jDKeWB7hqQkblrzactv9DoZMAUeiBpCIFfPujNH/AewVTLGndxTYZ/ESGAL+om23lqVRbZhfLbZJ7gwIenv4QyNpUMUEuEg2RPwv6JEK2oJW4S7Wvjg/B8DxFa0AnyPhTaWasTlXs8GluQHsqY+HVZRl/SJQQzuxaDZOLvlFYXNewDGTaaaoVq870TzgCFFqCxpq3CBpqSN2rhxe74xNuTDu6sBaRFdzwWMKweO7uGA6MT9sFkkABRtfRanm6HadJFGrpOM7H3cUmF+H9naJqortZpH4Wp8Vxi5sLvVvMu073FbBDiMI2Wm29RPkddAT8ggavrOocBtIyQmw6kEz/dCPx6DblcENg/dNuMqsI/i93CNUE/kV8Y51MMu2Cht52Qrc9mVh8744ORyAVIJGfwxFGyhLJCmR2k64A17UPjSaHOGEtLfK80Kc/TXKmO6QMO6FkKGLeXPdkWuPrY2LeovpP2tDu+VOGiG+OfvukODQQGAo35jBN/utK0W90N3DewYPgSSldWeUbdZDnAOeUee0OVtWUeL2mTqjMWVl6/c05d1jkbbPsVa4qpDLHP3Qb/ilJMigStQXZSl4FWFgGW36Uavk0Xy9/Z2mTeueBioGE21/Lu5iUrRSCXpNHm7xYpHYhx6K0wihVlwsEATN6w+KBmmJMEXrzkSJOAFQQm4XjXcLEo+lrNA+gjhCPnJQICF8gA2jJDVcXxjHsBgZooYzSY6fXzfbfmgwRQkOxLiYkdybZs03uCWSQ8/VxUTQgq3TqHCZWArdRuIbGQoV15F/LJV6pHSHeGOZQGSrVv57NhuKxizNf68iNTYMNbICpd8WsOr1KDkFJZ5xog3draXJSzVJa5SIpfToXyx2Ki8JuofUuO9m6H5gKB2PvmDrMK/P2ZwgMoo4hVGgx6YBlI5IwHlRKfxtADLUT+RKhcDW8i3M6gwgy0JUT9rxcmW66ug+K2kUtHaSNj+hsJwfF//wqexm2Q5Vb3SKlpbsrnAkcF+yzUFghQ/UUVAbc/brl5I80MgaEreojx1iekmtflKdBYjWVBq9cgad7eCo77Bg2c55gKkmQEdyg2yVhwU64n6WzIYC0V4r820Lax9r1WdXZROymHRk5BEwbgE0MHUydbm1t4wJIoNeQ9POV1NDCUfsFItO0rXGWJyPJcwWduYNjcy4vG/8JucmP1gpNCqV3WXR3VIsCwO2HDrj1jvlAZTWBK1ddZ5vkCtVS5ITLvoV5N5R7KZChEyEgS1l6LeE5Q9wzxfcNUcdu7I8wSveRLV1U84HltoiejMBpmwZgTFrcRoBnvVLewQK9SLJe6zjI6Iyxd+cpwVfLzD0KWoNHpV/Cz2nChuTlDcw0ULXjhcRHCDQ/81pzX1Y7/BY6mCRqpcRfLJo2Xaiu8BdftPLLpjf7ZaQ2615z66XhF5YMa6/zrVCGXLslzOc6TJE+HBk+oNgSsIBh+xWNHu9s/O+M5IrdIo2dUgrVyFQtwsUc8htsN46gm/Z05iF42ZpDV0f7D7JOK0Q/wiYQ4brGTcf72TgNJEvW8ToEnt/eImAaVgxxbRMTuznWYwgVEK/tMxlg/lx162kEuunJL29qn8PCmGod5TOZrWUaWENB1puOcxuXS9F3k1iZoyGoTHbQT3nEqGzYsa3oTp5jHSAw3Gs36iS5y70J66Gb/I7FPnW0efcL/+98YDedNxFr5wne0ACoOv+A8I2lRQBMeo0N75oMDPaRTfsrTKvL5MFK+2ltVEH9UTWfMqKdecbMlBlZ5waKj/8mgtbLBy5eMYoUUHxjCuy/9PiaLD7eoVyUG0BN0xy8q4mC0G+P60la7PwFHrfaHTuqF8wr/X97Qdp0qLe6sno4CE5cZ10qEZpFjrh9K4L/QguLG/Ma1LCX5PnzHCrso0msOd4mp/FRhLbN9+Z03y5Yn0IHIgyQ4JnNtoXEsTBjHgwRBcbtYy6wSqi5CgKlFzsUmVH3zwxx0IXR8ztcbMfth6ryOzEaGg4qUeFJ8GD/NgbQeBuIbZToxEu2OAoovUHz+0bVT1TadSbsxkr5mtl+nqmVPr8nr2Iincbv2tOlM28bUn0slpvU72zJ5g9RBlg/LvCOcs0PX0y1W7+AMEBljSVc5a5e5UkPa8djExwjgj1XD0LWYv4axkrBa6gC3/vWVa7T3cFYZOLgkl9++s9P/z1r/Iv76apOZ+jie4bTqObQpyUZxz6x1YtNJ4HobMgwsFGdS4p4WhIAvfYqmqvBJHT0SOKmpeX4vOHYqcWGOB9Y1P5R+VU9PbqzDe+R+E7xd8KkGV9w7DWqaEdNRecCK0HIQaiUo4UQtKTM8eH66B0CaZt9nlMxK4mo9e72UU0EJifRFaRFMN8A7Ozjkjj4lu97lMOZ217cmSgW6Z61KccikPNA/JVFAiisLZMDHnjdDu2z8sNNwmb+eE/VTUVqaCX44NeC81bjVHL6v+D9DAWjv9TlOHMxMlMETsmn3cxHNCLmiA9kW/Rc8cGEq4o7cogFVqH2AcWVWZXfNUNZeAA9arcz05xrgbcpWux6MjaWKNmIAim8Rwrkrb0dqLVnX4nxjKZQvISsmag+evBgqKSIa6RMsci7cXt95zY7UFEVpeNvajDedugt2GHSVFzkx4uDlDsw2zMM/h9TlMTgM+NKKw+FanqyoFuDMdxaEF+30tyzHonAjt8QPU0UGY55OENCJ7xJqzZ6YhLZXXj4M6b/YWDmiz/V6U9HTedjW3BvnZ+T/xxiNbT1xf6YrxGXz0GVccV63QvDsxzFl1y9AvE/gZ6nyUF2Oxzldw8J/kVgBloYWSV3tj6aYrfb7H10484C7pfk4QFNVCodHuIkB0dLX6T9Unu7Stcx97J1K7QSkNpiU9U6qEhgFmEFyeM6+96MQ6acQlzxMDkc/7JsPGi2t0T/+hAu//fGbPbFhq6Jnae/mjTBURhk84MI1X+AtLQqnnG+HQKh6Gr/L2KdXmABn2KGjd2vmqhaurqnQBTbPD071uCFxryIH7rBubHNEdNsoimAQBZX2oNKfd6gw99dmpanEHnh2dgWy/mchdr8pzKFtQAhwBXVl8PcSnNByjqksZosZFi7S/IJAnzUrefEG4Xd/IshWdcTQiBY+VanQi5FkKBvnJ7N8ERm0D992pyNFmw2xpoWS83jZZUjxexEmyCodevf/5PFhl7AuFyQ2PEQfsyZ+gsiKBsjUq3ZBTDV2I2EBjHh7QMXpy4AFjXkqiSr2Dt6jh+5sEpboRC8gnenHtdIyo7CsM+XyvLVwZL7eGNZBN6AW8qB8iF6t42QRoFky2Bzk/e7uNG6uOANbIZf3UXoq6M3bSBmViRyUBwYU83ucKr25Ufyd2c8TnOVxMUu2WRsl4A7IAb3PVJVb8vSDD24zAUMN4Kk3GRZgi8AgEU++5qQ7VGVjANCyKYYWF4u0ACMnIZpCBhZuPJcaHGyxaA5v9IQez7+L+C+RKxkOZrITkg6w9W03IKGeXoUwN7EhRKHcpJlc0BIIE1PB3WAMGaxn/SfrRRqzYH9BpLY29GtRtQOh6CUFY6MUUHfASbfMrNALCNIASm2/AxOzFKOl4a8ub96g5WV0YFV2M5HJHlyMaUCgmHFY7uG5OG1Bj6gVEZtzOEkOvGba7vz/dcriI3mqC1Ne5YBoEOmERjqqqcHDDb0CogRUueIwKbrN3FZAJsdCjc6wn3PS/5aRU9L+9b+YkvYU6i5OX8jRuknM+xZhnQN5NfnsGo2vn4wmOxv9rQxkp69XamCpy4sbMNMsO+MdaZdcUfuYmuCHRTzh2SOMY/J56Anf75c2b3j26GgvEHqCSSlr5JUxFFZrpwANE9I7+rIgQBJBa3VnOA2/P1N4gRJdt17IVhxbfHgOZpXL93Z7bxNI8EidYezN/+roy283bGdY2/+8cCRAwXuF0zPK8z3hO702OmCo1JR9DvAtszHPFf+pvgooIysFKoSCEe7ylEk6I7zNj+y9qa3nJmlXxRfT0eQ5LMG9ZGT3z27DZv6tTLgjN+3BU4VbDZY676RH10YZiVwZRDF6wOeARhCumSRmfnWqoiKUlb8jh2X1J4DDws3/i4nmIb0VYkQnkmiZJIfUxB17EvZojE/iYGPnUp1SuaFTHYICYiihOKcZEiU/IBm+6WtFf+vTqlXLyNPCBjyP61CR3jQHPnL++atzYfTF3a00OviUQUUyCnO9i/KwirC/lNhy9fwabPZSWyUqKl0J37Ck+KzdEXsrNLHqECXrrZ0K25C7wXt/9IDUp9hWf5DdKvQgViMU1a0rAzODj+NTnqXEHvTNjFYfHcNojgUHg8V62nimdxms4VjuKKqPlTJLDO172+ZBfefVnh2W2btEJUQH/8mZylI+eD+7Wayf3jsY1C1HCI55flC6abhhO5FvhEy6VyQZ4JqOjajk4dNozO+Cqe4FLGrmgzqiKXkt0UjFg67hVDXw9/UvgM5hjrJ2vlZXVwUdmJdXWP6WGMooKPv97GtAUuhxfmZacjTyG2bNf0c130YMpNOh+sgepoxsbwuR332MOi8wFrSKkNZ3d00u1zJFK6LCvZH0xoFW9BG49bqdmGCXUE0YoxTT6nhVbsV0P5utIgzwHodG2rURKBktMJPlAsW2WYt8ck7sHggVDJ2hrIBMa7taOoOkyGws5EPnuepPz48FSrY/wtr5FmLlIgIw6rh8iS45L7rfSd8yRbs6SgChKnlGvSdRFY8fYjc4+LCdSbHKwWIxrQkMC4de9XbNzOmCfT2C9DXJujcoSliBobKNF/ro5lG+larBsWyKaWr63Grqv3Qr7szFhLZsbJH5vMwskZiRl8axzQd8zqabMGkrQ2UbteuloVj0j0iZXYwVNO6AUtCI16MStES1OiaVMvM1SGpDtYNGllRjlmIm3S0O6eb8WPIW0aD/9ViOpLUgFEAklDDpFH2aRVlpMoouMYfQgnzHLoHTB+2xa1ZShJ1UaUt5ZLMOcTiNMx2DlgNTaUHRyegESl0Huds7j0dkFY/hGfHmeHObfog+sbXuWcKJlSYbXLHBmAm+1hdRrPuifhlZknc0SENZYHLaCasK/oWDRfzR4qa5qpcVpYlzfwroFwZYz+Z89kHFvdpyzg0HF6NNlOZRlgR4vM43tlrAX0EiFtWvnT9r8GTP843g5qcOVuZOtFZwg2kZSnGPZ2UPlfu9dOLamFZmYMGwe0PwAOwAOkZDnCyIF4FPitnzG0bfSEjbmMWvQJY1gp0QsU/ZMwaYBHSj2SbXEGzjpbD+c5p9lg0hTTKJZYQWlhob7jGP88lIPVLr2Luk/E/fHMqRuQz4m88QLf5BUhiL3HmNtRz3KgaY5YjwReimiApH278iqLT19e91fxg9p0ANWkmJa4hKtt90pUKRb9HTCfF3hATeMyBiTxrFWU4eXWRcRhYN8An3/gRmLV+Ahc7Kj+h0VplWWel7P1uMyMqP6VV9HGoHziQX1Jyc7DfFMpRg0Gwp7dMnhkde+8BZ4JeuxZ8BzfLNmNUkCZ9MgPmWaJ8m8HwpOedIb0y7+UqmU5YJ77W5EEarWf2BXjv96WhHyawSL8M27Mh6I3hpDlYHorYL/pi63dOHPivXk6FD1ix2oC75VgqFxjd5flLUgv+9aKjBUA5GKzwlWKwiUBA/F3npj0L88xqGm60+qJJjsyM6sq1nb/zRYClUXGjIHtyhhDZN2HF7mWmt7iTsEGIDiiuS2GFfC8mX7mm7E/plShygPot3L+jLSJ0JFy/k06ywPiOUWywoeOcnWJKcv75drmGNrK9O3ZYbtBeB/OcwStxMc8Ts+RZhciFmilibdvCP7hsjDuFNhnqQZSyTu5qABAiigMrDOUTLGq3oNNa5UB56coeGIoZW1+xaWf1tteqKuoo83ylsUdO9VqNH4mxMUqqpXkbiRutGaPwtPgbzsIRvNiLgRBrG+YjAnmQ54aAeiAElVpXoihEugnjGhZl4hbbt2YSOKKPwH44aNc3lmnUosnKPb2F1gov1so/58/UJFmgs8cTWvua3TtjpJzsH4LJdEBM8s0eqHM+C1eyxZ56amYYOGVCgvs5FxTH3qfEEY/2xBaeIpGufHaxD3paaqTdgssxqOsMDPl6d+4BcyhYyOm0hYASVoT7PLl6lZgDEw2XcDahladZWza6xpOaV/0n2BPGcKZwjsEJVloTBa4y5zibqkUuOu2hRUcb+cAqKnonI4JMXT9RRF6tNfwZLJqSnn9XzQyAE/4il/KJ78MHzvi93sLRSi3jVrGSzS9b1dpWs3G0Fl0sFh5AYrLVS12HgKQi4qQomXSa2qRRULes3v7LDhqZDlYGEftY5QfjawcuNIv6RqPQ5z4Sh/LdrdDYTjzgBvWmgoXE0MxsGnoNmCHrGAHsdt5EYbgG3N7XJYGZ/7fyqE87oO4u+vxyrs2YmlI3wgoRRrcgybE0GB2de3aqTtobmr1oh/bUhTZf79MM4yOTMQuq5L3IJ6b2sNseEVSfIwPCat6fwqDZRQahwMspLqMZAZ6cqV5RLrGT78kxNwTgLnkXGhpva+aNRdhxlABMKBY0CGiJ0LXEShCjo9syKncpC2t0fhxui2DQ/l7EwP8LvGH09pFgG6Z4zTioPIhhumiZbH9dPuCfRNaSMTiAG3zDY2E3aoif58ibGeJFvTRpcYXg7xInp72svr+udOLsYwExeQ6yOG/NT8vE9VmBU6uFuGaPK8wj8pV61gozyG4iOWYBs6R0A8DiXeItK+T/lLWElIAOGo3rdXZaIImhPHGUQHOnAptfvJ9uQ4zItlnsm47b55Cn9DAxYyzJrlONW26zGLDn+eqFrE65wkz4ziBku3aWit2ijDoa03IpX+VKsGQcMQoyuXrx+vk7z5npn9XL+d8g4M4OR+u6Vm7wNsscNmiydux1edhND+fOod+MrkY2i6Zd9qUwL1W+gWCWC3hqlm6AAqmC2e6bDiytq2DPFLFQZxbvY12lF977Luhfex0uozFnbcs+w4ORWdr45MVGbZ5w1pVMJp1lVfNCzkBmOXSvjeENkEZ0nuCSeYcezhvNUg5osZdlI/asdJs5dmDd2Y/GrVezoLWZHcLJoaK18yZyFrixdA60hRa9kRLktEPcxlV9PEijxvgM1z42FPfaXA6V/7VtXBN5DOh12PZHQv6CZDptLgn2r4f1RhGBuR24dnYDdPIQTf5mBbsap/3RwCsONLNqdMvopYW31ZTsxqQT/h6XNn9ckbAj4wfeYqHq7NCv33fiRt06IGlOh9Y7kVLTeV5Ds4P0gsL2xWhpx+gwSpm/0F6+YXs4qvCnYezmH/z/+nVg5+UzVYaX1uPPB3xhD8pLiEtmByNUI6DZZqYveb/ad7V4/rYcRBstPZkBbrDK4jd1ipGHtL1GR/lTYUUB/1SVKvjcae3V51tjNtEECC809y6lx6BAwGQMT8iVm18JBVygJ1JEHY8/g8rvjqZcdpIc3nTmmQ3wmaNDnZQA52qpDJNDmlI77WNDKDYX/T55d1kKRM1I0Sng4Ke8LWt8J1LpA3PJFMT5fr/uvkDdOJ1jYlySmoCkAlRp8UWkQ0SaPsxlP4hmC7+Uu81XvyISbB5NMYAN/TyNS8hXPdOHcDTGZPY6Av9DA9TaqPfmNt2xgZX4uKJnknGOXNHKUYObQK0TyQXjtA56ZBB2hZ54dTL+U6QA3aDNeQlLXkzIgdhKaK3egQ9hStVl6l1SvtS1nn+VIuhgEaXkjcpqDgbjNPygTgy+jC0XbtR+2fz5I5dZ7IOKBiBEaeXUCnJfDd8kttneEQ/w81DeHjmWE4H8mN7UJHjL3lbtyMg5fVmDv0mBAdvwwISUTk3CuYFDFEztl9JO5ZAS37w8UNEyEyyXz2cS9SbBLQx7Rkor8e4K+wxNy5JIA07jTkzi+LWgFsr9xehiV80CIsTY2Y2s2ZMG7xHbPSwAA+HM4/hZLP0zSP8/nAA9nAss9cdBoJYpl9pXoD6K5umEWDzp61R/r/mAx66y3uK6v97eNjE87i8AO0MN3IR19YkQWH7uG2KjwZgdCd+QT9NbR4WzNWGk7+8bY4G0ro/aZg5G9S1e9h9/vzPfjY/BPPRLRWCiG7Me+H3EfUyXIGV31/qBE/s0tsqojrYpjWLEJNQEj1PWzla/p2ecl8OTeZeI3GhVt4Y0TXJnKgf9vn4H6TrGq3GikWH96veMzKyYwGPKbxv81r7KSbg740lFGfMgYvzLWIAfM1sEPUbXzR6VzeniMxMSDnc7ekTNyD/HCVf+S8M2xI+mGZZyiX6OCV8Z+nKYs6YFhuRopb25LeYN9KAdtfWWHGYHWqFQdGkq2pBMcwhVNMSsZHIUt0mHgpYgZaT8FHo/jtl9eU4IOKfuzxmIODZrDyMPzK2sjhOYn92DXMRqJ04xytPGQPA0aN5OdKA+Mr69GsZni0kR4Fdby7LNDEV84+8N+Te/YEjrNR73H9nyS6rWheR5T5u/OwZ/3jL8P6j9bC8IHoncWJYnDlBY4QfMgmL23soaPIONIWj6zEsS5g07bV4/eEJggs74gNUTJqM6Amqhcu1agfJFA2/4MmY61ARTbouwi00iNszSQrrjSYOoYnW0jVYQAIlwRfjI03a6C8DAO3rvNhKBzefESa4VUEmGYyIO3jA5RbQCH3r0ZhoKWqItk33Qq3jDP/udxKs2P8QDy6gt+rUkJTCAoEfvy+aOui/EH5VEWxd/XsMtDJGK+kMwe7YRBE2/w49k626ywNw6by7VmNV7lOoHxN6LvhlgDEJhqEz0Plt+TLZ1Dq92RLp4U9/V7fg68B0DLJlwqqr19O9Ka4XfAkQq6fJRMUzs7ywGWdDWEXe0+qbFhTEsikF4wdRg89Eq/EMVlAAJkTEJaG9J3ibc3nxZTF75uMZSmmSS0S7ayh9K/nktKf3e5Md5y0nqC9XFHI9OoEu9ejWzoO+aHw5UG6ejGY2DAaYygI4w/f4RIaxlsdsTnrTJIRYfDRMLH73lPA6Pl9i6h537SIKCrldy+9ONCNMmmzMnFTWeobWocnatLI0xtPI7ndMI8QxMNNfXBIlpVV+1oiBeZvigmmXVrevWJ7eH6mxoVcuSfnuxFoz/BN+VlOcVT2GsNGmGdm+KYUWU2g4/44kKSUXROG89gu6c6i8a7MCkRTjzfz88dOGvIFMi+4TNAv76rnVBvGHiKG0AkghqoB9cq7H1KnV56xMnCUkKK1yu3Mxr/ZU6oy2xLx7zACS72eqNaZFMLQxjl3k/2FVv56ztoHgBvbxgSEDfVMF+fZ6GkOckERF24XIANWALpHgaiqduysvXe+swaAYYffygbWSLpsk7BFZGBrPSJ9Qz+99IhGNPQ8eWCbaD8HSuICiXnUeAhqbyV/chRjOY8oLXDLDeodbV8PnSHVV6Yi6eEKqmT4UgxAY0I+VI62GUGm8vE7uR3QENEhedNtc0ENAQqRWOcZVboZ/cJoCy2AMXFK1XpO3accr9XLhulYCRnZ/2YfjmeZx0JkvEXZJUjcC4KEFSIvts9rgiz2xuW5DQDUTUqUZB9ALRmAdlVt+ZwmScq/xYWPyuqwlNdnXNZYZchMMYbPwZWxWwkJoNkDxTjVQNcUCbnyyqHLlMgSBpX03hjo7lVG1S8hyzXHPBh4xTDgKvuzfpPon+pwWykIIGJXf9UrbhA+BnEiQwIkPO5lkEf6y8DhYE5tXZVbsPxGiimcSQnz/VrzC6XfGk5NE9/681TNjrRnHui58VGkApBISY8IGrWDm5eG4xH/yCOfVrURPzq+SV/5kkwtdr92isPjSAbeuOshpwf4MwnA4cQsOHJF6sQ+qlnquGJOJKpMBqfSh5gkPuJu8mIsCP1QHYYDhuag3GRqbznmXzXACspQtjeMjynBr+XQn6l+VnUtIvH0QKfkaIlYCHYcMPyJYp+ulzjm6vsnZUZiXLpG3/xCm5y4dTqSUT1PivJKbhcXCK2Uq4hUa4hBFG3TP7QXKvZ+gXySrobOVkXCdSUl1FvH18KfG7z5co0MUEagUMf7/ZMIwKFFlQnUaE3FNAe39f9JMg7VD7f0CHBqbX8iFIXf9JSNyUvAxfL33bxcszr9pc63rrQjjDQ+qJJ5MoiB1DmSOt2h2RIQA7OKTj5p58nkCpUX3f/W3j646o31y9/kjAA7LHobZM2h9P14nn8JUHKNXlN+44fJdjO5lXyLl48GrdGlS/IhuisIMsGyHGjMLWcEYAu6tCsqODTRQIahNpNVLKMjy4HLabIP1sZYpumRsMQNKJzioEbrmIyouCZRJa8XlsKrI4mn5giUh7SbyT5aGWjsiCllFQ+L4E+/lmP62DGWWogpsQ8JW4zLZntM2fJBkM2ezofYLT/ucyTFveDI/iCA0LRT/iLEeKmRro59C4nU7QDKbKeuAncrnzMr25cLm090HPGasx9A9Y3Fpf6OO6JYVPQy+dWAal+YdkF832+YM5UZU7fet+5AitYTyWOaDOJkH9hcSsLwGw1EEzeHIokGyt3oyBfdFu49cxJ4wM/l6ZkHJP/q5IT87wj+R8oGUhDFnDapV/kF5jdluKq5ESe3ZY13h8zK8Sa6h50OhoqYmPvW/hGjy++dwBq4gZxI8sBwKSZT0FEx2k3QD3f//ayzAbu8qv8FTlHUYAfan6R8Li07+2DMg/imQ//Wev02+Ht4n74lOvCLE54ba8OSc9VBUVGZVYIqFkUW85w1oDSBd7AD6v7WVVtb9BAoDfwip2cEC6/bQ4BRnX/rqhA/S7MyMbnTifddtIYxw+ei+/SQgbLYTmonqLTj3Vp+WT3J6sD1fVuyO8PLjd/d1mRUYyn4ptWFn2aP4ZouL3HHH20y7dOUF3eSsiOmDjp3fasgk7PUvb/kiLQYNCX8YQ8oDq7dw+0RSeKslX0nl4rjO1/nZiW+bhI7SsZ+7f05itcY1fSdC4bwbnr3ZytFRPBaxkvavOvEWpUxVJB3eEa016QQGnIkkwUy9+7tBSQFo1AynSsN/nwrBjUAUt4kO0cPOKoBDkeEn+ZxFxyctGIQMPaCz0QebsdI37f5wd/fQRM+RG7R6r8BzVSs4KoSTPUrdWMYWoZ/yy0tuXW7DYah8f1KECgXBvFKD9Q3GlVK3u16HtklKPRJ/HB151CTwII7rn2H2rm5dBlVFxktNVIKQx+Hd5K6bUBW/WgrFA6qSky7+UvKp9fJLMZyinl8XC5dA78gd3j2UJZOSSnjE+3JwdtYDCLDPL6TnOHrbREU73+8Uro8rfn8ILPIyMNPFITYTu4h97z8EaKCCc8toaWu6JbsC7d/ysACQmV9GHrVfiFJTUUvJLpZ/pmg3ZUGL2gce2rMeHCDBtNg4AyF2FasUqUzAlMAejQA5Jc+e3BXb6EQPuLPlxrhsUMMAcowqrF6kmF40jbsBzQLuw84lqWA3pv9bfGj+4Q85Ys0XBrJXK6ZyMmsTzCj7iWsVa8RXCPWGqJzxgh25xgLFGQVKQiHQCQhdrXk5jwJr/3mHjqLbdzC45tVNasDnFgxgvvSEb66EcWZm6l10jSP/DBjAXjDB0zSCQg67BeyQl9AEqoP2trKEThA7xCKOziHYQqOUrkqYM2z/709GrszdJ35qwpAxs0a0/+2NnI7ydxbdfSerk4J7N5W5+aZouvUT2GvcTxZyh5N8gbaCdcQFc/UtoZnBAMBOXa2VzqzvhreLLiSpgSx3crxFPnugWNnxRsemmwWP/fKk5YrQayXYwwc0vCRrGZwDkFFVmYELw8nUTQLNodtTWguHmXkY3nyqjirxYuJrLR7e4jixu9PFlfH1oLO2kkfpJiZxNSbB71jIMCA2z+5HKZExjKd2u1ncX6KyrQBRBvXd88yQlrCSepJzehq0xDVH65y4OJw2UD77fHxLi02+cFX55xqo/B1zflwGovJZzEqntsMyG7Xta/oxBjklFy2bEDz0QyjcNY/hrmmqhGzsKqctlf81boLYwdtlPm8BrJ4yAQp8tetBRoBhKHMmRb6MeD8FdcaEH2U8gKlI+5eX0mMmthmqfTehFOUz39SqVX4zkl8diz03OmyxqIDuh3rcEp+r3oPqzFr3WYxu0uJevi2M5XpFYEqlbgHA2ndiLhUctIgArgLEu+GiGB50+4SxGLQoXfTiF1Lmc9iVam+jmiiVPAx9oT7ad7v+PgopRebxd0fiP/D6LUZM5VyF69tTWe1uQOaYcZgxX948DAoz+3i5GbWz4eP+vG3FwnEppowczN+5Hs9bsDWycL7Q08Pmm+A8QdBuJNdw2+NJhvFdi8cRowp1aWqbm9muKLy8rFTEYW95CKl5/UTz6SyLV6U0vbu6S3lC3j2DuWfTgpCrT+KjbN1dm3RU1zQEGrVFRw2sSI3BJk2dg7RtkbsNq7qjEsUlUATDU8yHq8dD2yHuCuNkccw5M5dY7xhfQvyDZwzUn3NoPsbtn1B9bVOPkTNhGrCzTVYnIHgoKRH71c5wGd3A1FqNY+Fx5KMycKf0uvdjeHpZKECmO1XWj4dQyZiCrLcWE6Z4dxNlTA9dPSEGB4GzdFs8ONr+mTMjD5+jCdLPzl0IrZDcRQsrM7/ElHochjHV5Kk7yvgYo2h+el7/wujvAcoyWnQ8uGjg06DzCiYvdvYdkv3wt+y8+SMWws4TpBB8v2s4rdqNGxfBcjv7UlMmsV96PIwSVetpWXtBuG8EW6NnsYazDoJEJHDAPA6pXWc59fZaQGj8k7MjnRll577tCSpsB/c23vCPRWb21T8VQvdJoQMqpgRtpxBDqo7yUwJoDylcHKwRwFRtW/RBZKLU20QS1LMCbZwC9ucfoKqPgUA3i+zswyUTg0RuOoypsLV0AG2ntuckts9U7TVdgTFgw0/s2Km/dT5NelzjR3v11Abxe/ockxuAN/26PhNYO1OIX24imzXDasLrSnsEs9jV88UA0ih7RX44ojprs/IP94n/ATGDMVcDT7CcT5Hj9YqdikSpcV+E6OLcvpmfOATjCyG9FFeLgy0q0Z8UORGgeT8RVXvtubOYBbp4Me4k4G1C7Ij+0CMPMKRZRlvKKW9UXN8Jx1Wgfb4fJfafAzaPC/vOZDk1LYZyIT7eVyabZcupRAYSA8SZV3toylR0P5/PliNHwLy91/dAnCGfre/y5fD79t4GY6GD4bahT6bQA9pEbcpQW8uzMdisn7X6sI/Cj/NVjgahl9VOeHeA3KfZ3tt92fS2bR/mPhC1tNWohEJ8rsT8XWJ9m94Jjv/xpQ1hwPSiQ1dqWXnx29cYKAnrtpGHXPBNI9mgUcR7otKUKBHyKVhL2DtmU+RlMBAuVMN6tzAabG6MrMKQDgoQHjkurDYs6vywuQ4M3E24upP2WY+PbHn/2t6CdLiEFZ5x7EcY0w8yEwBXwFA4qqjs+7DE2iKm7XDlasC7Ntki426bPrYZdexUjzpNTKH/LFWGWsvHVCrg+RPLvd20nk6E5W90zYTycjoPNo1lqRa0eETJkemjbX6RbAPbYw9jHa3pRihLSCIFCDBkMiTaBfvQbYie+IxHuITiQjcBb95JR4Mc414Tlkny0o2PaoTrz6MJFlDW+pOQ05rIIij0nlujY4iLFZxI22TzibzbE5/LYGNmHBO2ha0hjkDTGCTBlIs5S2L4rfNxBRlqIEylrmmrSMrXh2iIp+iG3pkdgf37cu1r2SdUcHYTEPbWz3UX7ok9HCOBTBJg0SVivbW20xxs9Kz11xPWDY3ZfpjlOUWo/4/rgkrFHujXT4Vvgj4yWN4JKiVac4llDRgubsoCoBZC+70UTPLS/imUavqp5Oro3JVS6SFjlatUR/KKnHr/HOM5C9OdYI8nG/R8W+0jxHLvY8VuKhX1NxwSdC5rNCKgqBJyMdzkTfgxMLlIiNp5LjcPw2aSx71TfhZpZo0UqjzVlNwbV9nJcTMuFdqgC+5+mZb5RKkezx5k1+/IMF8lAgzv/9TXWJtJZsk/2QEbU/a896DD3rQCJxGAnLVgJRsoIexZAVmtJ0JodJooH5B7u5p+dwRx//JU5IVCsIG6c+bouiihrtYQiEQR9wm4KBT43Uau7A0m4dGY7RsYLKiqQB58K6UgEKTIhpG593GwPWkeD9BCNT7PqIj4ckZ4SxZoZYQR9svIfBUbf+aLRKyAuXgn99egDTX7riy5NPYiUuni0kHTjcmrIKG6ELsuWDH2thouHE6zeuarcmkveI9DET8r6NuqJrDsqcEJNfGpeZHxRjmR6c0ARKm0+880GNQ++NSV95dts2eqyTNkpfaTjbaPomSeVeekV9LmaKpM5CbwLgyYZdLwTNdCVjku9jH0efcjQafQmgBXf2890Nke4NzP0vsbB6mW2ajglEmeRtz0l0ku4g/IquSaYu3kr0q1UJb4u9ERzSI63PBy5gwqW/KhAw/XDWTGPHycnrxwtV6kvRM8vjTEPCk+t5lpU/Sf3mQ2PcYQzWHWr7/P2qoqF4VtlYABRT6xGN8UZz1gdNFzR5dqS950cKuCNRHjskW7mhE7A3w1UAXUpa55VCVvbS10/y+VGnX/Mcphd8GO45QBChV59koKNTRk+jw+HLMsCe4HxeHKhTFwsUtP+d9KoX/slYARAcxiU9U2xl67La9DMOh67pq/Du1N+0aJgO076iWQbaHEf2LjmIGOPvOGJGXjQ7M4FYb5McuY2wELYIJYjHL/1NRaJvakHpMH/PIwFmnZHWsGoZZlL2vH4js86FXdsVYsyZqd7IcTDfjeknv8k9JIrnu2DxclKwvHe8zNdhFlPRdgAMKW/pPPysKG6nYcaYnIQOiGksjmw+gxBiCN1hIJqZpSNlwfXrt4EFqvnEH7Cv6zWe9pcxwAKF6PzRf+T8Y1d+UfTA2OaLk1kqiTUB0qEI/4uVgrMXJwpYDc3cmlmtdLv+InWhrx6wYc4UF9cY8vDEoYQm0GGQJqm0iqbBzD987W0mckR/Y/NB+slZKUAUAy/qZ1ZnyjQe89vU1sbFcxkwqCvMMfc3ADdt5zdcLsWSMlYZiOwuZJr/HG576725GNdGYVWzuQPnWhv8KA4aI8mkNotecJ0PlTCTt+JCm1PiMFCi5SO8RmL0sx3t/+PxQzqomdNOtF+HAwK4U6qRji0zDYw4+sdvHIv7dkY+K255jjNx1gx8qoY4fapIvxNmqXAO2vSuNUSEZ/UxG5iit6WV/dWErj5ICMQ111jFGUZfY4NYfhwN7pgeeQ/h+h4Z41En31Khi+hnR/+x+94KxN/DmlhKjhOqjh10Sb8p16c+WMyurKmiBd/mXvuKIAO8XWIinYsPBE/8RD9LparRgwq1Yo8XR1/YtqGl52RCHAb8Q21Z4wnLxy5tXU8TwUzJevdMnHa7O1kerXOv1SeaAC6KYp4aaqJ0VEdrJKrBm/GJHVP1miWU9fWXJAoWxoenx8nAJBSHDA1g5MOYAPbvF1ocgmRtOAXIqDrWqvw6bgBgQZbBjOGiqYYdAV3kv8aj/En2y0CLdXP60/jHrx6dFDilXYyz4WkjZXn2y6ZpOyx9kznmHjGzFRW4uFlUw5HCfcJdDjyPZrnCxspQJfRJoH9tlxLO8oOA9FXFj/JB3ekV6X+9tFcfUtrNxs6ssDjf5beKYmL0MtbvBAXe8ET9FjB7WspM8LKple8pzePhydWXhbQSTDmPLElu44/X7wIggwQtn0W1hpecXhnNMUJ78kpapzqvRXIhhNLASWgam9HAUC0cRWmUX5BxOdfhnwwwEK7GIlGPve89GdCbKOvDqQOaQ4O6CXCZ8sfBBVDLLqgERbp56DzcCdHkdNrVuH6CFwi6o2A85gkJZwJ4sW2M/00jIAMHvoGV4Qg14untgzm698jKpgT0n8gnZhk+6BjpQuGdtLBNCYFswOzzpLeFPqpRgezjX+RRo6lDX3XM3qrTO3hPYivD6KUl7u+CeFRiaSgUES8UDMNDM1c4hOsi35tVK5ccAVcGnYbGRGomU+jicBxvlQUX1xDWgUho+qOo9iiTDEiqiB3DSzuXFJ6QcUhOphUiEl8U7mkywOe6W+S2IlZOkyktOnj5rWrDnaq+ODE/H17nabWerVlJNbbxj4s5OpXsHl7DUs8lu/bV3O/y4bdrLpm/PC1kJdk2JQowTH8AGKry0UUqvBlbE/PvAup9rHXhTifWdo3wz0icNCXQ993cg3G6lIwDQzI7BHt5+d1BVHlL+gHOtN9pFzyjkhMUAGOnVz4+imVwtoPzHeqCBitES7HZl8YB/wY6nnXbIiHzT+OqSc2onTPp3okldp/kQwR0c5LEXpIAITdlMy1m4wBv3cWnXikJJ6r7s5hKbsFkVa5Ol3R9MLib/yD64GMvIrO1BYF8BDgbn59lQjnHK4cFnzTffUaXWC5J7R/FcEnFqDE2Ex5lJMMt/dYrdozTygQEJQgYNnXGAGKnWb0pPYa80NA3ijgn3XkpStPQQ5cyuAev8Py/SH8+5UyNQcCBzu+u+1ezpKaNyyXqSFeTWVxbGTtTaCmps+0XZTpFLlyoONANYNv1tm/ZmmMSMDUSC8u5Sx4fiR/WkaQZs0Jn5Rotp2tE88JiRa328He0crozyakXb95uInnayiX1Qne3Kw4SMSwAw3nSShQo1tahdeSs5TLXhwlj5Bl9YGZ9MWNiMkgOXoq+qkQM8sgoKLFlksFwRsjLOQ2r7T4eR2qEctjaewnS7dwcPQzp93wL7ld/6d1EkZNAWrztr1CbauDP0P9AWj1rwc0badE2B+1V1ikQDqZGskpLMefSyq5NdWDtB+Wom2UmEtZrxxMl59kXMJTer6nFkMn7EGCFDNoUn7o3FX/u4VQMOsmn2pdwPg+UlVmtdVEwEWbJWN1xR4Jx8UalAmVthFQJHm2bcf+bWGs83DaR/qd0vzcWRpSiefeCNlW4UMoGXIduUJteYq8bYA4bpG1nEcsWlDiR8R0l+6/gIagy4Th1Rn6xDIrbDheBFl8jAHvGWkdwuIbx5K2CPd/LjNhKvgicI9jnU2T1wRVSKsSgLb9KNGtIF7+Q8YPcSkC6WJwLmrhDPjO3vTXbY6R4otsox+iTEny7nUF4g6+Y47zMWIvL1fu03UIySZcW0x5pee6wsTl5I7Asa2gGrME6R+iJxSA4OYbbrHaw7yLzez1YlIxn/90mgnY4Tl5M/Yj/8Qbp7qNZ/s2rYE+3A/L9tdfKDuSWq8J4uu7/6nVIRzPu0eJ9KC5sLAfTfTFBexB9Ng3O5uBwLaXL3DpJwfQh/HZN2dXZiiA5gk7oodU9VcUkfqFYT8v0bQDlGEolnabqQ/6Y8hGZ9Ptj8p31uL/ZXwjGfI+giTWZJ5uh7qcW9x0LDIxBewc0WFUmJUgTZhJwndtU9aonc/zJnzhC3cmN1uhRUT6LAWmLLOJtssWu6+eYAp/Yvs42xxusEdhr50+aGw1mla2aWml2Mk3lUCraMS2QoxZ00XGJ2bnXpucwwHbkTE0EsSa+5rmHc7+ZxAYYS7iMTICBZJK6vGhUG9epkLFlYcUJNQg9LDwtKBGtadypzA3ODt3byF2nXHrJMAo3h7sfUGiZ8fR1Wp6ieE0bfShSZYi9VTE3iG43aep7Ge8kigS7WbMLPxXkXEIe5cEJMFdXks5n41VVKi+2A65/lgwtMWyRvjqLsjj0+jGHwGcp2ymWSPVnPSIKch1peFQW4MSgyi+8vY6f3WssuaMmzMWRrU9d8iqnS324CwaunkFK74NpBYp1EZmcWWHjMp+5CcuvAx/o2T0/O6y1G5yc9+gLsVFbcdxCL0dXv1HQpuG8EJ/g+F1WKzXSxOF+Qn2ZKzukqH8ge2qqu+cLiZ75Pi6nZw7tI/ueU+6DS4yheItBmt8Pk6A++EQtkb863zNIXDxYi+YfIusqRu4Pi5tg/PbYFO5ZAmd/Aer1xMiHNfd6Scs3QNa8rqU4djQFWlG/nP88ziYjs5hYfktjDT6HU73mLRB0r6GPvDEp7vwx12WJiBZ3do/yFtZusZHLCRZYCVjQNfxIg20Jjdz9oQ1jmaNxCUTCUoTCvWcJctMY4CdK0W3BAiRFrpfNMa8Vlv8SxR6fvLO8B6f4dqq6CklvuGvtSNNlDSnrtUdULVoZyYraMdOsBH8oOTvfRqaQDJEvKm3k/uedyt+A2tVAar8/qpafo/o07z8Bt7dwzY38jJhLqvcZEOroVw4gUpD70oF6TMGmlJqgwERpstSo6HOZz8x8djEdq2OtP7L4tJDPzzaEoVf9PLk2QLGdg878iCPlLERtoEDuJNMSh3UFcvXSiaX6yty8G+5WwsjjYikX50xeuGLeiLgtFOw4YB2dbTNGlIW7SQRScY1ULsUSFi7OYgRboUaXABI+GjEk13/IqrbfI/WYqpoonE9MQOKwqnzpRKkBQ5LaMLy+B0F6liuZaXP6TTQAUi6GCLOtWdN/Q3rmyeGJHKDEUWrhDwpMwRO1Jguy9tZTarB+XtrUvdvILnUchwmbDjfTR7tdwn/jKl2eQ1nadF5l/W2TJ2wIJD8XHxR9K4mRgribq2DlTXX/qH0ulDGmOVBSrqhQW5X2Xr5x3GJuERcfkQ7OsonfmAycYHUu19DESiWmdkpRiBWNhVGGgADIxzF2Yxx0eXhRXBb9HZ54XTPP4u6s7ezQNwajaJw8oUlXGGLP2ujizg+gCV9fgeLbaVLwZ/42FQTjiLRyBEdtRUjlhADgg84hhddk+kWWG3iwb787PASy5ImjZPeWqhhr4dxmM9oUe+NVDDDLL+sxEs6Zl5XnclpAYHfU5BSxJh6lBA4WXw0INkMBYo7Kww1Ipyutac6cm64YUbDNF13ZTOQIfrOGbf5IdwZJUpfpNo+hT2Gi64l2dLxlUc+0KKOMdf2PB3bLFz16e3xkk2fCswRiW+7FColHeiyRCXEQmT2zSMp+koQrWY8wq0QFdP+VIpA5dFVdVzj+0DVpMu4cLfwCTkNVskOeqGo8Bz5BwF2lInPa6kKlj8LzSNbPV/ssK6ZnPDXvRRjLeeq1d4rXLy9nEpmtEak6HPivCvmoEeVbS4BWuOokuU2bya07NLhx4VgsHVZlNqrREN0WBJAYarb4PDv+sonY9vJKTXQFhUbo4emIW6sJlkljmc0aCMTP8p1qjphkz+lyjUMH2Bp+oNnS/cJ0Ny9dNAGc4J9naJ0LLNkvkgwJU/9OvHA1nZU2/Ca7lhYbur4EMPd6+jXdDu8cCstW51BACwzthaqOR/HA3lL/bQ1mu9usllzRpCIOifHNcYNsz50n0mBi8etCsALdg8+Qwg/DScfCEyVwUzB+iinpz8Tu+2+qbJFHPXovbbjhI5SQtA4bj3unXfIhY4Yf+BgL1nN/0navajS1eegenKl7pipSSem/Elam5pL+u7dRWCn3oRdp4S7pwE6B7ZnYb57I8qxf8J6lCLCjX01YzZkmdPsKCdVXPqosU5jdAZYPQFR/fxgj2MHZoyfcmFlh3eJEq3vQ0uns++5nSoxdBOTWZ7U8OVVSjNbQdbAlTPBzS+ipYJ0onHczlz0ZLT1g1E8DgkpiaKYQKPJNRFrby7EnvfFnV22yT1/Q/KwGMaiqg9+DQGkYTmmy2qTZwIeRo2+UzZ4JToREh+piuEZSMug71C1Qdlf6XqJflHUGuH19aF5llsKlHtyUx2+zZCbwtuS52K5Iai8QBcctszEdVl4aMM1ki91lHVr77rFza+F9IIw2AoXEfnTwufSvJeqsP5gr7lfENKlwtoW3G2RsybWCz60fUyELBGADa4Bmlf6uWE0iZ4L3BTyYeyzpPu8LnksfbF3X/1Y5B1/p2Vk99gAmDparAx3fJtPws6sPyChiRa4ASiBhmJwwdCk9w8Loha8GCZ8uqn2io8ufm/JBme+ZiLOmzPfqPuVvy0h/Rna5jbsAL+QmT7MXYhRPMdWhwADdm2Evf+w7KlU6kJ3cSZ+FcN0ON+v43ZDS5XgI0qt0yx2NWyWi2+kQE6Uuilwsxhjv6MfixxWzuRt0o/5tjKupXPJ6po2L7Zk/WTxqUsa7urRoil1Zmm5be847AH4/+h8X7wftjw9tw+twUT3H3CVqk594zwZnHC98GL8hbMEltDU/c19yNGBclcemJEukzWmqsiPML2B9inZEXop+OYBnTUzp39UEyPbKgDPUwWiSKFIuKXOSJeO0fBi4HBN22JKpEIU8FLgkg3M5dqeKkIwq+iHVI2VfNQpYG3WSDr9v2ij4okZ/tmYiGc/dAedxHBnEDSaNPaTxw0NxTfNCfWa57M0fRfq9GPKAnMBpa9MCMyn+RHMaINRDY22jzvdHXw9PfzwxiVc5jtmJYvtthClVlx+TCXsJ9qkmWvc4g/CJ7S/S6sicqRbLeB8l+s2ylyvwNT6m0ScUH3mCQoE7xgKWa+snSR+lllgTiX7+pq86ZbQpB+xKY8Tb6SgeXP5F05GlUYMlP0kyajoMEc41cCIu9prSN/VNCRL8K6iIlbhrz7N03vNX3h+rrKK4sFarAdxG+Q8Ev4whNLhyFiw9oUsu8nUGmzJIeQawIzK8YZmLYwIjvqgH6IdKyb9eYlJOmr7g1uGKs9oftX/qHrMnCRVzHACm/99M4wd3bXaaPZmtwWTyYw+rswzWObmF7yE6gJn9F7npH2wu7yBWX4IuEeN8RNs2oRn/bsrl3Aujb1o9pGZW6yA3sSQIgZ1er+vfw3G4Gg5X4yMvx+Pf2ODT54wLBcUlwYpwmqNkoe+pBliz5/kFAegJxJZsZHRAhhiksc34ymQMROe19w45EgtHdUszioeKgJfH4J0QZIgxO3ODGN/6PZoD8iPohZcWW8yDy3bU1Ny69DSt/Ml0VdJkAFt++Z2mp+UgL/2mUci3ZlhRTRJagtNTE6aj3450vkg0aMJYUdQV+L5Uw7S0eb24SX+VRvhzv/lxng80LeGzAjY5emwugUwMJO5BqyODf09Yelu89d/6pFSNIvO5YACW7mvgwAeDCcp87vRIbZBz/B4hnsd4OOVbzmt+/zZURpAqWd8nuUYS/9vahU4rCXyTbJsjGBKZek1MKpPZOaJAMaR8mlVycINHPGehvTl02kgPPymqK0UYoCd1EQKtvvO+3CmvS6orqT86Z/BsuSZry8UDDTEdexVERTiaGdWXBF6+0duQhzq/uvJcZ+qXQBOYrPlbD8EK0mm5L6dYLTlebocSRPAMS1b1FNCneR1xQUVo+O+4XbsDJbKylTsCmxxcvX4cpA5J3eKIzt+yBZZw696ts0CVX6dghjB2HmtROtQW1mmPpqIc40/S1cdMvnvG8CBr83O+QY0QE/pHzhugUdG1drKu7VWYNVHqtpTIeMm1ak5GbS+Hwma+kFf58w1MGm+7XsIq60Kx7AYC3mAcH/44vOgjlcK/wbpRpZWUof3xKUU9CqVrOvsQ/67TfxKVGHJaDinBxlTtRndSA71UyBhSrWZXdXhfpJ2W6ZtjDhjICLRbtirO7gpog0bgZffee49X5R/dJTAUGfcCS+hTIS7CurlJQqHoKgeCf/DQE0BauduxVVdUsTzqgRF9yFsrX9BGMewYWQmU6ImM0Ly8Z60HOziT58ntPH55S1+N/YXPs5HA9aJtzRZv97FoJpgnRvYmjvx1tM5MGuiEhgylG5qFe34/vzEgpbv1TZGp9Ik9H3F6KVYTmedWVBdxYRb+I0vQm9fH0ANN2bcxycMOIkabDE1e5u4ARrImhFb9Pf5O/kSKLpjbkV6hBohL4pDuZsYT5V686eFFG9A8Qq0HXCz8RSdedK/ngXmCA1mZys3HIPHmqJpkieAigJxBMADL8lS/s5L0pIXw/noSL70dtHr4WRILBJnmLeUOmV+UF5knj25LGaflUmuLKpZpqW7R2vQFKRT6wsIcsqSniUg5M90GK76SETVEnZUeIhO/FO3ujqruoSHiUYAKs+xNmp4XoZqLnzPwYl19R1xqx00k5zPJUHfQB3+ott4f3kirN8Kmx/khk3IrGwzJr5Kv9nY+xQS204tN0kPpSqEtVT9RTCyDEhqDjLJxFZ/VDCcdjItI8d7GMbG4cv0N2CGfFl+2GKurUKa6ePD6ermau13WI8/iipzKleXAp/jqNIKe2nMH6WbneeBrvSxsXGeK7dN98KT4Xh/+z7I2uW2G842LDUfbB8IznwjnMXYOM1aKMTU2kxO0T6AWvEJgSXz+JhhcaBZmdAJ5hhwjdf7afIGhgzEamLvRM4WxQqNTNRSdHSykjR1IK1oHIEYHaCWKduDqOLzmugJLC+YMqq1Cd/kHVUY5et/4/qguaFEPWBbqRf5shmmQplzjXS+0NRX4fz1YJvysZ9uh0opOO5J7Z+8pfhpy3qJaPfWi+xSUOwH8iZxQ+5X6PoIBS2wpSCCc2fUIPQrWEHf7w1cBoDSWsYsVq4RDhM+Ja0PXn5/aXbCh1dhzUTJnPK1fBahS4P4w6cGI5tkHx5YSvdBKkKPwVSnxuc6eshgMHpnemYYFzRnQhJbIhJFvVWbzY91TEVQHNhLFg2Q9BbhJKxZdXcNBtUCJ5CRoV9r7t0dMUPM279KQ8RuoScH+tEf6Zz8rwT+GQPUB4Ldhs00WKPJh3kg2yMeMZAIghgzQIZb/jKHBpPiHKAIOg6suGSo7CvlXrxxeAHx4vA6ekFUWPIWDudTYDaN0NFDdbvoPqoHSXbKDbAryQa0FecyX5bT7DbYtpd0Az3FCb0nXum9NOepcY/MO1QVY+WTFENgAe1KBRgVFXuBVaVv5ezngFJ8TH0ZvOFJ7nppTSVYWn9douAlbP2KZSq/eh1mJ4OT/CsuzltddGMHjVA5e3fG9csSGvii/I6UyVGnLPZmuM1qjO4Iun5gL0sJKXv2G8tSpG8u/9GZQcugjvlHXHOtkrBOqrTwnP7LbWWUCS7HUJLLA+rTp86b93Os5LHeBKb1tANJNRBVlt/Mqu0SNN2zxRdWuZOO4nDKhYB5xCwxwVUjaZyfIPKP26d/Aziq1BNNTrL/1v5cowHpfUcPtmbNrUnvVTyaTrUFm4Xc+WvzJdRvsXPAHLxrKUKGN1vb7jUL7hO/peTAsBuMMwJo4qnA4dZQHwP2J1hlG3EuOqW11Be9gQpDNgI2oSNN1friACb/L+Wvro8QqLzMPgvZkvB6CkXscb8/W8xPngA+AE1WQjk8fWZTt+lEv7/EeYrx/A+s9v8xK7tRLg+HMpeWu5O535du/MfOh63fQ318r/idIPfgvz5aiyL3XrDB/jbSuxZ5tAp1bbHcj8YATf8a5M7F7MSOgsxrpn1iiSs7IV4UB/DrwoEulOCo2jJWjhLt2YOv1RywlZxcdr6yc+kgGY1JPGkhBkYyxvn1Rv93snnFc7O4wYAz/D5SV5n71GFtDbnAyvWhesJEynzELjct8hiXKwWvTcUWRWVIQfF4W64BTZcJNqaijmRz6k7dXtPLugXLFKMCKXWLr19cjUNjK1vge0PbZ3fCZQkY8IBHrAuVUuSJiNfbU9koofgRFGVuYqux7SOj1h4El2pjfvD6oU8vT9j9zl3ps3BVZrK/S6RVbD4lEUsRPjhHDOlD2QOfg0GfzcrTVkCG74mI8nOI6lkGwcfDwK27BD9/g5IuUWgqJiUfPNi8YP6BrC/M5NhHQfrO/lAnIMabJUIuI3G+hWDaTfDYU3VZ7PKxrSdIVsGRY4uXDlYQkIdd6KPseQ13ihhJ/Zp3QAfYiH/j8Dis2t1bgpH20jIuyAktxfE79qTHtcR2g6SyVyqDk9lXxCmP0n1gLRcQwBf0IZtnBU0lDQjTkrKLbOAvQJJ2kRSbemONBoe3KMD+EzxEQ2+DwdqAsEuJE9Bx4gOhl9RGkprACSZA0HJ+mk8wcaT+YSqwqp8+PIfXdmli12neF6Fl2piAV98w2/G1swPqY2N0HezPPIrDJrHFOd8LNXClCE3WAGiwxAppZWOM+rOpwStfHnLIMBAEqc2euT+gPdyDScjnj4BES9y3vrQtVSNTSEKJiDPJqbuNpobhnBJ+XQsGOUUbnKQJW9YDQvkSCVGd4Syn6RlKtaZ0OmtbJOSasxk6f6h1X561th0Edb4rupkWCdFcoFTyd2psjlr6gg5wV1u5UppEl0fcP7ypaEc7AFAd6Act7bl/8GTbcV96QxLyjAM5O3Jsb3lkkYy7sVOph3xHL1M0osXcQ0w4ZpJ+p5HjnR/NAq8tKH7mTIkczj/3DuWEt4khO2tKNLWET4na4oohNxNAnoVop7kOnwmNiP2W1ajnPzhNPVhSv7/kfDAZ4emJC0ERvNHABYJm0CMDImgtim1Wajf7j/UX7kgMSui9H9trwh8u67KeeiOHjOWH9BGPCP2zL4x92FYP6aqJdjf7Lt9xIiZ2d2UiAd8R30hpjIreo5u1V3zwY1jZ+SNtQJOLncWERFy/t2RE2FaR1je/qKQ5iPozUuZ4DMDT5ENf98GxWx05aSzmBGu815Eztufae1hP8j6n7tQhj/zGCGH4m+nBexmNITPXi1QTBerO0Qx+77rJtZxc/flmSPgAuoKVrPsixRVEewg4is7gWTRqyqB0tnj0wQCNEyuN5M4k9RD6cLYS83zlLGlwFj2Mn+uEa9ZjQA76AH3XuOeZwW5gIRdSLdIBhiSlLNdMVUcYryFnxow6+KNqBfUHXbDVF/WV+DO5/yluoIpH/S9hxCTainjSF1XYlNSSKaAnz6Lv8HBKF20ke10gBzSdhtN5bTTQK5W9YKJ1DgmZ25MLxpQGFUu1WwgJS8qDwKRvL9mEqySBnFRdDeypQbTIyFUWOHh3v3maYHbk3ZkgQYg99wBouFTOLuOnTpandLFDuuLWWzooFrMv7HL7YpqP0+ruWXlgz1XxIlqMxvH39NtU56wi+z0Pwi6YdAZExbVdtIvMZ1KUrMdRRqiydfs3ArG0+4P56uWigBWNKFv6ipKPxbwQ+1F9IXxJ7N9jOub48CRdnXTTh4DT1jhWlxTYk/dV0fbsnzvdUP+WQ96V9DVpAouor7sz5zRq/SvTdJrmz3Pqe7glsqyBMyvQ9aFPFfpncuGgiCJJMNoMljTNNiBbIAGrAARfWbPKpUUhEjfhV1xD4hck8WSPFyAKlkU6QBXVfut+R2UBeGnmduVoA4YqJP9dtrvsPh7SAiNuza6alU2DBbP/DnYgX2o93/1gOO9zIfNKrQ3DYfm6RRZLmxfuhlLiPvxRzqQ1KbgrYpaihbJTQij5WhMDtN9SdM2ydszkY0l+lm6sxyGHM4BLfuwewjGl/UmbLy/i3NBDz4yVXYVcu5rW2cpBtlkloIE1mT/s9Zv+zpsZcV9uMplNr3Dh9GhFJLV6UA5W9LCKKamcQkh/zlP5vMeKMGWXf3YA9wFrfZx5svDIMcISHBdWUn3fESWaxsSQx7XWlY3ptDtw0Ng5wQC8lyE4b4OkiqO1kI3e8CQDv0NU40CygHVA1Gb1S4zgXECtb0QsxjPSA6xZ0IDzVceifIeK64f2QK5g5jf3X+Xxl3oVps+EmTSaRymLK3ZCp7wahfSqLxsgbRl9pdhU9r/a23rt35gzH9tHi9ihS48oEUGrYAgxtLHGwOnJR0W6JA9u4zL/9Uu8GrAp8s5IYNb3PCFGkJuhUKvkNt+6/N3XqhitAvonaVnQG2Z0Fpey/9+OJO2UkAtG4l7Q1syiPaEXHExF5ftvV1C+o7eSjs+Gn8yK7ppy0GdifQyshT8FcLqY3cXAJduMdCUsoGzjHjCRPuVrhb9ZNEzb179OxqS+tEkAvDuOjvMwMXqxucjVw6BKFIVY/GxX0mFXOaI4TT7UuMsyG69H7AdEy/jW5Ie7dK96FD+nPPFvVYMDRfVvAg4z7h7jDeSyP3s/EFox1/XSe12VxVjiVUqx5zpD3BJXCSdoh7OVDGxyjStFxc8wsd9Tr71usrjbbL6ml7dKJCvrg6J6jPMFFRdzHOOBxL/tFY1Gp2a9eu5oJYTSpSPH/qn93ynuG2W6GtTkCrKlz8kzVxJ1ZIS/RfnLJ3UMsDoaFZAEm3BWk3WEqV1OPOIVk4+PoqR6KrPlPTuMVK7pNvoe/aOrUI79XKtbuygL3AEqF+0kRuR/0vjyfbAblFusjd8Fh3AUUlltrJsT4gZhV8zGTKjByAKLjRhIoldVYfYXRF0y2qQGOKIFgtxJ0iAwGvHLpRi/dqG4ENgeCRdatQJHil8heW9HqiGGvJhpGqV0/imWtTozTDrzj1Y3hX8YFzdQNgGylcKLcVvgGkeGnK02wDKY5beSBH5H/f6fzqhcbweQY7tFalkWIa9NIqAJhYCoWbYdI1WuNridM9uuvGyINrmy/AwrfX/KZeXxaGUAq7/uVRO2xRRtfS6m+Oz9EMOwrfRkvzaGnC55tSHVqudHLZytaWMFffvKUX/xcmlHAm2m1duAKMaR4egzZMs6jdOX5Jyd9AzrHUMVnTXMhqOA30ifOM2/YxV/JA/lLJ0oxuA2DmOnarOlYnOqWZ8IlqfSqYXHjYTfFQ3QDxHbnQl9591pbWWdKlfLQ/TLvxAcrIHrWIWZ9ZMsKFYXkv91DLH7ic444SuGCIR2/14ouiKsqy5phc7QNX5QR6m27s14eqE9dNtETzq/jvHAj2oFxFc3gLvAYYVip+F0Um/CRAIKvG6kzKUFCm8bCtpni8ZjCwO6pxNKnwsezCGjArAK6p7lX4uuoV7UP9TqUz/Ncu2+5ntWCtC2MHuQkcMzIgi9qyTB42CapVDhejjJ29TtdjaQ/jLCY1clYghZY4z2jO+6ugC902OTwwMPsa6ndE6ZIMNjNhI3DNGoGm2zhYPVmhU8LnSE0mBpt4DhYxobGg6YUodfFmjQX4shs29Koa1jER8loGhwBJiHelX7DOo1My5IYWCyTqU0Q6kRigweTclO5yWW8bWXSF0uQytnM4taF5mR/5qOJ2z2F9pCGzMr5x8eFWB15F7cnxRZfKURos3kUdkYs0qEInkUo5hZ/5LQXjFosmKI2iZR06X1cknF3nMjiS5yaUDXdFw7wGqoMDIaM5yFX9EhtZ08eOl7daCDu3WNjjGqgOfy1OhDZJrFNzbo2+slPrClGlkYe7BcmS2f0C16GYLmnAIJaz8U5usME3wOgVk0fFUr2bWUY1Pd4IAxMh1gEvZ4DVt3OJOE1ouydwA1UH9r7oozJl4tVa7WsWrdv1ZA16GEASOEjjZJbTEYdirHrg8vjLeh6M8c0AefXl7AFNtuqEvVDJ6IEOGuv7VrnmUo7U+LJQDnYOanH33O93qEnSEBeLVXnUW1cRgZZG5xCmpItm0yiEcwU7H407MZJGHSycqJRYv3f3DoWOt+qir6NsLi8FL6hQcX6/uLviqR1ONzoTMs40nLO3OVwbV05N2AeNi5JsWSVhdZV5G9y/h2mPwAspq6CPMKG3QnqwclB3W8MfFGh2Z7C8AeaIu+H57QZtW/hq1QKm2fxdb7VEKnf4M8MRqipSuLwci3BFPEi0HrZpVW0DsLRp1cdctEK+iscgTAbkXLxj9k0xGTB6CsJSXd+nXPkW5X7LPfrA8mdP/nRQ6jA5rDFiBXZlvESWO6KjBNtvUFtkRifYQFUpDnDUoEg28E/18xz5ydyhLAJuKzKQawlOkmwXOOIjDOlQF0cnlq2tgBY3ZydNO5g/TxTYuALk3e74PHiR2wuyR8ljGe5okVVp9w3rhsNT2WrikErLCTAk3w1Kk0+8ctmhISBWpJ0vKyZGMWRLcBotKw/EjxwiDOefDOz0lNzboNznppDxDwAIOlDGUpiNWeVOfNbxo5aS5HQ2x1jh6iFXFsb61eGiA7iPBJ5AbbGTsPmdNsxJQXZVWnIId0GhOk+hcGkjhec73Zp0s+Gj3EkMeV3Wj3dmKBrz9gEHAb3FkkYlSXtjilvmwuH2tb3/o9QE4sZF/Iod9fn5YxkV+raZuZqUDhgxMzdIJM2ECxgRi+QJmOXo1mZmfu+Br8Kxl/jnQiJF4x2GBGH8+zB0YLYKIRCDED4C2kPUge/+jzAYRSPoVK2+OfqVcWPxjnOfsXOGhPSOyhasZE0n3XCO9Eiyuihj21u722Gw4qcoIRV+TmAUUOfprwV2zvIHeha1QEeMCY44SuPWdNIo3la5xAmohBKQ8R82tPE6n16niid6YWJaf6ebK4ao91sD6rhHCzTtuZjiRJJOCjeM5EM2AztWS8YAQnTifE+p/3DWnD6l39GI/QrTvYy29Y0RGXwH3xVr6WDtg0kmDE4sRWXKSWk1sa4BcDMshJF8nA6UwMCbd34wBIvysfLjeBaUGYDaDlMznldxC+2Wk+ALD1Nc0oV5W3f7L8Yu+jc5lQ6aBmGlJprdEMbZNQeH50a3chLFN8qUk0slUmf3pPlii1kSpz1A/BlqjrEq3lsChJqUXRahiXsnFkxfhhqdRktV5Ti7P5Mt5udk6geOrwEmNTLnSy+i4vYDq2aB/WQ7ZOY3D8X+o0izHTJQwbvOHEdv6gpAViZFxZEmsnaS1YeSxIPfsot4AKHAw7HmfE98ZLGKDvty7w8xFIDGFzOLLXYGRj139sTuZStzjyVqOle0v6uXakMzvpgilBycVZZU0mcQH956g1vULHGrtLEvzRIUSeG0z9WhPDYqEUTqDvcCT147/1wRtnE1/iFQ+fUf163iQLwYjfl91OtL9JDYiKNRLuublqSmD0tfXAWZZFSG30jguPi2dAeVYvlQ7jgsuCN5WkFDeGD2OexwepSaHyd7QdZ2YOALLeJD1LIaD8sIQ+O0sKqSBk7rfJBPDOO4Vc+y2I9MqrUurXjG7bp5eiq2S0UNUgTohvav5x7kZN6hPuvLiV5HYO1LE2YYumNracoLVlJqyOqJiyZjnIx569tZrHIkOfGQ/mczFVsLjIgUtCTwHXrnFdkEf4507m0DSLwod/OsKWlVomLabEbdsCCB9W66g3C6bCcWjAr1O2rFXDJO4I6xUQQ8vKeGfY3ouHMa8okU8rbzSTS0IZMM/PidTKkMH9dNKhBOJJEkJv8PtaFEbq5qaJNi+GaKYqpnZlvoL9XVy8h5Zw1Evjsb2WO4tcUf1Z79ivPW9jURO0f5vb0OSmo1xXFyRrorF8SQ3oR9YEj8g07X2v0Trcoamu6Du6SeL1BOOl2CNEWCMuK4Ab2Wqh31rk6YZFzEcaOcpSxViA/0PdjBE9Qs20CTOqYE7dA5VN7P9ZJQZAiWKhKEo3DaFG68KyM91IQgWPZ7MCyj4+VU14nTaLHHLF1XN/tUq+FSw4/KzLRRp9hbEKke6u8tkrkSUMF6fru6Em/Rsv4tEq4at0uZGs3EEQ4EAnIbsNVcAPNvD/+TQQF4eSmIc1Eq5hGkfm00KBDSYA8JIBDKoIuEvaGuHFLbqCh+mqDZQJ/lNdsu5oeuZR25bXF4js3OQfkdNTdMQ24uWib69RQtxgg7Zhp/x3ohmcygitt3tfj+u22yppwLYDC8T//RzIB7MEw44+XesorSptTyHXqF5mAH6uS9u88ODT3xmwllirL0V0zKGtyyqFRmGL2kS5qt1NTmjj0TRTNrxEjVAGFHT1l2m1UGNKfUvK0AZkA2hKGc3lbJD9F50UyqccQYEbm7TAXseXunUUthY4wiYfWe7Xyd0hZ8HeTo+M3iXAlFdeOOiutcoKsejL78Hj6cMqW2f4vchmrO515RqXWPtEnBkkcPL/C5Xwv38pW7vCIb1tzlK4PliO8Kj0hQvuWLKEXSSSXfBGaJNXk5E1jqPZQJdcndu6VfDSORWrgoi2wTAZj4YP5WrUgC+qfolaEPQwy502KBZP8qH/lOf3J9Bo2Ab7MSqFcvF1qUkwOkduxLISJMhFeHdqya0k3CYEkXfOi39DfQNn0F60q/L8LPnr1T2vQ6xePYHhTC+HHTPavyefv5kU7nyD8V8NqKpYQtG8sAsW4AiW9u8kWobR9nnHxhSQUtB8pd1A8dyf6lxJpNzXO1ui0/LupbwiAZ4GGSsz4dzTewkDN8wTc5QMtb/5+9oPtsC0XHzh2EmlqgWNxCUmwnVDugCZtO9cYExQmvrEhjup09ZoGTp8RFUqIa1xuiC+z1CTWdktll/4jzn7lFzOnE+sXVdPsVphhHkvcWhMf2Nmu9hpOKkRV7xD7Zf+ryEalYiwskPexPpVgpaaJ7uWV+dbSAm9hzSWx80frsYHaaELBjfF0HfDeioBKxiy7ADsIiE/0jv6rVdfRpkHRA6y/UlHg3MhFe9FaDfzEp+cfXbUnDp5cVNkWIzqaLfgTVymLc5QEmoavHmUGZ4Ti/mnHa8sKN/Xu/Zpa2ewFQvGcAsD+LC+PYAdlBZBD9LvNiTeoWNwMhGNJdbD+V9+YB2sscNmbHMEFiRKAEAJbHo1IyhBPol3gjTiXj+n4vCcIBCgU/LsQvoSKYy6CX5lbOeuVE2fLi4XsGu+lqEkqs+oAGW2AVDy7dVr5UMdoU9xiC1AT4hI96xizkbcHV1ofg3Alv85FlsCafVAismRAf0wh+dq1/lEchaawlkI285tfj+TcYUpMYydIJq9UnZYvC7VVRgzRHTZWev2f7X3ddHDUl11J9jq17Wy7yrZfv7DYWkSWMg3y6lMAqOy/kebIkW8CvHCXdxmRVWWRGy2wUJF53jI9CJ4U6Db6dgouGzu+TFk6CdT1qh6XauEgmNu6fzqtlIExeuFLHrohw9nRNXcDt19LE/KQHyPYMegQdmOH/HmDramyNxZdq9U0io51MJSWRhcDiR5ay9TF+yHkT2fW67A9YzBj598QNXmw0Fgo12unR9N6mpwOFLsOulkB10+9niBj8BTP6UzDzDMG1rQiKM/kDreMH1OknhPn5mVUjHsh1gjbG6AWfRItCXvEtlVGVt3AQ0UM4DxFB2K27d6e1N0PweyLFwLZnVdcMtoCRTCgkwxFc+ZzxLLHJeh0imAEWKjR2WxFD21VWw5XEug7IuALgmzzosQqcbc9N1j6dvk0LVBvLmXwRwrqZQzwMloMPuoEBBYWrjkGI0/uDI4D90dbBcdIVhMWasrd1zZTc9cakjW8XerSmwgLpVFUpp+SAIcaQCbf+IJvxNY3I1bzEyVMTZ3XHY1uW2/zPzsjcyNjdIXL4cCEnZLziN1cML1JXEU97DwixE8WB5VT/5O7wa921vpYKMrJTJVEi4o6YUkI9KgLDbYNmWLdPXopksj4KydFKCRAhvU11Q27RQOsCb4I/+dZ8fPJpVny26zYmA6QEb6KdZOuiMoDMpsMyHbUpeEVUF6PJD2DWeDrvwyhg0MGA1PbtE8GTMPlOYCZaANL/VG4QuKofdJreR4g2hoq6ZDp4WdWSjXvaaGnVUaP2EtgmCGfp/XbcM2dH5lA/gsiWru7UvUr6RlDNtqcEEZngHxMD/KEAV6L3CPOA0vruU6gRsWcyA36zfEmNrQk6fKp9AyUMePFzTUAfrEk/EuhIO98RST1KoV1277Z6RHeDAQRLj7Xh7XfOJHQFPe3SJffEY6PlRQw6KP/qALinEgeEBFRAAoA7NmCW2xk/gGFXYfUBcv4cTrLvEP0qG2M7QRrL93TaysCpMwegqD7NY7gxIo0KVCzGYFcDBmoDjEu63eASgIQ78Jr7Si9Il/iHQKOsrna77rC6mLGJqCIqD1msjmPmgJ4G6m5qxEjOb8D3+gSy3bhBAGB/CnSsAp69ionHiKNKBdooLhfWovvh8iHT/5lIocwxZ3cNtYandH+gd3T20yHG+I14dI1tSSZyXAmt8LWmkgS0SpPSKQNufBKrn7qCJ4iSi1W3V2DIkIK/0ElaTiD5bJgGbjU5evCvdV4hQufHtvth7WIEeU82YtDvUWx+Y/4LVr4CsF0HxvKwwyAhXLsaoYZYvL2jQ7yKNqdcqYPasWeIe5u004npCPnt6lHC4CKngnxnkcOHJvzul6XYgW7j5gE0wnLmwhY39Sz6IZ2Ol/3Z5AXcr2rjwZc4f/+PS5by2dz0IocBDru23aOLfu/pUwOeiHIn1YfmcXuZFceK+VBBakcdjir6B74GaP4kxd23jzipGNIInxHSCkIhxzPdie1sSnF7Pdf1BZKWvnyCC2HT7uNDXcPlRxcW2ow7mxo2m6CmydvTe8EPGPAgXKi/zbaiypQQAEcKJLwHPDuIuHEd4qV+h355Sh8SAlwJ76y3kEL2H8ZiLpXnFEUA/pGXUQeVWyjVBGQ2N9o62zkGmrX/to+unBVDoHXOiXrJydzUpMPgpGeJsZ3WmdbAR9tKM4kVkpa7mT2J6cbi4N6cL11DxSpZ9nqnyvKi3USzcoEb7cQ3dTDB/9IZsnbbn3K3YRxqDrmCIe4rgaddlSarRAjD9ZM4woFgQ4z++bhadJZq5HlYYkDsnowmfUAuPKyID1oDKURwfgq4n7GSLq6lMHkXGuLAeqocvT59YBjA+dS6CvpcxhvYTcW7Ybm8+pxPZNYI/NNyZArzQCH/CSwjIemz8xffyybQjweWZOtgKEzmDXycP7NWacJVlSyV63YLr2Al330Hqp40K6hEgKfE435uuuP1N9p5LQ9F+LDj6nVRiWqQ0vj4gOVMVGVzVeQgG99yZ+XbRo3oj7/pWxd5o6cTayH2bUmsLl+lxGBs1M/gPgcXLBTaq5qUPwOf6BWW1yL3vTnr7WkJtI2mzawhe7jLZSTYoVc0yooc6A2pFU8NoToDDL9QlPH8AGzC60fPFih7lL0t5/UlBnbUwb6R6uvYEl4VzGuJmDEtuPM/qpvzlQh0WHf4gHkYVpDgliQM/OrOFm5Gy++yVufZoSYpD3d+2JC6M7miLyHGVo7ToKm3SIh2ViTOFtuenc6ZGlzIYOdZL+TJstbNibQ7pwi6IJ1NlExeLAAta2j96jChXqwO2TUUeVhTiStWXU51QSu2RRGds2C44D2J7BSoEb5za9RBG2FILcd3bjQY/pCcBuUp/Gbb1hWG8RA8hq1AIA1ZkfekXskX1XM3T29fsyPB+yQI+juM9Sx/bORiIoRnHccRLCyr4QDIOgY3Seqv8QrVAZKFROqKX5ag8C/lqlUuXvlw++awbgVT/jEuW4iXonkGGEL1lmVA76Whzx02cXDTwAyshWHllIfpfbkzmaTocA8/Y1iJia2dVQz2JjjtsOWF0lNAOudm4s6aALA79gALdzIbTgCbpV/p3lXFO9xnxOid6MBI2xsN1y1JjxwL/MBn7y7hl3hkKTFTf3ZL4UvLZqzobCfMNkPmGrcRRm15jmH3l5ohMsIYTw2pEnm8WcTKTuxneDip1uAOshRSV5LUdwBnn9Sb6a2SeUmZo5p970AJUFVmr+tNCt3MAHrjNyMyoRNJK3D/ykfs1mJkdjouo2Wsu4Zd1nF1jn8xqk/4TF1Ko/28Wj/Bc1uNUbhCB+WtsSAJCGYdsBkjG2k1Fvqvuxdc3+F2uV94F8gkv8vm4Vt+sZ2F6gGzJsJd3Y7apuFFMi9jQM9AgVK5A34UytNszQR+QyubzwcN4wvmakFwwikBq6uFA56oMTcLq7CiZp4b1uRXHzo3VeOKxOHJdHtLsVfWk240veLexgLWNDDlamhz5TjYpKNSqDQxmKYQ2RtWKtLoTlUV5N7iZXpf6ljV3YCqA4l4csA2CdOQ7v7Agmgy6cQEUMmIITf5Ows76JxFuFufNziBtvtBmp4PvKUWT8XrzWQkxsEuKH7bnV8EAqHs+OjYHPWjRydcQ1cenqnLuVLQ9rShrk4dDdg8vHj+pHET8ajo7Fcr23uRd51d6cazDVUnE3N+PayGDBPZmb8eAd+d9pT4ddXwsc6G9jITKnZ219X9YGnAFRfk9+CSK0WikR/O4t+HBvdhQwHNXV10tr9vmKELQ0LaZQAthQa/tVCvYQTBLSqr12AKmiUtar5bCPI4FGKf/ZS+uskg+TwqzOnSZCm+rI1u5j3Of6htkls0wr/gAdnRCWgB+Iwlsx0GK62uVHPXRI9z2i5XdRicXA67qvengmoJf+BmHbgQUtbaHMKCqKZjb8fH/t3jOlYgYXwWF3zjyZKRVuewo2N82RKRdbim2uveh2G030qfiDK71z1T9Mwu/b8eh0SZBypH5WiuWJ7RYvRTcCUWGDZlJN2PYAjtIWntPg+JAx48WklC8+D0y7Ca05yyRteUtYxi8SLjjJO8L9jLx/8BkU9Y2BFjjQf+MjAh7doI7uiYOEjuwDKCGtCkp6sww62z7wzrR1VyVUIaCFCyzE0RSdp1SjThFNBsTrRVmXLE7RUH/vQFWRRU+fe8ImfR1sFKQDjnownsqsNkSDdSBaDzMH9YEDKkGMhDAd5GTbqPkZ7CnbkHPcl7BCVNBX8IZbLTgStXIKYTQKPRUPgIYOeZxq63HmgCPZ0oflimPyQoyx1tQ2AKHt6Tq50JH4QDa35Grg2HLRG4UEpgoMbPiy03px4kZQts0aP92PzuckGTHMZ9gttVyZPCYZEdpHmkZkCxy83KwuZNEtOa23mH+/5NDy2vLOr1ZcRA9EUW/HOswYPkHD2Bxq6P0SpsH/Unx8V6QM2bnoSHjIfsP+U7pxtQ5P52sgvG1/+TLZcR9F2XJIFi+1fL8ec+RiNr+wG7Gf4dLELNYOsARG7zGhMQET/bKCW9WAch0ry5WgMoRgqZwlmTgR0uRUsDyz9jtDqLwhFB3XZ8dxfFHbcqfaxZ4ZAhsaIFJ5ImG5TkLmixODq/Yug7m/tKObUhziGRyBpfs5h/5AgaYkUiXAJGb6uPCkcbaTcoheoFapqub3Vg08LQhuBS1EP4imfekQRJ+mo636E8nCSev2FJdPMU/yD0Dxa5IvSUmdcD2UQ7GOXIoxyC264VMrctvprqk84Nx+W6m/AHadxcSCQPYBzENdjNsC0Dnvt0vyx4n2CTiMQBMCrmn/o79HTpvH5gOKufMo/MTmj2pE+76yL2pY5YVVNkmjqPtc4f/ZpHWATzQO7UeAPwIQOF4St+hHLYnc0iotKvzK47QL31QTvG/TfXyec+22ofTV33ciyJjqyyhMyyWyPndly1MRX3GmaSft1YZMnxFNEzHspIo87sTnqIRcxKNlulPfbaQiU6CANc7sMwvhkqPPp5shHvvkYnVl9kJKww8VeUp4Ai6bHB+W2jQsF1NDRyKkdEtXUVPwF3SH8QYZNNYlz6D6877+Oej4e1BCpiXeBXdGlUBktPvMaib51OVFtDCfiGb1WYxKk5djz8IY1gc/ZyBPkuei1OJlfgKjHdov1g2vrhbTVoAYksl5JLxq/mu2yfKqmC8/k+ZWdZaS+ozStIQL6gAG5n3W1qV78ShWL3fsJmK9zQ7rmNlogvvG12Xe5pw1FZyQXjoVWPY1lh0REjKFRAckY0GCZ+oIXBcZy23yk/5/mCNMrD84H9j8wYIjxeJ/hA2TBIX39OudJ5JUnQmg9it8LiLdHG57CLY46irU6i3V4uu3uJY5XDPUWzvghCk81BdVSkclN/HtAvHFP5s2xWj/psdS9oU0k4mHo5QKSVNwQrcKK+Bz2/29n7BkasW6kk2gRniFcVylXn8bmPJzuAGxnKQElP9cRLVzbjp4n5P1dsHYIbtZYns1X3qh5ZI74p8rdIJpETI7SV+U0tIQifbDSCFfflGcj6ALz+qLwZyUoHTh67zr8BuZrDoM6ZetEi5xz/QegjzVe7NAMOzCwwvzL5CB89/YQK0DXsKcp3IAtUEmgPGKYITJxdSPcm1SCJf1SDSoDwBJqdJHypaQmy3Gc/hx5D4jH9T2f/Ag0c3ML5I+3TGSqR5mejhTe8jQQyAlQDKID+sRw/8Mpyi8fYzSpKLjfRDxjecybpIL0lcGriccCc8cOYwoDNJM5eUjJvsydNQpqs2sdqkGjMRcmLBIteKAI8K4VE4EDMhm5sd335H94RGRLyllbEV9nZIJkBAuQT60h8M0S8Le3eHPJDY88wmC7erpozFhwvF5qmndl3XUKPvO8QS5t34C2nl36bFvVfpKosCMUjGLKaamCaL/mfkQKF4sHvCKMAc/pAibR1mOFrJ6WZBNH9B6mmHnFZqh0MHWeiK4mMJ6jwYu9ak36hOXVhpngD94+Em16GC5vTlBuTH7v2YUNpd8QOQo7ncIDmjm1I51rbGP527s/sjeWYj3FeSuj0r3MybyNggJ6yGPZEw6/NvACF7GffGWSzSBmHevRR8ARr69ElnYvviFzfybtwCrEQmszU7jeo2tU76vRpVUTj2JQ5x8bc3/TTLi6eVpncUMWCKiz6nf3fvfhdIIEpJ5mXJQYA+azO6wbjrosDVOIQM0WVjH46ZFawWoWdf3cQLirIh+JjDdENAvo6EY9SkTN9zN8M3mdN5Z31d5ch/FO78X7diUpJbFclFDGu+otl6CNudBDZVbGbT7BWR9T/7ZZ+j13A8Fmy522bF7B2hJa3XmJ120feg/mp+iJxSdyXtdigERM3vLC4vNiszuTR+fD1RST8bcO7S8EjE5tZE3ZUmAeZkVeIyedzzB72yfLMHTVZ8kBD0/7iG74Nw2Z/jnI0m3hNK70zsbGKFoAtrf5TXp1r6Lswu91sKl3DeCuGA+FTxFaZv8MfiFYYxG7MBirDyvAlsPwbAzCrmMX/YzwvLHbHyg9Q0wE190iTIBgsObS5HP6zTBJp4jPDlhC5hVTlDejag21SgGb7P/8YXI/kENdrTRNwe5SYhzTbBp7X0EBH6iTOdJH/D9TMtbjxA28nygzmDZgczn1Ls3/s2goDHpMTGA0hIDYNAJ6bN2KPAO5/ojMAvT/D0qd85VG9lqBMvDL4ryZuGl0MW17lUCZM6Vu2YwokEp93h1OIBRNee0+S6S2Y6hAo5en8IoGGebRo+/uUFKUNshNTyzWJ7utZ2dY3N3oj48Jne/eD4VMkRu/pJDat2Vp88uPiADumK5rwv3QGGS5fHm31QyUoml727cKmGG6qR4yvBAlDRZnXN6lN+G2tonQtvQFTLMErRw1LATR8eSkoeKMjWszGDycCywDqMR9a2P4ZRj4+k8f0n1Z2NuzIuac6v8KnFEVORPzrGfQNuN+Vzf96+BkD9QDJ+kxH8TBg73bipE3KoHwNTAhWuA8c+ILohFptM9ZT4QzYA/ktwLtCnGZh7iXnp9LGuEx8BgtYialE0O4/ddqUcxy4eJ8oIQCnxzRKg7yvGwa788BCjJ4zLXMU9aO6xfhuOsqit22ZPDH64BTtb6+RHz6GFDeR4mSKSnQXWiXxQftI7e5JazMC0PbHbgmzP6Ziy8X/bAMbWVdmEGGUMIbpd+SzVMixeZfwthL3Rg0bHWjU5pkObknnEVLa3Ph3yIWr63VXq1tz740NHHYb+3YG1CXuVZ29LtG8cVYyVYbWJnuKlhOa2BODuGd/4MBx3C4fvVJ90ElA07DuTpxzgRCfxeQEbQQTM0hvZACM2OYhv//E78vGlXWPlUw5UN77Afwv2ISB0jlvF4dPcuqqh2ViULcBX40SYtC2cQOjG+uKgI+B62LIXT0/hTURiqiHhE0OWuQYef6x2gXWy75IuNRDZsyldpnhYvS7Iv0Nd85cOizcLSucns5Cozn8sbX+iCHnqOENrbg2EVKYngZAu+F4LRmmGLs62F7CJVg0fmgRnSXTHYc4AXOqadlaMsRLGxdkSJ/yLwZceDPc5KJVuzaevfUVAyg/dSRvyKYUTQhRn4E6EMp2yOsXBiY/sT9bjE061/1XjVgXSGEzytuYyydoAekHBV1nzRdtXWReWrpahEof0+hIcr9DGbhQmee488xYlOZK9F9PUifL8BeWXc9bYaBipyVK5GNsL/AFpWVI78+h6KfW9qxLYoHzB6thXVny3pRBO36b5E4zPnWGR1eFdp9FwBoqUlfcT56aUec32x99Z+GNahDFUX1GxofSoQW/q2nMkA8GbewAoGV9xM/0TufuJsmU74WYhyhK1ce7AzibTaaB+8yUPOL324eIb2rXGk5gha/GNILBVRTK36jrH1Y9hVmljqhXyHWArP5DDPKT7eB26l9VRP30Mm96/hWeFWnNEEt8CNsOpmb+nHz6h+sjwr2RDrCA0NKtHZWBkh2QDImHivOgBdWF1ekHIO+kowY6t2XcrmwDemoeHDZF54a0HXcNOl9fEPlxcOcjTu1khGdm9CwZlAyPIKMYmnU5mA5MtrlQnM9zd+GUinH+DxbVBai0CeZ1eGDP519sF6NjHhVKcO24GWg8JR7ZH+fKCAskA40ynVSuKfxbQboOwuOj2HgcDyARkIDBdKcFq6HJYZ8NECltaxPTtYXYUNmRmX3cokhc7Ls0Z9SvW3Sbf/MVunBoBUQz7mxDsBTN6ZsIYO9kD1hmmYm+Jm5MwKvRQZdCeTQY11eVqXgl5is2SKM4qUGG++KX8XarxlrRj4E63kMRI0nH3fIhbGvEtLZxtSP8mq9dikz3qc6Sju7gpbS6eoRPsPz36ZZQ8lDRO8gL9+12L/vfRoXllJCv2x79vs2jPr6H+NPqFNLVemr293ZMd9HMQTcNULbWv5IcY3u3I/kEH7U6uOhOWUoQo8rBlsS2CevEaQaqw3a8H5zTeK6E7RK9rRkY7XPvLkEh4I3qMxx8JOQRYkhtd0vv2W32z/QjHNrO8rN50YwvJKyvQUvFNbfo/Bp4BB7O211rhAQCXupAiomheg5JqnR3gmCTsv4O1Ro4+jP1Auf6PgszsKluRaErh5z+d3MjI4w39cF+MqobBXbNLSvETtUeJMgHlp8FLlAXFWyAfMl5I21xb7dm9wwWi7RVsV8c0KDMX4Ka2kAnfVXk5lVb2ak4tmpNP5d0LT2qutIp3qK8LUmv6dmPapuxR+11yu8K2r0+RdaSyCyYcKyCXDE87xIiB5g+gbmQD6UN1O5gt3z079rwrqPm6jxuV7XZTKBI5Djts0SMrcwlF7DmkmnrGZvkkKPP8l7ltzmcvOD6IVp+74nomCaU3zC0amCi5OGYkXIrYH/jT6sz6S0uGZ6JyeVzWTLXThYlg0W/0QnfRl1tu4VIJoN1wNzD80TK/94GGAzIvikpjo3VOY528+mpFIeYBnWqwiN11ckevKny1spjWPr040zgBObLhAWdLzApeSum2iViPHJJDjWVwDnW3ITQRri/flRuwdDg/4gwyyD9CvAOSyEbU4GxLxtzFLE/kqjuHpLuR62ABNuaeNSJi/HJQYmIRuLKGHA9z3IFQXVwrrLQKTkitn4bFZ21ic5Arcb6e0pSKXTNEJSH5r+9zSOKbW4X5bF80wuo/2l2FvQOiO3XzzaZs62CK693A8TgAE4uOT1abq5+3SkFCpnsAq4XXWxtFT4JZPvnTVgvp4jb0LgxwKdGA+pH5pppTxQ2sJGteIPrIfPFjGdNA1RG2jYBNasLLOt3XIdUNDBmANFqMzHGXBMhuDD/u47T37NyqShvDgboer/4zKiDra+aChYSGEfDIBh0dUr3HRpha+GnwGe1cuJmRUNODu0sz65+Gv+TSFAVh7GCAIR+sl7vufgQ3QiEhJ284WqnFctXIf6EWsVJ19qGgWqw4xoowygbBBL57hfRUSPOwpIgtp8MXoAR6kQdxqi+MabJxDvtFQOizmySH9QYEl+303JQOj9onmnuJTyQAXNDjMR3ZU0xHYmQC35ge4LPcggRhjFLky90THcVPW+t+8LWB1Guvxoanq/1cVpMqbOMoDAbmC9Tm3xJf1lZSVkvS1+Jy1l9yrAx/gX1YIRvigK5hmvXBdneO5oQyxlaGCnOc2AQfM686wAp5HCIjs2nL433Mev2aXcYLSUQmbEZrgqTSkoTgkPj/PsrjCARrHjy3H7HJZBWknlzhZs57Lg6QJYnqxtw5V2WT7CqBPHsr2ZxHye31Ro9ugQMUrjAiyavKUwPyT4r683mhqMyzHhNE2nPBUqZqlSwUa7Ouo8Rl43WmcBNuAHCcK//eqHbgENNTBJt4i17nymtY2bJ9j7A/R6E5V4WwM1fckc3FcbpP5bIpnxmb24FI/Fn2L1tS8ElAQEsZYZ97oECmavJO2MdlHI7ELyQfjBwFHMTg/WLXbzI+H4Qy7VlnSZPrvgXeGW9ZiW6Wk7K5p2K5ftkEQSz4yBNPMnNYgUzTeMFH7vpGNQHnDjNB3ROFXTrnG3YGWDZS6OfZSg4HWYJOHEoijnV/3vnMjk7xGNqhyxVkar4bZwVxJ6nsRub76H5y9UjQU1cNZjmljWH7dhAy90hRvAwrWniv4AHfeK7qY20RGPvrsWGzk70WUPdHn2qYbDhe1m8aNjmDPadmVxKrzpIfSpxkf402wf6XYhBrWfdch+V1FGlQ/DGOEoY9BwKVEO9hf9vqMBwXqeKpVhNHWuTd0zDzu1QLOTVu5EogYR7kqSiq6Pc9mJvswY/baiM6Nu8lWLWpvVz3+ErklZkT2X8/HiIWetugDDtlC49FON7J2I1ggTeF++BhhkQU8vSnM4AVajkea9l/OdiXU34YM4KXOEUxNga5Q/DfL6JDaoDFHJ3vmCGhJt4S7rL0ix9/Ph159y/u3bJkD2byRwnuGAmY+Np/7HNlgzqS5z886Q0F24iWbKXWbra2V/s5y3JN1HhzLllc2l4wIQdqHEiPbNcYWyoMD+Yt6ixAPJbQQb3gN52UFLEopqc4m+6hpHihu7zR5V+cbjyug1Zq9FQTeSCfniv/jgllQw97zNcKCBDb2PZYGXwDUSnVhsGAtVyxxPRcjLOr05YrhWFuE8W+AgqOdqOVRDfBF3UwKfOWYprxQcvpbky92wGaV3sHRy8iCzrJQq9p7gfGfwX+1y/UwnnKeRTjX9D7zYe7SuqK35IUF/tdTpGbA2dlH38jFFK5ybe7OtkaV6Q6u1GyGnX2xuFf+i6wDPd4jHb8oaFnj5vGarp7xqc4a/uGHIi33q7oLClhn3UqTi6tKrjTEIchv2ply8QU9mpouobEu3jLdFumUsuf7w7gmudErEHADTrank8Jk5qI7EFn1thyfmKIHmpuWEAWj5OhfG187gCh4haa3HOy2CBSewP5ISbLm/pQDb8OBWCNKfwbP/VzdgblcYDi35H7nMo4Q7ZbY8zwDclymkFiMIGDs0q2XV/izne3/L7V9pXk4L4e1MHp6+gihn8W6l3KnfpN4uoZ4kEPBTRHSr5SZpqu0nDyR3c72IhAlHAcVfpOfFzziN2EPZraMOBxHVGR837yIoVrL1axsxXCf2HmQbKSUs9zaG599mL1MhgUjYIWlbjmZFDXgUc7U0sMa+IG1MbL/IKTte5X+xS+H0LauzkF47Dn7J07NU6pJ7ZkRYYw1cIcPTMUCbrl5WZXZPN5iMrGBXbQYhiRYal22B3xCCatohpWsU0YzLA9NhyALV8BlS6Tm3HgKjXwWCEIMZAKph0W5SwM4oLOKtcUJH7FIvLoZPXkqFWI7PFjbi2yVwbBc1/yLdkAUbUh4Mw4Mi8QjMK4Szd6AjOpQ7P1zhN5eh/mrjeDK/9Qt7/U/z/7EQH/FybYSKHvYhS2Frk3Lab1a4BAbmf7pGLxkk6lAln/FROnJ8Whra8om5S80dhW7RjymWoxTvnNB1rR5op9e1zhTHIjYXbbN6zIKuEkB4tg1sJNdBIHAg0TN1nRQybQhSqXc6NiTNDAfN29fAxyoB+BBUaSx+UiiR41qrhZHrc/TkSS0AV5Fr9m+YqB8zhWzMIuTOW8gYqhz0ZKAH7O06lZFLCGrsBc+4KyVyLNqhD+1xCo6VTxPT/GJqJPUSu3qM454TbX4+af2j2b+LjbE/60O3iq7eyuTJhzPzxFfpVQKBEijSOs8Ud7Z3poElCAfhbYG5Iv69q5PqLejPAc3m2imwEtI9nILAqpvqNtf1OcuI1H0+eGCWdKogm1k2X2/Ujk3qNyn7yhsZpyvGL6slwDpSRU1PQVy5JJp3STVbN+Jkb3Yi0dMrhClp40AIFYulVOVAbc92JxPk3oUgwfSrUiT0YewF3wB0rb/Ecq/DVr3pC5wRJ5Q5ljNZ133IEhxzM1K5gQ5uiohBO2K5C91yBFtUQO8ZM+cJ3JyHSgrnX9ieFw7eNgFarqawEAJu/V5Z81vfuZWWBMLK+1PhZDvN4+5V+nPZ/yE7S/xvmDC92Zm+QSfbbtp4CsqvtKZQdgxT7cAzl5CDpWcSboDBrwBWtfsWL5oKMFWn34NRvsfgPK6iDT+aTuGhvEzAnvOZltH7a5PeJw++A8ZIPaUEk5nHxJC9HdhilzBQWdPELy1Eckvq8VNixzlS5GN5LgED40HBICEZLF8cyOv8Js4sYWoqFpU4P7g3lAryCLA1hKOsxmHaAPW/GKsBq6VmCef6CqX6xfjLveLVUKyPTpgNjwyOQVjsT+YDzX9gWlz7F3A9oNRAo9N4VKEN+4K0p/yQYVa4IaU8xLNC+V2/jM6XJursKJi1XaxgMT3bhnytCwvD5pBOjzUXsXihvQhKliexAg1VEEdNteiaec2DxCjmv0YOGLqPGqKWqI17J5ZcwJWoXwHCZqMMKJ4jnlDP8v8kU2pkTjQ0JI7CDqpC9UpAyoCN/hsVNxXh/otXtMvrvBv0O4iv4e7Hiu5m/KQ1Qt9TuxS0Jrs3XExnGnDKJRaT+e48kI3bFs7SjMzHpJWmmkV9QSf9F3KSuowQ9XBc+diOScEc3kCh5k6XG1z9oudn0a6ppGgfV93ZuiOKkhPa1yruR5vG//nWPZGOMfa8yzp87nkt1QOK+Nw4G5DqCkdQjwjKnxUF879DiQtFgj5TTC46/csOylc52fKYMIuxET3NbuwUdTskCHZwLPmiZWAj6R86pTypSd32LrWA1k8W1Nek2ew0GwD7ntzQ6pa7lfNrjTOowlbjGwYYjNSi/RrZ0M/5BTeyDPrqCs6Zn2xvKxJ9wWbraUluH+tGk3wUblwqhviyfz1DdhatlyEZ9reICpRqb8dn+UYlkEssoPo+enhYKQyukF990F1s3iaEYLmrrx6tfrDBJROfkQVT2WKz2Zu5MkClHb25ebo0qaYqgwyAWLoDeU55g53D0lbg9GVnTsiMsDtu/X7mfjSnPPQNYGA6gJMUQl6QZEkcgxsBkWLAgw7IxCanHu4awdDS3aeSOJeVV47p/FHXufXV8racnaNBOAFKfOaTrUwh3aegk3a7eIGbe46Go+puEChZzHZoDjmQ/pYpaHbnqEuPfgmO9hnD0dHv55i2toi/7IshQ40IymPUjz4rHrWndcz6BwAoJKTtK1N40Zgt/D9cph5hPOMsq4AAtNfhxB49JARCb4d0Wkg9XV4rWqLGyILpKZPGXr6ENtm8vL5/LjLR/rhirlXoouExCq8IJe9KuNdpyJZz7FPwHVaqoXjjcCr8sVbQCyajojmcgSymLHLNJeCcvPoCRLukt40PzY/yjiRVmFyd7HRLv4E+znd+sreCXRQ0K9P0u0GtLQPa94c57soJ4EY6Ytf0QMGYSrNyuQjPKQOyLEaWRR2+4Qxs6U2CTHceJM/IjsKkocjb9eQnGCXw1NvSMumINhwbZRcpayEcxu/f5t/gk1emM1oFxnc3Abr7aLBgk+DcE3tf/HYb4+4CMVN8x8xW62X7xzAqBC7qe5qR81fge4Pg58GsqERnckJcr36wBvvbvXP+S8h9kE0ebDRURV9TeMZ51Ko+yXkEvohglr79TwhkY/acug4itGCUlDytKTXD/SLZ6JPrvCEnej49QQsDelgNBGYWbDq/SX7LMGO6MgLq248tgDSQimzXAAFAB1Rh8Gwc7C+xANmw7ENiPg7dXMvuA03r/hSJYdLB5Ogkkg1Y8IvSuNZ8/44hiZIkynX3GnZYE0HsUFhfM9yimqyFhiDCvN4Ym35EhN+luuy+QjOQF2NM1AYuuVIY8e0Ub5J2v1ISUV7zeMpNG2VUpPNmwPf180+FzO6ONRigfv54X0djwKaXAJdrIcNqAfmT7xWpIXwIHITh7UzSLSylZKq/TBKq2jXKGqGNft4QyuKTLgHZh+aJo7DMFihLOX/K5uQsa4QOhIjIqOXMWid6T8QihfANxO4gs8CNnRLNaMWPUgrpOsKszm0twEPJFFRTXpFToXLA57h7r3Z77GhLroPKtONdo+qnBQebh5F+X+H0E1uHyhFuAXCUQ5sv3Msg19pKNrlLowaZl8xKR65SoPP/TRP6XWEi6BsteFn0Hc7khwzdAdKOYyqfUHBKynDOeKc9+QxzFIa+F3RTf9ofuHk/NdQ5z8eCNeeCcoBadD2Zeb0fcjf1BaSdqmFFo2hcdj+pULxrEd5ya7h9Kg6oRhuvtAAHzhI8BWyZJ9RXqACWx50PK4+oF44BOIo9bwm4G3HEbrfFIPB6awNwwIRYvsPmgNf5VykznBm/5FV5J0bBLnymeNPgrWEHMAxROvlpE0c0I7sqzhPLOsiPGDOQVsV7o5Jsggu/RNFaVPwQnhnBvLjL8SLtuNSV8qbvpyHlXfw/Z7XZSeC5LFDNuSTGz3RzwBC/LgtjwhO7JJ/n3IWY42C3P/ytAwJynMd9Iizf0WX5ei2sDpntkh0FVmO7qk76ILRPhk3UsnSpOEEWvwU4MHALJJ1yvHiMZHhC9/nrb+QJIuwZ6bHeXFXBRHtmMcEROYRErw4HHKJnnvjDcTYwoE11l0j8V19jcoa7k8JzWx4KJwynBcaoq6wdstm6BqHBVsPaJK9tb5QmgwscjPZui9+epQMITKueISBqEvHR3ncEJ3VelqIGIz5e2dt6oHxDAvszE7VVxoxpFeKHgsqEgIazdXx8eR5HsWj5Mj/1+9BGwzhcCNJcf3eRRGBfy1of5ymokGqHwZ75ju7cyzKg+WHGa/uANqfpEtPToYoyIVUReIpBBCegy/BQz2vfzpbqgYn3/yjsKIR7szLQF003H+a26bYQnlTDbFEzfdqQDp2UfYp3V+gNZ0w/i93AYCmbEMOvqW9jSC9Dwq8cus+ehZgi2f8KUpg7iM6764U31ggFZekeqJL39U09oHApZDPnFQscF9zunCpTqAa/6WFfB+0QNcpKp8KyKc2WtsgAqeFOlyvVUoJOQOqJta/7hRT5SS+vgzSQLXyipbJd51hqCkQFMbIwhzfvgx5hCEgG+IJ2out1LFvjh+WSIxTdb6MfSDsPDu9xxhUrkmCcRSv7xNsFqSlcUBL12M+gVrcxJFf6eZK7MxFzET/9zXk9ITt12B7MsJ5yJN4d46JcHqTARb3fcsR2nrZtwIGmapQFsznGzCgyf0shl75ukeqTIXcxVqCBSR9MXKYcu/qjJmNqRYa8P510zn2E7p/M0hOeQQipX+JtHhKSingTZLxDk0YJMFr0LuAxGbjA3LM3zKWLQ9RRB/5XCtL5JW22DPjq8aO2pv8kDIRI88F2kH+nU/qUWeBs0Alo8FqiqWChbonZSYLZp8ABXo/zftGGGo8Aw+q1nezuYRyEvabE0Xrnp4yIRj/iSHuXGRxU1mzCtX4Dz9C1TPH6nyNRXqhKHD1atzf056kEcSXaNMGm/SZh31HjxG1awKnpQWJEdhiJfqkYeDpfEaPM9UqvCXuxQdxiPh6whW2qxXbaB1Q/wJu1QERIFmCOj0E43jYrSXhl1tB9MVtcPy5GnD16eWUEhGQ6S7YpXZoboqwriOn7vjdgUSzc4WLsHbN3A08bK54CBnmMEYQdSNNcQx7VOzui8piWt3drmt3Keyp2sr8UiOXPzC7lY82GychtJ2glZmVUTUzCF3L/cVOIonpdjLHbSSXYb2mSZkY1scwmqyLA+M9TAEZU7hALHHKkrAOcDJVicGzQHVjIlXOcxG5zv5qJj+zzZtrSKUnUpKMkxFePna2W6EXTBtwv4L9XmrJCd5MO4GTvhcHmoQBMQPe8QISIqJlMPIsmNYbH5AQUaLzDZK5sW6dTWso784rwuOjs9v6fq3iQq29fk1FgZCBIvQPhk3wWqv1Cm+0A3VIfYENEHUnw8nFehkst010wGtbnIhDIye/j0Iqt58j9mEBvicjK3X6c0eij9jP1ocIjWlkeEBrcsEjBzEZ4oNqiL0lFoU+myNs4KM+c6A9aDXV1sapL8qK3cwv2bDLY2wPPa3BUe71lnEXLDVAlRZUVl9PmWZ6pyaJQb0CG5iZb65C5yxPiENSdumMPd5As2IDRsRHn0DWpYN+dSYOFczpOiYNiwGBs0EJRV5zG5YK/ophQ0Jl1BvY5HWx4Zp4awMDYem1g9rgQLo+jrdHsTdyTwZBNPxAX7rBYDV1QsCDOhf4Ww945Sxw2Lspnv++0BBypVJeSmCIzYL3es6JIO++PkV+INtcBcsbQg31wV1P8fLVpdu8PfkR9lybAFy3blkf7e4vQijCAwXVUa/W8dMzBuvPm2Eg5vaxYsv6EaPy8zXnDbrL7CcX2WdR727ami2iHorknZGchtyz1oyc/Fp3cL5w8u/3Rl0v4N3HAJQYHzcQfSkiQyMlYAyt2oMUyHB85rTO/AgOQ3A0LtmKFc7LFkHsBP/AVcstjAdpgvDKLhowU438CmNPwojC2Oqb3C8+QXAImwL4OHOsCHCkOJgUnwmHAtCnpL3whS8HMVUOZxj3Z8gCR0odxxEhreJQVECZlyrqILXJy7zGBz+3i/kCUOmOT1+wzuiZrKwUsS1gkJvYVpDcaBbUNBHsvn4VEJ/lxkIkkLU253ScsKzx3jcoXidkX/WcuIF/Ikws2ighM3uXPZ0Se37DjT1H+28BjtnUHb7gSobOQyO913swmV75UWL8cMAjhM9QdKhfJc6nJ3y+m+MaC7ep4NaGIf8o0S46Wj8TyoHbV4SPFTpNajR49FikOqkca5hVkjRwAbmZYq7hOzrgvbN/VWEbGQ58rJTU29BqIHf3DWaTmQgK/tzaB8fPjeERu6TcCD9RN5xKYRujGeJnfuT5GLH6Zy6PVQaRoO2bOLyE3P25en3+qWrpFs0zTJ/Nf/1u482GbD84iGDQpqIkn5p1GUXWxV+FL7b8w7cmZ4dY7L+QJSSbndn2n6zPtFS0JUbU+KpKu9rSDo4JahviOf14HJz81+OX/XWBMAePLWJR2H/CctlDr1n3ikh82sTU7LChIw+Ihi/baSbO/jsRKZ0fOE1tJ0WbRwR9KiApTt0z8F77oEdmZLN1cOn9FTIFoxlGi3W6rPHMTZaVOz748cmYHtKUSpSWM6b4JaQkAAinfKG+WtySX4Usf5TzcfM9eSkWRSXypEyFa9UBJFDn0GUte1GWfaqRw0H1YSHSzhgPfe6Jl5EZvr49GMCzaRg/7wbdjz7dX6ZXac00NrRG9Xv0Zo8RtXsdvqrbmttf9HGt2KM/2hvmGy836/R0T0rwiwxTQLUjjbDa0Qdu8wi9tMw9NPuflSkRVSFPNIH4qSX+sBHFuzSLPzHWgdowt/BjPXzNh0ohC2owxT4SXtpWyt5Nf0K+X4F0iQhzcqr32Evx470uEds1e14IlFrX3r2mnBmf7lp5mQ7NAVV4ihtXYjQvBKsV0C5gBVqpe28IqlQzWMtGqQlsFsd2YYu5bbSxzl1zdLuXEhB97MgzKzGzLGOOXidt+Y2ZAHgLmQbx0MPxN6mCneBStE0+CgsB9wwR08BVfrLKQdDTa5WMvxIxya6UVnKzuFaG5llnviKTdojECrxjJoo3fzkFy7kSbPABOgPN/R+pErbWMX3fF2AgzJD0pSV3WlU2++I3znXzcpcDzKFdFo27vFimegHROsJmDs3ZUUFe3gZrceYJVOqlGgVa0UWGoyVWqj+xJ5U3PyZfYcUVwtzK1jBQ4OhvuZzg4T1taICyAeoh7eic6h7x2e+NKuERpnX1swOnAYE3qXw83IJtARwQua9bhPb8oxM8Eori4kCMLsdciNKg0fYC8xTxkChf/SHm+yUMCuKc8XTvBFaDuYlH6f9aRtsaR0ZOsK4Nvvg8pRBUR/PPMfzj/QiWQUtJowl4z0bEQjRERhGdRjKldVj8Plgz3c9RrSIPmQQ68z3221uve2unHIkq6VsuuzuAG/YvIW1+LkqAShOrHBnwnnG7UAfholNKXSmfKUKa5End6kbDvWiCaeKmbyxrOMEqJRF0NDqN7N3vXBCwYuXdGKVx7EhJ3YVuOG5wZgQiEXUQMu7ri20Pqva+zXhw1LozLrctcgrSfGzR+b3OZLKNxu+NCJEn3ctAb0t7nOl9tDNv1jrLmQAtP9+Ui4NXivYl5suvtA0vIP8hm+rohXf/coZwynxvOPcFi0e7k8l3BxENsnZcpQQGFS9T2h+X1lIpWrKO8F0VG+F9aQzmKn0/Z/t1YHlGIALJ1ouQ53Xc0ARlqsslRmGb1zLa90dlmy0uhqPYfNdqCLsvsBIpUvQsZ2+M5XR4/6wvIJz3iMKlnClfqBQ7HN/MgsMlBsYr9Zrj7dI14RxLaZ1GniZ2RxhD+FXMhS3GFScypYcNhlU35T+Q0m20TesnTXET2HNzPTStNXqpArZ7WqUYZrYRE1u7HDqO5vpoQ5MIdkCf7UTkcuW95gBcA/YrvBS+4DFvlUKjdGjCBcv0DLCQXrjCubM1AW4h6EaG9dq60PyQHcdJ3xduKO9GZ23V7yl+G/DFi1dTfGG4UeibJs4dBYPWvOuTVAoFkcCKRZpwz3Sy94iiM6KcTYiINB+fIgwsYSEB0Chgn044he1kUBuT7p9g5Vr3asYAHxZ52sEFtQiGlBaFo7gnXfF4TKviE7wK561pH22k6RGFECuIzLJsbe6cwc4ujjIOWPaNbKqnxzRk2wDfRGX95PELZnzUwwKkUmW+XbwnXeuqWt9emH1xRTvsJa+3jkn9ToXpYXLHzBAhHI58By2nbEv8HvtFUlRgO8HHnjhoWL5EqRquiqT8MPIEy8p84ymBk9ewpL/eoQo56Ynd1pDaRqiekdJQ+3Gr6EnwiW5jFDF5c9G4H5qp16AF8rG2borvvaqNDK0Gj9l6eDe2p17460SqxL7AvIea0ZZfUt+hFGO9FPkFPgeEbZ+F3RQ38lpFVvpeLCgqL6RcmY6dTtGNULzeD8MoNUr3Ql0UbtgbMMjG/qWmEb4/dSB53tFSitB99AbQ2QWJ470d1Yeh+vzrlhhQC/eb3/K1DuJCmt1OY93AnP8MqVe/9EpsS4/A62rl+x+sHPq7luJWW3i1sCNkwUGwXMmkGFIZR1Nptk2PeWMSxDvyI2cXTvVZPyh9Io+gARrZmmWG4TPudsRJHO4eQHubrQE00gCcSI7NAsAcCHY4s2A1mgHm6LrACs9j9oTy3c8sWHAUcsnm4YUYV4n57QV//2/W4O43Z/zSECY90Ly8bC5wqKtdNe+mTc+GvA3xNLT4ucOV578irsEHF0/h6B0ar8lQFcqzuAFplLP7MJX7QZJn67lPC9X+VUiI5JYEvWZxqI18nep4jo95uAXXJNan3pw77fEzsG1Rgva03PPROMo3qDBT8usfTl+6kvPE16BBgTov6tV7g7uZlVA9KghBDEFJBEgYELLmD/NtumVE2tnf1pT8xxEihNxqaUM6jccC+Q8FlPNfoXPvjEIby8wWYQAvIkR9zgw/Mlv3g1MOw158Bclwxa/UouCHqqVYeySHU9PVVE90bC4bcDhsN+YPqWrgQEopZzvC4E5VXB0oqfSbu49y30/ciVjB931ERYNIdpjX68orRg+yJCm9oHJg5VVSm2E61nX1zzMkelUIORA24D3HYEB/Yw+6G/oTY3j9kpjcMcMQsMibc0+2SfB1q407WJpK+TZ7QjaYTx0z4kOWANkES2ulFvCtlQwhZjKm+Tawykr1ph1uKMfMSZdJ17sB99wdqozRp1ivzxJ4XFiNWobRF7AuAY1UarQqTy+3UbV8Wh6tj0fvS+Md+toF+tX1TYixEX46MFrWqyTObvfbdrxnOWxNnYg6r+D346gpvKcMo5lTpJz/pU8ANxrxNbKBgnQYlYj7pnExLaG6b3/GwT4OiCmgOJloeJjuyEJGlmKqu2Yolyvuj34MqiM3j1oMzRVn/ZR69IiOjOHMqly/gjzgvB046/PLiueuD0uypG2KmQQ5HiddzWZyIgtdaTlkhCElrL8shtxDCA63lyscpfDt3ygtLs3pyDxUgNXU0E45VrQ8E0hW34wADpH9pT6O8PsCRnYOI6l4BVd4ZeFQIS3t+LZO3Wcbp+2J3m8TorRU9zzYjvDRIq6fmH1iwmf70HP9PeeRrzFpqXYrPJfC1HDB6UXl2kHcEem1qYZg+SAl8otQILhwQ5ySA6mwRCkpAL4fFoHaeH2HMw8gLr456W3fLySobb7hC3whBMqZV8DpXEmConJ5u+J1CxqgexNrbog1WfloFt8LuXWaQCurGmeTFyoMZNr7YZgDxa6ChtEXEhYOxB1fiiaZ0M40uuaYzjnvSVJ+pQ8b7QjDbzrm0efFyA+0XbOWD4GFiERfI9viAE+d+rgnetGnxdT0pt0Cxzj09VAgdtjPinUB7e5d+mVFQ8/shw/uGj9br2iZ17B2ZvZrA+HMGRtNHeO74sdYsmUKldtE/BN3R5Q4R6DFic4WnBEZRQfZghXBmBXAK7QJekVM6kQ1WDZvnEBbBRMvCdCyVsjNZ60nGxsB8IsLhbZna/cfMvLTZZyneXvZiL+1Bl+oGC+hc7zynXk0DJFsvYF0ERlieX5Vh757Dh3Plz2aNFYf5VfbNpeLBlsrlG5+q0twa1YoUmjtxspkofXs+n/rcHue5myO9UoaXNu9oJWSC4tgp48qI54/2XAvlfE+xmhWyXTJHSZPBJBmA3ZLAQdk8mXRt6h2s4VsgijFankEE0njFqvqax9hSCsHguYCL7NWEGvpBpwt1NVo02BO9QnnxWW75RtTeacZYc7wuRhaQfZ8RrsMIzO2jhHQ3c6/3yvNqFf1uNzFy3PoaFbjD9Em/nH9tIrRNAWxBbHzjFmHa/J20wKd2vtEbMxeC0ErHloy77H5g8NmRwOxfSye6xmNsO67uRLGv4EcnERijc8oN3kEsjeXbaQQIF5h7rfTKicfK4Ebzrt4AEe2O4wkoef2/v+0SIAA==","catalogue_think_content":"WikiEncrypted:","recovery_checkpoint":"wiki_generation_completed","last_commit_id":"c4bcc4620b1e5cadb33e1932ece211ae4652e03f","last_commit_update":"2025-09-16T16:10:37+03:00","gmt_create":"2025-09-16T15:45:53.1093057+03:00","gmt_modified":"2025-09-16T16:29:58.3831883+03:00","extend_info":"{\"language\":\"en\",\"active\":true,\"branch\":\"main\",\"shareStatus\":\"\",\"server_error_code\":\"\",\"cosy_version\":\"\"}"}}